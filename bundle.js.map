{"version":3,"sources":["webpack:///webpack/bootstrap 8217dc63c0a8cc9e57b5","webpack:///./src/index.js","webpack:///./~/plain-jsx/index.js","webpack:///./~/keyboardevent-key-polyfill/index.js","webpack:///node_modules/browser-pack/_prelude.js","webpack:///dist/built-in-rules.js","webpack:///dist/ohm-grammar.js","webpack:///dist/operations-and-attributes.js","webpack:///extras/index.js","webpack:///extras/semantics-toAST.js","webpack:///node_modules/es6-symbol/index.js","webpack:///node_modules/es6-symbol/is-implemented.js","webpack:///node_modules/es6-symbol/is-symbol.js","webpack:///node_modules/es6-symbol/~/d/index.js","webpack:///node_modules/es6-symbol/~/es5-ext/object/assign/index.js","webpack:///node_modules/es6-symbol/~/es5-ext/object/assign/is-implemented.js","webpack:///node_modules/es6-symbol/~/es5-ext/object/assign/shim.js","webpack:///node_modules/es6-symbol/~/es5-ext/object/is-callable.js","webpack:///node_modules/es6-symbol/~/es5-ext/object/keys/index.js","webpack:///node_modules/es6-symbol/~/es5-ext/object/keys/is-implemented.js","webpack:///node_modules/es6-symbol/~/es5-ext/object/keys/shim.js","webpack:///node_modules/es6-symbol/~/es5-ext/object/normalize-options.js","webpack:///node_modules/es6-symbol/~/es5-ext/object/valid-value.js","webpack:///node_modules/es6-symbol/~/es5-ext/string/#/contains/index.js","webpack:///node_modules/es6-symbol/~/es5-ext/string/#/contains/is-implemented.js","webpack:///node_modules/es6-symbol/~/es5-ext/string/#/contains/shim.js","webpack:///node_modules/es6-symbol/polyfill.js","webpack:///node_modules/es6-symbol/validate-symbol.js","webpack:///node_modules/inherits/inherits_browser.js","webpack:///node_modules/is-buffer/index.js","webpack:///node_modules/util-extend/extend.js","webpack:///src/Builder.js","webpack:///src/Failure.js","webpack:///src/Grammar.js","webpack:///src/GrammarDecl.js","webpack:///src/InputStream.js","webpack:///src/Interval.js","webpack:///src/MatchResult.js","webpack:///src/Namespace.js","webpack:///src/PosInfo.js","webpack:///src/Semantics.js","webpack:///src/State.js","webpack:///src/Trace.js","webpack:///src/common.js","webpack:///src/errors.js","webpack:///src/main.js","webpack:///src/nodes.js","webpack:///src/pexprs-allowsSkippingPrecedingSpace.js","webpack:///src/pexprs-assertAllApplicationsAreValid.js","webpack:///src/pexprs-assertChoicesHaveUniformArity.js","webpack:///src/pexprs-assertIteratedExprsAreNotNullable.js","webpack:///src/pexprs-check.js","webpack:///src/pexprs-eval.js","webpack:///src/pexprs-getArity.js","webpack:///src/pexprs-introduceParams.js","webpack:///src/pexprs-isNullable.js","webpack:///src/pexprs-madlibs.js","webpack:///src/pexprs-outputRecipe.js","webpack:///src/pexprs-substituteParams.js","webpack:///src/pexprs-toArgumentNameList.js","webpack:///src/pexprs-toDisplayString.js","webpack:///src/pexprs-toFailure.js","webpack:///src/pexprs-toString.js","webpack:///src/pexprs.js","webpack:///src/util.js","webpack:///third_party/UnicodeCategories.js","webpack:///./src/grammar.js","webpack:///./src/utils.js","webpack:///./src/dropUtils.js","webpack:///./src/components/structuredExampleInput.js","webpack:///./~/checked-emitter/index.js","webpack:///./~/fbemitter/index.js","webpack:///./~/fbemitter/lib/BaseEventEmitter.js","webpack:///./~/process/browser.js","webpack:///./~/fbemitter/lib/EmitterSubscription.js","webpack:///./~/fbemitter/lib/EventSubscription.js","webpack:///./~/fbemitter/lib/EventSubscriptionVendor.js","webpack:///./~/fbjs/lib/invariant.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./src/pexprUtils.js","webpack:///./src/makePexpr.js","webpack:///./src/components/pexpr.js","webpack:///./stylesheets/components/pexpr.css","webpack:///./src/components/apply.js","webpack:///./src/components/seq.js","webpack:///./stylesheets/components/seq.css","webpack:///./src/components/terminal.js","webpack:///./stylesheets/components/terminal.css","webpack:///./stylesheets/style.css","webpack:///./src/components/pexprWithChildren.js","webpack:///./src/components/star.js","webpack:///./src/components/plus.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACpCA;;AAIA;;AAGA;;KAAY,G;;AAEZ;;;;AACA;;AACA;;AAEA;;;;;;;;AAXA,qBAAQ,EAAR,E,CAJA;AACA;;AAMA;;AAUA;AACA,KAAI,SAAS,cAAE,SAAF,CAAb;AACA,KAAI,gBAAgB,EAApB;AACA,UAAS,SAAT,CAAmB,QAAnB,EAA6B;AAC3B,OAAI,CAAC,kBAAQ,KAAR,CAAc,cAAd,CAA6B,QAA7B,CAAL,EAA6C;AAC3C,WAAM,IAAI,KAAJ,gCAAuC,QAAvC,CAAN;AACD;;AAED,OAAI,QAAQ,iBAAI,SAAM,MAAV,EAAiB,WAAU,MAA3B,GAAZ;AACA,UAAO,WAAP,CAAmB,KAAnB;;AAEA,OAAI,eAAe,qCAA2B,QAA3B,CAAnB;AACA,SAAM,WAAN,CAAkB,aAAa,GAA/B;AACA,iBAAc,IAAd,CAAmB,YAAnB;;AAEA,SAAM,gBAAN,CAAuB,WAAvB,EAAoC,UAAS,KAAT,EAAgB;AAClD,SAAI,MAAM,wBAAQ,YAAR,CAAV;AACA,WAAM,YAAN,CAAmB,OAAnB,CAA2B,YAA3B,EAAyC,GAAzC;AACA,WAAM,YAAN,CAAmB,aAAnB,GAAmC,KAAnC;AACD,IAJD;;AAMA,UAAO,KAAP;AACD;;AAED;AACA,UAAS,IAAT,CAAc,UAAd,EAA0B,QAA1B,EAAoC,OAApC,EAA6C;AAC3C,iBAAc,CAAd;AACA,eAAY,CAAZ;;AAEA,OAAI,YAAY,cAAc,UAAd,EAA0B,KAA1C;AACA,OAAI,YAAY,cAAc,QAAd,CAAhB;;AAEA,aAAU,aAAV,CAAwB,SAAxB,EAAmC,OAAnC;AACD;;AAED,QAAO,IAAP,CAAY,kBAAQ,KAApB,EAA2B,OAA3B,CAAmC;AAAA,UAAY,UAAU,QAAV,CAAZ;AAAA,EAAnC;AACA,eAAE,UAAF,EAAc,WAAd;;AAEA,QAAO,MAAP,CAAc,MAAd,EAAsB;AACpB,6BADoB;AAEpB,WAFoB;AAGpB,uBAHoB;AAIpB;AAJoB,EAAtB;;AAOA;AACA,SAAQ,GAAR,CAAY,kBAAQ,MAAR,CAAe,QAA3B;AACA,+B;;;;;;AChEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uCAAsC,OAAO;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC9BA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA,eAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA,EAAC;;;;;;;uVCxHD,wrCCAA,sBACA,+uFACA,4DCFA,sBACA,2wiBACA,4DCFA,sBACA,spDACA,0DCDA,aACA,eACA,oCACA,sDAEA,0ECLA,aACA;AACA;AAEA;AACA,qCACA,8CACA,sCACA,mBACA,eACA;AACA;AAEA;AACA,sBACA,+BACA,aACA,eAEA,8CACA,yBACA,+BAEA,QACA;sCACA,CACA;yEACA,0BACA,SAEA,CACA;qBACA,aACA,aAEA,CACA;iDACA,cACA,aACA,8BACA,8BACA,SAEA,CACA;AAEA,EACA;wCACA,0CACA,SAEA,CACA;gCACA,kBACA,MAEA,kCACA,qDACA,sCACA,CACA;uCACA,oEACA,6BACA,CACA;YACA,+HACA,CACA;mBACA,oDACA,CACA;iCACA,0CACA,iDACA,iCACA,cACA,CACA;aACA,MACA,CACA,CACA,OACA,MAEA,gCACA,4BACA,yBACA,OACA,WACA,oCACA,SACA,CAEA,oCACA,8BACA,WACA,MAEA,wDACA,oEACA,UAEA,oCACA,OACA,GAEA,GACA;AACA;AACA;AACA;AACA,4BACA,gDACA,iBACA,+DAEA,mBACA,iCACA,8CACA,0CACA,6BACA,yBACA,UACA,CACA,gBACA,0DACA,+BACA,SACA,CACA;AACA,8BACA,4BACA,iBACA,mDAEA,oDACA,kBACA,CACA,eACA,QACA,gBAEA,4IC7IA,aACA,4DACA,4FCFA,sCAEA,IACA,4CACA,qBACA,yDACA,8CAEA,MACA;wDACA,oDACA,uDACA,uDACA,uDAEA,aACA,MACA,CAhBA,2CCDA,aACA,0BACA,wGACA,MACA,4CCJA,aACA,mBACA,+CACA,uDACA,+CAEA,6BACA,EACA,kDACA,mBACA,mDACA,SACA,YACA,UACA,UACA,mBACA,GACA,eACA,KACA,OACA,WACA,sBACA,0BACA,0BACA,KAEA,wDACA,qDACA,MACA,EACA,wCACA,iBACA,+BACA,SACA,QACA,QACA,UACA,UACA,mBACA,GACA,cACA,KACA,oCACA,SACA,YACA,6BACA,KACA,oCACA,SACA,QACA,UACA,eACA,GACA,OACA,WACA,sBACA,0BACA,KAEA,iDACA,qDACA,MACA,4KC9DA,aACA,uBACA,6BACA,eACA,sFCJA,aACA,yBACA,0BACA,wCACA,gBACA,oCACA,2CACA,aACA,6CCRA,aACA,iBACA,yBAEA,2BACA,IACA,4CACA,uCACA,yBACA,kCACA,iCACA,iBACA,EACA,CACA,kBACA,eACA,qBACA,QACA,2BACA,aACA,MACA,6ECrBA;AAEA,cACA,4DACA,6CCJA,aACA,uBACA,6BACA,aACA,sFCJA,aACA,yBACA,IACA,aACA,mBACA,6BACA,CACA,6CCPA,aACA,gBACA,KACA,+BACA,wCACA,SACA,6CCNA,aACA,kDACA,OACA,qCACA,IACA,kCACA,MACA,EACA,8CACA,mBACA,8CACA,kBACA,+BACA,QACA,SACA,QACA,6CChBA,aACA,8BACA,oCACA,sCACA,OACA,6CCLA,aACA,uBACA,uCACA,iBACA,sFCJA,aACA,QACA,aACA,yBACA,2CACA,gEACA,MACA,6CCPA,aACA,6BACA,QACA,mDACA,sDACA,EACA,6CCNA,aACA,cACA,4BAEA,kEACA,0EACA,oDACA,MACA,2BACA,oBACA,2BACA,eACA,0CACA,wBACA,iBACA,eACA,+DACA,4BACA,QACA,UACA,MACA,EACA,IACA,2CACA,qDACA,0DACA,eACA,qDACA,IACA,wDACA,qEACA,yDACA,4CACA,sBACA,wCAEA,kBACA,yBACA,oBACA,4CACA,8CACA,MACA,uBACA,IACA,oBACA,6DACA,MACA,4BACA,gDACA,6CACA,gCACA,+BACA,gCACA,gCACA,+BACA,mCACA,yCACA,yCACA,kBACA,wCACA,eACA,uDAEA,KACA,mCACA,iFACA,oDACA,KACA,uDACA,8CACA,2DACA,WACA,8CACA,2DACA,8CACA,4CACA,sFC5EA,aACA,qBACA,eACA,8BACA,+CACA,0BACA,OACA,iGCPA,CACA;iDACA,aACA,2DACA,aACA,OACA,gBACA,eACA,kBAGA,QACA,GAbA,IAcA,CACA;iDACA,aACA,2CACA,+BACA,4BACA,uCACA,KACA,EACA,4CCfA;;;;;;;IACA,4BACA,QACA,OACA,UACA,+CACA,qCAEA,MACA,6CCjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,uBACA,2BACA,CACA;+EAEA,6BACA,gBACA,iBACA,0BACA,IACA,OACA,QACA,4CChCA,aACA;AACA;AAEA;AACA,0CACA,mBACA,YACA;AACA;AAEA;AACA,oBACA,CACA,+BAGA,yCACA,wBACA,MAEA,6EACA,2BACA,sBACA,wCACA,eACA,qBACA,4BACA,kBACA,8BACA,2BACA,QAEA,UACA,sBACA,mDACA,sBAEA,mCACA;yBACA,8BACA,0BACA,uCAEA,OACA,2DACA,8BACA,mEACA,gBACA,iDACA,QACA,oBACA,kBACA,QAEA,+BACA,4BACA,GAEA,+BACA,8BACA,IAEA,6BACA,yBACA,OAEA,2CACA,WACA,4CACA,mBACA,uCACA,qBACA,KACA,8BACA,wBACA,YACA,YACA,KACA,CACA,iDACA,OAEA,+CACA,aACA,4CACA,mBACA,uCACA,qBACA,KACA,8BACA,4BACA,cACA,cACA,KACA,CACA,qDACA,SAEA,0BACA,oCACA,sBACA,MACA,wBACA,MAEA,0BACA,oCACA,sBACA,MACA,wBACA,MAEA,wBACA,oCACA,sBACA,MACA,uBACA,MAEA,wBACA,oCACA,sBACA,MACA,uBACA,MAEA,sBACA,CACA;uBACA,MAEA,CArHA,mCAsHA,oCACA,sBACA,MACA,6BACA,MAEA,wBACA,oCACA,sBACA,MACA,uBACA,MAEA,sCACA,kCACA,wCACA,sCACA,sBACA,SACA,MACA,kCACA,WAEA,wCACA,CACA;kCACA,wDAEA,wBACA,eACA,8CACA,QACA,2EAEA,iBACA,CACA,OACA,QAEA,GACA;AACA;AAEA;AACA,gBACA,mFClLA,aACA;AACA;AAEA;AAcA;;;;;;;;;;;;GACA,0BACA,sDACA,OACA,CACA,iCACA,uBACA,0CACA,MACA,YACA,gBACA,eACA,iBACA,MACA,CACA,qCACA,aACA,MACA,EACA,oCACA,aACA,KACA,EACA,oCACA,aACA,KACA,EACA,0CACA,oBACA,cACA,EACA,6CACA,oBACA,SACA,EACA,mCACA,oBACA,OACA,EACA,qCACA,aACA,OACA,EACA,uCACA,aACA,KACA,EACA,wCACA,aACA,MACA,EACA,yCACA,8BACA,4BACA,+CACA,YACA,EACA,qCACA,oBACA,6BACA,gBACA,UACA,EACA,kCACA,mDACA,yBACA,SACA,aACA,OACA,SACA,EACA,kCACA,iCACA,KACA,EACA;AACA;AAEA;AACA,gBACA,mDClGA,aACA;AACA;AAEA;AACA,0CACA,qCACA,6BACA,+BACA,+BACA,mBACA,YACA;AACA;AAEA;AACA,SACA,SACA,KACA,aACA,0BACA,WACA,uBACA,wBACA,6BACA,oCACA,yCACA,wDACA,KACA,uBACA,oBACA,CACA,CACA,eACA,GACA,cACA;AACA,0DACA,YACA,qBACA,UACA,EACA,mBAEA;AACA;+BACA,yDACA,aAEA,CANA,mCAOA,gCACA,YACA,sBACA,OAEA,iDACA,+CACA,gDACA,OAEA,iDACA,yEAEA,OACA;AACA;AACA;AACA;8CACA,mBACA,0CACA,aACA,WAEA,gCACA,kCACA,MAEA,0DACA,sDACA,iBAEA,EACA;AACA;+EACA,4BACA,8DACA,WAEA,cACA,2BACA,kBACA,8CACA,wEACA,oCACA,UACA,0EACA,UACA,cACA,6CACA,wBACA,UACA,2BACA,wDACA,QACA,CACA,CACA,sBACA,sEACA,gBACA,uEACA,0BACA,sBACA,cACA,OACA,CAEA,EACA;AACA;6DACA,+EACA,OACA,qCACA,OACA,GACA,oCACA,WAEA,+CACA,YACA,qBACA,gBACA,OACA,MACA,KACA,aACA,OACA,OAEA,wCACA,cACA,GACA;gBACA,6BACA,SAEA,kBACA,0DACA,2CACA,YAEA,eACA,8BACA,gBACA,iBAEA,WACA,YACA,uDACA,yBACA,4BACA,mEAEA,aACA,2BACA,WACA,cACA,kDACA,WAEA,cACA,mCACA,8CACA,4DACA,QAEA,mDACA,4DAEA,mCAEA;AACA,SAFA,CAGA,qBACA,QAEA,YAEA,yBACA,CACA,UACA,cACA,KACA,aACA,UAEA,QAEA,EACA;AACA;mFACA,aACA,kDACA,oFACA,aACA,kDAEA,4GACA,CACA;AAEA;mBACA,yBAEA,eACA,oCACA,+BACA,cACA,OACA,WACA,WACA,KACA,WACA,gBACA,mDACA,IAEA,WACA,iBACA,WAEA,gFACA,WACA,oBACA,kDACA,kDACA,iBACA,mBACA,OAEA,EACA;AACA;gDACA,IACA,8BACA,CACA;sBACA,UACA,CACA;8BACA,yCACA,IAEA,CACA;kCACA,+CACA,MACA,sCACA,4CACA,qCACA,wFACA,QACA,OACA,KAEA,GACA;AACA;AACA;AACA;AACA;AACA,8BACA,6BACA;WACA;AACA,EACA;AACA;6CACA,0DAEA,gBACA;QACA,uCACA,kBAGA,IACA;OACA,8BACA,aACA,eAGA,WACA;AACA;OACA,6BACA,cACA,eAEA,4BACA,6BACA,cACA,eAGA,uBACA;AACA;aACA,6BACA,gBAIA,MACA;AACA;AAEA;AACA,gBACA,6IC/TA,aACA;AACA;AAEA;AACA,kCACA,yCACA,+BACA,+BACA,mBACA,YACA;AACA;AAEA;AAEA;AACA,2BACA,WACA,KACA,CAEA;AACA,+DACA,6BACA,iDACA,QACA,qDAEA,uBACA,MACA,iBACA;AACA;AACA;aACA,uBACA,0BACA,cACA,aACA,aACA,CAZA,CAaA,wFACA,kDACA,6CACA,wEACA,QACA,8CACA,mCACA,sEACA,yCACA,kFACA,QACA,4DACA,QACA,EACA,4EACA,kBACA,2BACA,iBACA,oBACA,mBAEA,cACA,MACA,EAEA;AACA,8DACA,sBACA,iBACA,mEACA,mBACA,mDAEA,OACA;8BACA,oCACA,iBACA,OACA,MACA,EACA,6DACA,uBACA,eACA,MACA,EACA,iDACA,uDACA,cACA,MACA,EACA;AACA,uCACA,gBACA,cACA,UACA,0BACA,WAEA,kBACA;AACA;AACA;AACA;AACA;mBACA,qCACA,2DACA,kCACA,QACA,oCACA,mBACA,oBACA,GACA,IACA,6CACA,kBACA,oBACA,iCACA,KACA,CACA,qCACA,CACA;sDACA,kCACA,QACA,gDACA,mBACA,oBACA,GACA,CACA,GACA,2BACA,oBACA,eACA,gBACA,qBACA,OAEA,OACA,SACA,EAEA;AACA,4EACA,MACA,sDACA,kFACA,kCACA,qEACA,QACA,kDACA,6CACA,wEACA,QACA,mDACA,QACA,EACA,6EACA,8CACA,mBACA,4EACA,QACA,wDACA,cACA,MACA,EACA,+EACA,8CACA,mBACA,8EACA,QACA,mDACA,+BACA,8DACA,cACA,MACA,EACA;AACA;AAEA;AACA,gBACA,kICtLA,aACA;AACA;AAEA;AACA,sBACA,cACA;AACA;AAEA;AACA,6BACA,aACA,gBACA,gBACA,GACA,CACA,sBACA,uBACA,+BACA,OAEA,sBACA,yBACA,OAEA,qCACA,kCACA,yBACA,OACA,OACA,CACA,OACA,MAEA,mDACA,mCACA,QAEA,gDACA,4DACA,KAEA,GACA;AACA;AAEA;AACA,gBACA,sECjDA,aACA;AACA;AAEA;AACA,uCACA,+BACA,iBACA,UACA;AACA;AAEA;AACA,+CACA,kBACA,0BACA,qBACA,OACA,CACA,2DACA,8BACA,sCACA,iCACA,gDACA,wBACA,2CACA,cACA,gCACA,2CACA,gDACA,QACA,CACA,0CACA,QACA,yFAGA,0CACA,0BACA,+CACA,WAEA,wCACA,yDACA,UAEA,0CACA,uDACA,QAEA,4DACA,+BACA,kFACA,OAEA,EACA;AACA;2BACA,wCACA,cACA,6FACA,CACA;OAEA,iEACA,CACA;OACA,kDACA,yDAEA,qEACA,CACA;OACA,gDAEA,yEACA,CACA;OACA,kDAEA,gBACA,CACA;OACA,CAEA,MACA,CAEA,CApDA,CAqDA;AACA;oDACA,wCACA,cACA,2BACA,wDACA,OACA,8DACA,kCACA,0BACA,UAEA,EACA;AACA;AACA;2BACA,mBACA,8DACA,wDACA,qDACA,QAEA,EA5EA,CA6EA,2CACA,UACA,mBACA,+BACA,gEACA,QACA,aACA,UACA,aAEA,aACA,qDACA,aAGA,QACA;AACA;AAEA;AACA,gBAEA,2FCtIA,aACA;AACA;AAEA;AACA,sBACA,YACA,+BACA,6BACA,2BACA,qBACA,cACA;AACA;AAEA;AACA;AACA,sDACA,4CACA,oEACA,OACA,CAEA;AACA,4BACA,YACA,+BACA,GACA,CACA,kCACA,qCACA,2DACA,OACA,EACA,uCACA,OACA,OACA,EACA,0CACA,aACA,SACA,EACA;AACA;AACA;AACA,oDACA,kBACA,OACA,GAEA,gBACA,wBACA,8BAEA,yEAEA,SACA;4DACA,6CACA,iCACA,OACA,oBACA,GACA,gCACA,OACA,eACA,mEACA,iDACA,IAEA,YAEA,oBACA;AAEA;AACA;AACA;AACA;AACA;AACA;0CACA,qCACA,yBACA,oCACA,oCACA,gCACA,gCACA,iCACA,oBACA,WACA,GACA,CAGA,IACA;oDACA,uCACA,qCACA,mBACA,KAEA,GACA;AACA;AACA;0BACA,cACA,QACA,uCACA,6BACA,MACA,UACA,uCACA,0DAEA,SACA;AACA;AACA;AACA;qBACA,aAEA,eACA;0CAEA,QACA,GACA,EAEA;AACA,6BACA,YACA,2DACA,mBACA,cACA,sDACA,mCACA,mCACA,wCACA,8BAEA,6BACA,iGACA,OACA,2DACA,oDACA,wCACA,8BACA,6BACA,wBACA,gCACA,qDACA,OACA,QACA,IACA,sBACA,aACA,0CACA,uEACA,IACA,EACA,wCACA,OACA,MACA,EACA,6DACA,mBACA,8BACA,EACA,sDACA,aACA,UACA,EACA;AACA;AACA,kDACA,mBACA,iCAEA,uBACA;2CACA,gBACA,WAEA,2CACA,UACA,4BACA,qCACA,aACA,WACA,MACA,CACA,yBACA,YACA,WACA,WACA,EACA,6CACA,oBACA,6EACA,KACA,EACA;AACA;AAEA;AACA,gBACA,2HC9MA,aACA;AACA;AAEA;AACA,oBACA,eACA;AACA;AAEA;AACA,qBACA,EACA,kCACA,MACA,8CACA,wCACA,OACA,gBACA,kCACA,gBACA,EACA;AACA;AACA,6CACA,6CACA,UACA,EACA;AACA;AACA,8CACA,uEACA,gDACA,WACA,gCACA,aACA,OACA,qBACA,eACA,kBAGA,yBACA,UACA,EACA;AACA,gCACA,uCACA,IACA,EACA;AACA;AAEA;AACA,gBACA,qECvDA,aACA;AACA;AAEA;AACA,wBACA,YACA,sCACA;WACA,6BACA,UACA,CACA,kBACA,wCACA,uEACA,EAEA,mCACA,kBACA,2DACA,aAEA,sBACA,YACA,oCACA,MAEA,yEACA,yBACA,6BACA,+CACA,+CAEA,yCACA,kHACA,gEAEA,yEACA,iEACA,EAEA,sDACA,+EACA,gDACA,6CACA,kCACA,oBACA,CACA,CACA,EAEA,8CACA,qDACA,kBAEA,EACA;AACA;kEACA,6BACA,OACA,MACA,kCACA,+EACA,gDACA,+CACA,OACA,OACA,CACA,OACA,MAEA,GACA;AACA;AAEA;AACA,gBACA,mDC7EA,aACA;AACA;AAEA;AACA;AACA,sBACA,YACA,yCACA,mDACA,mBACA,YACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBACA,CACA,qCACA,yDACA,IACA,EACA,kEACA,CACA;iDACA,qDACA,gCACA,eACA,GACA,EACA;AACA;AACA,sCACA,4CACA,CACA;OACA,WACA,sCACA,sBACA,+EACA,MACA,OACA,cACA,EACA;AACA;AACA,uCACA,CACA;kDACA,YACA,KACA,aACA,eACA,EACA;AACA;AACA,yCACA,mBACA,cACA,EACA;AACA;AACA,wCACA,mBACA,aACA,EACA;AACA;AACA,2CACA,mBACA,gBACA,EACA;AACA;AACA,yCACA,yCACA,cACA,EACA;AACA;AACA,uCACA,yCACA,YACA,EACA;AACA;AACA;AACA,wCACA,mBACA,aACA,EACA;AACA,kDACA,2EACA,mCACA,MACA,6CAGA;sDAEA,GACA;yDAEA,GACA;qDAEA,EATA,CAUA;iEAEA,GACA;AACA;gBACA,mBACA,sBACA,mBACA,eACA,UACA,WACA,6EAGA,GACA;8DAEA,GA5BA,EA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CACA,UACA,kBACA,gCAEA,MACA;AACA;AACA;AACA;AACA;4BACA,MACA,kDACA,gBACA,yBACA,GAEA,aACA,iCACA,6EACA,UACA,oEACA,6CACA,yBACA,kCACA,kDACA,qDACA,6CAEA,MACA;AACA;0CACA,mCACA,WACA,MACA,uBACA,uCACA,oCACA,uCACA,MACA,CACA,CACA,uCACA,2CACA,IACA,EACA,8DACA,6BACA,MACA,2CACA,KACA,CACA,EACA;AACA;AACA;AACA,gDACA,iCACA,4CACA,SACA,6BACA,4CACA,SACA,CACA,EACA,oDACA,8BACA,6CACA,gBAEA,SACA,8CACA,qDAEA,0CACA,gCACA,qDACA,MACA,8CACA,aAEA,MACA,YACA,6CACA,MACA,yBACA,iDACA,gDACA,2DACA,eACA,kDACA,4DACA,IAEA,IACA,6EACA,iBACA,UACA,cACA,KACA,qDAEA,2CACA,wBACA,oDACA,kEACA,qDACA,yBACA,YACA,CACA,sBAEA,UACA,aACA,QACA,WAEA,4BACA,CACA,IACA,6EACA,gCACA,eACA,wBACA,QAEA,OACA,KACA,EACA,qBACA,GACA,2BACA;AACA,gDACA,oEACA,qDACA,OACA,WACA,gBAEA,IACA,iEACA,OACA,WACA,uCAEA,IACA,4CACA,yBACA,QACA,gCACA,aACA,aAEA,qBACA,QACA,EACA,uCACA,sBACA,CACA;AACA;AACA;yCACA,SACA,MACA,kBAEA,IAEA,wBACA,MACA,kDACA,oCACA,mBACA,SAEA,qCACA,QACA,CACA,yCACA,0BACA,UACA,gFACA,qDACA,kBACA,QAEA,yBACA,CACA;AACA;mEACA,GAEA,CACA;AACA;AACA;wBACA,CACA;AACA;+BACA,WACA,CACA;AACA;UACA,oEACA,MACA,CACA,EACA,gFAEA,qBAEA,yDACA,uCACA,yCAEA,QAEA;yBAEA,MACA;AACA;+CACA,mCACA,gBACA;AACA;+CACA,iCACA,MAEA,oBACA,sDACA,kDAEA,gBACA;AACA;4BAEA,gCAEA,qBACA,CACA;AACA;2CAEA,MACA;gDACA,UACA,8DACA,iEACA,KAEA,CACA;AACA;wBACA,+CACA,8BACA,4BACA,KAEA,kBACA,eACA,+CACA,gBACA,cACA,KAEA,uBACA,8BACA,qDACA,gBACA,cACA,OACA,wDAEA,sBAEA;AAHA,6BAIA,WACA,CACA,CAvEA,CAwEA,6EACA,qBAEA,IACA;qBAEA,8DACA,4CACA,mCACA,mBACA,gEACA,iDACA,WAEA,CACA;AACA;6CACA,uDACA,2CACA,mEACA,gCACA,MAEA,iCACA,gDACA,kCAEA,eACA;AACA;6CACA,SACA,EACA,qDACA,2CACA,UACA,oCACA,6BACA,4BACA,UACA,oCACA,iDACA,4BACA,UACA,oCACA,iDACA,CACA,EACA;AACA;AACA,wCACA,2DACA,MACA,EACA;AACA;AACA;AACA;AACA;AACA,8DACA,UACA,WACA,4BACA,UACA,6CAEA,iBACA;AACA;2CACA,0CACA,UACA,qFACA,cACA,6BACA,UACA,oDACA,YAEA,qBACA,8BACA,UACA,6DACA,6CACA,KACA,eACA,KAEA,EACA;kDACA,wDACA,kBACA,OACA,iDACA,sDACA,kBACA,OACA,8CACA,mDACA,kBACA,OACA,iDACA,sDACA,kBACA,OACA,yDACA,iEACA,qCACA,8CACA,uFACA,KACA,eACA,WACA,kDACA,IACA,sDACA,uBACA,8CACA,4EACA,uBACA,8CACA,0BACA,4BACA,gCACA,UACA,oCACA,sBACA,YACA,oCACA,sBACA,YACA,6BACA,UACA,QACA,wCACA,mBACA,eAEA,EACA;gCAEA,GACA;+BACA,OACA,GAEA,QACA,OACA,EACA,qDACA,aACA,uBACA,aACA,YACA,0CACA,2CACA,WAGA,8BACA,uCACA,iCACA,qBACA,6BACA,6BACA,6BAEA,WACA,EAEA;AACA;AACA;AACA;AACA;AACA;AACA,2DACA,WACA,kBACA,wBACA,+BACA,eACA,CACA,6BACA,YACA,qDACA,8DACA,YACA,EACA;AACA;AACA,4DACA,CACA;AACA;AACA;AACA;gDACA,sBACA,iEACA,eAEA,CACA;AACA;AACA;gCACA,0BACA,yBACA,qDACA,MACA,CAEA,CACA;qEACA,MACA,EACA;AACA;AACA;AACA;AACA,6FACA,OACA,8DACA,oDACA,aACA,EAEA;AACA;AACA;AACA,mDACA,WACA,kBACA,mBACA,+BACA,gBACA,mBACA,WACA,6BACA,uEAEA,sBACA,2CACA,mCACA,CACA;2DACA,aACA,aACA,KACA,CATA,CAUA;AACA;AAEA;AACA,gBACA,+HCpqBA,aACA;AACA;AAEA;AACA,0CACA,iCACA,6BACA,mBACA,YACA;AACA;AAEA;AACA,qCACA,0BACA,EACA,iCACA,UACA,kCACA,cACA,uDACA,mDACA,uCACA,gBACA,+BACA,CACA,kDAEA,eACA,iBACA,yBACA,gCAEA,0BACA,+DACA,gCACA,iDACA,CACA;AACA;AACA;AACA;qBACA,WACA,4CACA,eAEA,qBACA,YACA,GACA,CAEA,2BACA,4BACA,sCACA,OAEA,sBACA,uBACA,kCACA,MAEA,sDACA,kCACA,MAEA,oDACA,6BACA,MAEA,kDACA,2DACA,GAEA,kDACA,8CACA,OACA,OACA,6BACA,2CACA,gDACA,yBACA,CACA;kCACA,cACA,CAEA,CA3DA,+CA4DA,uEACA,GAEA,kCACA,2BACA,4BACA,2BACA,+BACA,0CACA,IAEA,0EACA,aACA,0BACA,8BACA,IAEA,4DACA,qDACA,aACA,8EACA,aACA,sCACA,yBACA,IACA,CAEA,uDACA,CACA;AACA;sCACA,eACA,MACA,CAEA,gDACA,yCACA,KAEA,qCACA,2BACA,qDACA,OAEA,kDACA,uDACA,sCACA,+BACA,IACA,MACA,8FACA,CACA;AAEA;cACA,4BACA,CACA;AACA;gCACA,WACA,CACA;AACA;AACA;AACA;AAEA,wDACA,OACA,CAEA,4DACA,4BACA,sCACA,MACA,CAEA,4EACA,MACA,0CACA,wCACA,8DACA,6EACA,6BACA,cACA,CAEA,+EACA,UACA,gDACA,wCACA,kBACA,GAEA,0DACA,4BACA,OACA,WAEA,uBACA,eACA,8DACA,sCACA,QACA,SACA,KAEA,oEACA,aACA,yBAEA,oCACA,uDACA,CACA;WACA,4BACA,gBAEA,MACA,mCACA,iEACA,+BACA,KACA,GAEA,EACA;+DACA,2BACA,+BACA,+BACA,4CACA,4CACA,uBACA,WACA,OACA,CACA,OACA,MAEA,EACA;kEACA,uCACA,mEACA,OAEA,gCACA,aACA,eAEA,uDACA,qBACA,yBACA,YAEA,oFACA,+DACA,MAEA,kBACA,8BACA,+BACA,aACA,MACA,OACA,OAEA,EACA;AACA;AACA;0BACA,sBACA,8CAEA,qDACA,uBACA,yCACA,UAEA,yBACA,2CAEA,0BACA,oBACA,iBACA,GAEA,CACA;mBAEA,0BACA,kCACA,oEACA,6CACA,8CACA,yBACA,uBACA,UAEA,QACA,SACA,2CACA,iGACA,UACA,8DACA,6BACA,aACA,GACA,MACA,CACA;iBACA,8BACA,iBAEA,6DACA,wCACA,OAEA,OACA,KAEA,EACA;AACA;AACA;kEACA,iDACA,oCACA,iBACA,yEAEA,uCACA,uDACA,MAEA,wCACA,gBACA,WAEA,4CACA,uDACA,aACA,qFACA,aACA,kBACA,CAEA,gEACA,uDACA,+BACA,yEACA,wBACA,aACA,CAEA,GACA;AACA;AAEA;AACA,gBACA,6GC1VA,aACA;AACA;AAEA;AACA,oCACA,mBACA,YACA;AACA;AAEA;AACA;AACA,kBACA,mBACA,qBACA,gCACA,yCACA,6BACA,+BACA,IACA,kBACA,kCACA,IACA,CACA;AACA;AACA,8CACA,6DAEA,MACA;uBACA,2DACA,IACA,OACA,SACA,CACA,6BACA,0BACA,CACA;OACA,kBACA,4BACA,gDACA,oCACA,4BACA,eACA,KACA,CAEA;AACA,oEACA,kBACA,qBACA,yDACA,eACA,oBACA,wBACA,oCAEA,oCACA;uBACA,sBACA,sBACA,wBACA,8BACA,KACA,CACA;AACA;AACA,sBACA,GACA,sDACA,uDAEA,IACA,gCACA,gCACA,MACA,EACA,4CACA,YACA,wEAEA,yCACA,gDACA,qCACA,+BACA,iCACA,yCACA,yBACA,KACA,EACA;AACA,kEACA,MACA,gFACA,qDACA,KACA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDACA,aACA,8CACA,gBACA,SAEA,kCACA,aACA,sBACA,4EACA,SACA,MACA,CACA,YACA,sCACA,wBACA,GACA,mBACA,0CACA,OACA,CACA,CACA,oBACA,CACA;mDACA,QACA,iBACA,GACA,CACA,EACA;AACA;AACA;AACA;AACA;AACA,oCACA,mBACA,oDACA,UACA,aACA,KACA,oCACA,KACA;qBACA,QACA;AACA,yEACA,4DACA,6CACA,WACA,SACA,mBACA,0CACA,gDACA,4DACA,UACA,WACA,aACA,iBACA,WACA,EACA;AACA;AAEA;AACA,gBACA,8EC/KA,aACA;AACA;AAEA;AACA,oBACA,eACA;AACA;AAEA;AAEA;AACA,wBACA,sBACA,wCACA,IACA,yCACA,yCACA,2CACA,0CACA,0CACA,0CACA,0CACA,0CACA,wCACA,MACA;AACA;AAEA;AACA,yCACA,+BACA,oBACA,UACA,iCACA,6EACA,KACA,EACA,EACA,qCACA,UACA,iBACA,SACA,CACA,EACA;AACA;AACA;AACA,2DACA,IACA,yCACA,mBACA,UACA,oBACA,MACA,OACA,MAEA,IACA,EACA,2BACA,QACA,kBACA,KACA,OACA,KACA,EACA,eACA,OACA,+BACA,SACA,eACA,UACA,MACA,OACA,KACA,EACA,iCACA,4BACA,KACA,EACA,4BACA,+CACA,GACA,EACA,qCACA,gBACA,wCACA,aACA,4DACA,iBACA,GACA,CACA,OACA,YACA,EACA,6CACA,kBACA,gCACA,kCACA,mBACA,OACA,CACA,SACA,cACA,EACA,sCACA,wBACA,gCACA,cACA,EACA,oCACA,4BACA,UACA,EACA,yCACA,iBACA,sBACA,6CACA,IACA,OACA,KACA,EAEA;AACA,gCACA,cACA,GACA,EACA,mDACA,mBACA,KACA,EACA,kDACA,0BACA,IACA,EAEA;AACA,wCACA,2BACA,iDACA,OACA,yBACA,wBACA,+CACA,qDACA,UACA,qDACA,KACA,CACA,EACA,gCACA,uBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kEACA,kEACA,6BAEA,SACA,OACA,GACA,CACA,EACA;AACA;AACA,4CACA,cACA,eACA,KACA,iDACA,QACA,IACA,mDACA,0BACA,mDACA,mCACA;MACA,gBACA,4CACA,4CACA,eACA,OACA,cACA,CACA,6DChMA,aACA;AACA;AAEA;AACA,uBACA,eACA;AACA;AAEA;AACA,0CACA,IACA,kBACA,mDACA,wBACA,mBACA,iBACA,aACA,SACA,OACA,GACA,CAEA;AACA,oCACA,oBACA,gCACA,CAEA;AAEA;AACA,0CACA,UACA,2FACA,8DACA,gCACA,kBACA,4BACA,oBACA,GACA,CAEA;AACA,2DACA,aACA,qFACA,iCACA,uCACA,UACA,CAEA;AACA,wDACA,4CACA,0CACA,CAEA;AAEA;AACA,0DACA,OACA,6DACA,YACA,aACA,CAEA;AACA,sEACA,OACA,gFACA,YACA,WACA,CAEA;AACA,oEACA,OACA,8EACA,YACA,WACA,CAEA;AACA,uFACA,gDACA,sCACA,qCACA,uDACA,KACA,4BACA,WACA,CAEA;AACA,uEACA,OACA,oDACA,gDACA,IACA,QACA,CAEA;AACA,+DACA,OACA,mDACA,gDACA,SACA,QACA,CAEA;AACA,kEACA,OACA,gFACA,KACA,QACA,CAEA;AACA,yCACA,OACA,gFACA,0CACA,yBACA,QACA,CAEA;AACA,0EACA,OACA,qDACA,kDACA,QACA,CAEA;AACA,kDACA,OACA,oEACA,+CACA,6CACA,QACA,CAEA;AACA,0DACA,OACA,8BACA,+FACA,SACA,QACA,CAEA;AACA,4CACA,oFACA,OACA,CAEA;AACA,2DACA,OACA,uDACA,yCACA,CAEA;AACA,gCACA,sDACA,SACA,+CACA,kBACA,UACA,CACA;AACA;AAEA;AACA,gBACA,8CACA,wEACA,wDACA,yDACA,oDACA,+CACA,gDACA,2CACA,2CACA,gDACA,wCACA,oCACA,gDACA,+CACA,iCACA,sCACA,+CAEA,gEACA,sBACA,cACA,GACA,oBACA,sBACA,QACA,CAEA,8DClNA,qCAEA,aACA;AACA;AAEA;AACA,kCACA,iCACA,qCACA,+BACA,+BACA,+BACA,iBACA,UACA,qBACA,aACA;AACA;AAEA;AACA;AACA;AACA,IACA,YACA;AACA,uBACA,8EACA,wFAEA,GACA;AACA,wBACA,8BACA,GACA,CACA,yBACA,kBACA,GACA,CACA,mCACA,EACA,yBACA,cACA,OACA,OACA,gBACA,2DACA,gBACA,CACA;AACA,mBACA,YACA,qCACA,UACA,KACA,2CACA,YACA,aACA,WACA,uCACA,KACA,CACA;AACA;AACA;AACA;AACA,+DACA,gBACA,cACA,SACA,oBACA,mCACA,+CAEA,WACA;0DACA,4CACA,mBACA,4CACA,aACA,WACA,mBACA,6BACA,sCACA,4CACA,WACA,wBACA,QACA,GAEA,yCACA,wBACA,qCACA,uBACA,WACA,iDACA,6DACA,QACA,iCACA,mBACA,CAEA,8CACA,mBACA,0CACA,GACA;AACA;kFACA,2BACA,iBACA,YACA,kCACA,0BACA,iFACA,QACA,gDACA,mBACA,0CACA,cACA,gBACA,+BACA,6EACA,mBACA,YACA,KACA,4CACA,mBACA,0CACA,cACA,+BACA,2EACA,cACA,KACA,qCACA,gBACA,+DACA,QAEA,8CACA,WACA,QAEA,4CACA,WACA,QAEA,wBACA,eACA,+DACA,QAEA,uDACA,0CACA,mBACA,+BACA,aACA,mEACA,sDACA,2DACA,aACA,yDACA,QACA,+EACA,6DACA,QAEA,wBACA,gEACA,QAEA,mCACA,gDACA,QACA,mCACA,gDACA,QACA,iCACA,+CACA,QAEA,iCACA,+CACA,QACA,6CACA,qDACA,QAEA,+BACA,+CACA,QAEA,qDACA,oEACA,QACA,2CACA,+DACA,QACA,4CACA,uDACA,QACA,8CACA,UACA,QAEA,4CACA,UACA,QACA,yCACA,0BACA,OAEA,mDACA,UACA,QAEA,gCACA,aACA,aACA,qCACA,mCAEA,2CACA,yEACA,IAEA,uCACA,aACA,aAEA,mCACA,aACA,aAEA,gDACA,6BACA,SACA,oCACA,OACA,GAEA,gCACA,aACA,eAEA,0BACA,QACA,CACA,yCACA,+BACA,0BACA,iCACA,GACA,uBACA,WACA,CACA;AACA,sCACA,mBACA,8EACA,KACA,4BACA,uEACA,IACA,+DACA,UACA,CACA,qCACA,wBAEA,cACA;8BACA,+BACA,iBACA,6DACA,mCACA,+BACA,gBACA,yEACA,UACA,yEACA,4BACA;AACA,EACA,sCACA,+CACA,2CACA,CACA;qBACA,eACA,gBACA,UACA,kFACA,SACA,CACA,uBACA,UACA,IACA,CACA,0CACA,UACA,6BACA,iDACA,qDACA,UACA,kFACA,QACA,eACA,GACA,yCACA,OACA,CACA,sDACA,CACA;iCACA,iBACA,mBACA,CACA;cACA,2CACA,CACA;6CACA,gHACA,qEACA,UACA,kBACA,oDACA,CACA;iEACA,KACA,OACA,IACA,CACA,2BACA,+BACA,uBACA,iBACA,6BACA,CACA;mBACA,QACA,iCACA,QACA,CACA,CACA;AACA;AAEA;AACA;AACA,2CAEA,wBACA,iBACA,kCACA,oDACA,sCACA,2BACA;QACA,MARA,MASA,oBAEA,cACA;AACA,2CACA,mFACA,EAEA;AACA,8BACA,0BACA,qCACA,gFACA,qDACA,8DACA;AACA,qEACA,yCACA,oSC1XA,aACA,qBACA,YACA,mBACA,YACA;AACA;AAEA;AACA,gDACA,cACA,sBACA,uBACA,qBACA,OACA,CACA,qCACA,sBACA,OACA,EACA,oCACA,sBACA,KACA,EACA,yCACA,8BACA,KACA,EACA,qCACA,6BACA,EACA,EACA,uCACA,aACA,cACA,EACA,mCACA,6BACA,UACA,uDACA,wCACA,mBACA,aACA,aACA,CACA,EACA,oCACA,yBACA,UACA,oDACA,qCACA,qBACA,GACA,CACA,EACA,mCACA,yBACA,UACA,mDACA,qCACA,wCACA,GACA,CACA,EACA,0CACA,gCACA,qBACA,iBACA,sFACA,iBACA,4CACA,8BACA,GACA,CACA,EACA,yCACA,gCACA,qBACA,iBACA,wGACA,iBACA,0CACA,8BACA,GACA,CACA,EACA,oCACA,OACA,OACA,EACA,uCACA,OACA,OACA,EACA,qCACA,OACA,OACA,EACA,oCACA,OACA,OACA,EACA,gCACA,OACA,yBACA,eACA,GACA,EAEA;AACA,4CACA,uCACA,4BACA,OACA,sBACA,MACA,4CACA,OACA,MACA,EAEA;AACA,2DACA,0CACA,SACA,yBACA,MACA,kDACA,OACA,MACA,EACA,8CACA,8BACA,UACA,EACA,gDACA,gCACA,UACA,EAEA;AACA,yDACA,yCACA,sBACA,UACA,uBACA,MACA,8CACA,OACA,MACA,EACA,6CACA,aACA,SACA,EACA;AACA;AAEA;AACA,gBACA,MACA,kBACA,6BACA,8BAEA,qFCrKA,aACA;AACA;AAEA;AACA,gCACA,mBACA,YACA;AACA;AAEA;AAGA;;GACA,2DACA,SAEA,gCAIA;;;GACA,wCACA,wCACA,oDACA,uDACA,oDACA,oEACA,OACA,MACA,EAIA;;;GACA,kDACA,mDACA,kDACA,wDACA,kDACA,oDACA,4DACA,OACA,OACA,wEC7CA,aACA;AACA;AAEA;AACA,gCACA,+BACA,mBACA,YACA;AACA;AAEA;AACA,IACA,aACA,+EACA,aACA,+CACA,SACA,EACA,6DACA,SAEA,4EAEA,0CACA,yDACA,sDACA,sDACA,sFACA,CACA;AACA,EARA,CASA,8EACA,CACA,gEACA,SACA,cACA,EACA,8EACA,2CACA,yDACA,SACA,CACA,EACA,8EACA,6CACA,2DACA,SACA,CACA,EACA,qDACA,oDACA,oFACA,mDACA,SACA,kFAEA,iCAEA,UACA;cACA,6DACA,QAEA,CACA;sFACA,yEACA,MAEA,CACA;sBACA,qCACA,4BACA,mEACA,MAEA,CACA;UACA,oCACA,6CACA,+BACA,6CACA,KACA,CACA,GACA,CA7BA,qFCzDA,aACA;AACA;AAEA;AACA,gCACA,+BACA,mBACA,YACA;AACA;AAEA;AACA,6DACA,SAEA,0EAEA,yCACA,wDACA,qDACA,qDACA,mDACA,6EACA,CACA;AACA,EATA,CAUA,qEACA,0BACA,CACA,OACA,yBACA,qDACA,qBACA,UACA,oDACA,iCACA,0DACA,MACA,CACA,CACA,0EAEA,CACA;AACA;+BACA,2CACA,0CACA,8EACA,IACA,CACA,CATA,CAUA,qEACA,6CACA,iDACA,UACA,CACA,EACA,sEACA,yCACA,UACA,uEAEA,CACA;AACA,EAHA,CAIA,2EACA,yCACA,UACA,yEAEA,CACA;AACA;AACA,EAJA,qFCtEA,aACA;AACA;AAEA;AACA,gCACA,+BACA,mBACA,YACA;AACA;AAEA;AACA,iEACA,SAEA,kFAEA,6CACA,4DACA,yDACA,yDACA,yFACA,CACA;AACA,EARA,CASA,iFACA,2CACA,2DACA,UACA,CACA,EACA,iFACA,6CACA,6DACA,UACA,CACA,oFAEA,CACA;AACA;qDACA,2CACA,gDACA,UACA,CACA,CARA,CASA,uDACA,uDACA,6DACA,iFACA,qDACA,UACA,EACA,mFACA,gCACA,+CACA,UACA,GACA,sFC3DA,aACA;AACA;AAEA;AACA,gCACA,6BACA,mBACA,YACA;AACA;AAEA;AACA,8CACA,SACA,uCACA,qBACA,EACA,EACA,uCACA,gCACA,cACA,uCACA,UACA,EACA,sDACA,gCACA,cACA,4CACA,IACA,EACA,mDACA,gCACA,cACA,6DACA,MACA,EACA,mDACA,qBACA,EACA,EACA,iDACA,qCACA,qBACA,+BACA,OACA,MACA,CACA,OACA,OACA,EACA,iDACA,SACA,wCACA,yBACA,4CACA,aACA,gBACA,OACA,OACA,CACA,OACA,MACA,EACA,kDACA,gBACA,oCACA,iCACA,OACA,OACA,yBACA,UACA,uBACA,iCACA,OACA,OACA,CAEA,wBACA,SACA,2BACA,qBACA,IACA,kCACA,OACA,OACA,CAEA,OACA,MACA,EACA,iDACA,OACA,MACA,EACA,iCACA,iDACA,gCACA,MACA,qDAEA,8BACA,wBACA,2CACA,OACA,OAEA,CACA;AACA;mBACA,yCACA,iFACA,WACA,CAbA,CAcA,yDACA,gCACA,cACA,8CACA,SACA,qFCvHA,aACA;AACA;AAEA;AACA,8BACA,+BACA,6BACA,mBACA,YACA,oCACA,0CACA,wBACA,cACA;AACA;AAEA;AAgBA;;;;;;;;;;;;;;;GACA,oDACA;AACA,gCACA,uBACA,oCACA,uBACA,aACA,iCACA,+DACA,eACA,WACA,8BACA,YACA,OACA,CACA,EACA,+BACA,uBACA,oCACA,2BACA,6CACA,kEACA,eACA,WACA,8BACA,YACA,OACA,CACA,EACA,8CACA,uBACA,oCACA,0CACA,8BACA,YACA,YACA,iCACA,iCACA,sEACA,eACA,MACA,CACA,EACA,2CACA,uBACA,oCACA,uBACA,yCACA,iCACA,+DACA,eACA,WACA,8BACA,YACA,OACA,CACA,EACA,2CACA,wDACA,QACA,EACA,yCACA,OACA,+CACA,YACA,4BACA,KACA,EACA,yCACA,2CACA,gCACA,OACA,MACA,CACA,OACA,OACA,EACA,yCACA,6CACA,yBACA,4BACA,OACA,OACA,CACA,OACA,MACA,EACA,0CACA,uBACA,oCACA,mBACA,oBACA,2BACA,WACA,IACA,gBACA,KACA,gEACA,CACA,uEACA,sCACA,oBACA,MACA,CACA,kCACA,OACA,OACA,IACA,0BACA,qCACA,cACA,mBACA,gCACA,sBACA,4BACA,0CACA,QACA,iCACA,+DACA,8BACA,MACA,OACA,MACA,2CAEA,CASA;;;;;;;2BACA,oCACA,2BAEA,0CAEA,gCACA,qBACA,8BACA,YACA,OAEA,iBACA,cACA,MACA,CAzBA,CA0BA,+CACA,uBACA,oCACA,6BACA,iBACA,cACA,WACA,OACA,OACA,CACA,6CAEA,kBACA,oDACA,iCAEA,2BACA,6CACA,CACA;wBACA,OAEA,iBACA,qCACA,yDACA,iCACA,wBACA,OACA,CAjBA,mDAmBA,mBACA,qDACA,sCACA,qCAEA,6FACA,CACA;AACA;SACA,sDACA,CACA;6CACA,uCACA,SACA,gCACA,SACA,CAjBA,CAkBA,iDACA,uBACA,oCACA,0BACA,0DACA,4BACA,8BAEA,8BAEA,qBACA,4BACA,kBAEA,8BACA,iCACA,sCACA,2FACA,qBAEA,8BACA,wDACA,mBACA,qEACA,CACA;UACA,WACA,2BACA,iBACA,UACA,wCAEA,0BAEA,gBACA,2BACA,4BACA,8BACA,MAEA,aACA,6DACA,yBACA,CAEA,CACA;AACA;iDACA,iBACA,6EACA,6BACA,gDACA,uCACA,KACA,sCACA,MAEA,aAEA,gBACA,qBACA,aACA,WACA,OACA,OACA,CACA,EACA,oDACA,uBACA,oCAEA,wBACA,gBACA,0EACA,UACA,mFACA,gBACA,UACA,OACA,OACA,CACA,uFAEA,cACA,OACA,OAEA,uBAEA,uBACA,2BACA,oBACA,qDAEA,8CACA,CACA;AACA;AACA;8CACA,2BACA,iEACA,UACA,iBACA,oCACA,yCACA,CACA,MACA,sBACA,0BACA;AACA,EACA,sBACA,CACA;4DACA,UACA,2BACA,qBACA,MACA,CApCA,CAqCA,iDACA,uBACA,oCACA,uBACA,oCACA,iCACA,+DACA,eACA,WACA,8BACA,YACA,OACA,CACA,kGC3WA,aACA;AACA;AAEA;AACA,gCACA,mBACA,YACA;AACA;AAEA;AACA,iDACA,YACA,oBACA,oBACA,mCACA,gCACA,gCACA,gCACA,gDACA,OACA,GACA,0CAEA,CACA;AACA;8CACA,WACA,CALA,CAMA,wCACA,WACA,8CACA,0BACA,WACA,OACA,OACA,EACA,yCACA,kBACA,WACA,EACA,wCACA,OACA,GACA,EACA,oCACA,wCACA,kBACA,WACA,wEClDA,aACA;AACA;AAEA;AACA,gCACA,mBACA,YACA;AACA;AAEA;AAKA;;;;GACA,uDACA,mBACA,2BACA,2BACA,0CACA,uCACA,uCACA,8DACA,OACA,MACA,EACA,sDACA,4CACA,iCACA,SACA,SACA,MACA,EACA,sDACA,kDACA,qCACA,SACA,SACA,MACA,EACA,sCACA,qCACA,2CACA,sDACA,qCACA,eACA,MACA,0DAEA,gCACA,sBACA,uBACA,CACA;iBACA,sEACA,yBACA,YACA,yCACA,+BACA,SACA,SACA,MACA,CACA,CAfA,uEClDA,aACA;AACA;AAEA;AACA,gCACA,mBACA,YACA;AACA;AAEA;AACA;AACA,oDACA,+CACA,OACA,EACA,mDACA,eACA,uBACA,mCACA,mCACA,kCACA,+DACA,OACA,OACA,EACA,6CACA,OACA,MACA,8DAEA,+BACA,CACA;AACA;mBACA,QACA,OACA,OACA,CACA,CATA,CAUA,uDACA,4BACA,wEACA,GACA,EACA,uDACA,oFACA,GACA,EACA,kCACA,iCACA,iCACA,6DACA,OACA,MACA,EACA,uDACA,sCACA,MACA,2DAEA,cACA,+DACA,uCACA,4CACA,sBACA;uCACA,MACA,aACA,KACA,CAVA,uEC7DA,aACA;AACA;AAEA;AACA,gCACA,mBACA,YACA;AACA;AAEA;AACA,+CACA,SACA,gFACA,6DACA,OACA,EACA,qCACA,qDACA,+BACA,kBACA,uDACA,qCACA,gDACA,6BACA,MAEA,2DACA,+BACA,WACA,0CACA,GAEA;gEAEA,SACA,gBACA,kCACA,4BAEA,UACA,CACA,0FACA,CACA;+CACA,iEACA,SAEA,8CAEA,qDACA,0DACA,oDAEA,uBAEA,GACA;gCACA,mDACA,6CACA,GACA,4BACA,0BACA,eACA,oBAEA,eACA,WACA,EACA;AAEA;AACA,2FACA,qDACA,mEACA,SACA,8CAEA,uDACA,0DACA,oDAEA,uBAEA,GACA;sCACA,0BACA,kCACA,cACA,kEACA,IAEA,OACA,WACA,EACA,4FACA,eAEA,+CAEA,iDACA,2BACA,eACA,+BACA,0DACA,2CACA,GAEA,OACA,WACA,EACA;AACA,wFACA,qBACA,KACA,EACA,oFACA,0DACA,yBACA,+DAEA,YACA,EACA;AACA,mFACA,gBACA,IACA,EACA,wFACA,gBACA,IACA,EACA,4FACA,gFACA,SACA,EACA,qBACA,gBACA,WACA,IACA,GACA,IACA,CACA,4GAEA,WACA,6BACA,0EACA,UAEA,8CAEA,8CACA,0DAEA,iCAEA,GACA;gCACA,kEACA,IACA,4BACA,0BACA,eAEA,OACA,WACA,CAvBA,CAwBA,2FACA,mEACA,iCACA,IACA,EACA,2FACA,mEACA,mCACA,IACA,EACA,0FACA,mEACA,iCACA,IACA,+CAEA,6CACA,QACA,IACA,kBACA,4BACA,wBACA,wBACA,wBACA,wBAEA,wBACA,wBAEA,wBACA,wBAEA,wBAEA,wBAEA,uBACA,0BAEA,4BACA;AACA,EA1BA,uECxLA,aACA;AACA;AAEA;AACA,gCACA,mBACA,YACA;AACA;AAEA;AACA,2CACA,cACA,mCACA,qCACA,qEACA,QACA,OACA,UACA,CACA;AACA;AAEA;AACA,qDACA,gBACA,yDACA,+BACA,kBACA,EACA,yDACA,+BACA,kBACA,EACA,wEACA,OACA,CACA,4BACA,sBAEA,KACA,EACA,qEACA,OACA,CACA,yBACA,sBACA,UAEA,IACA,EACA,qEACA,OACA,CACA,yBACA,sBAEA,OACA,EACA,mEACA,OACA,CACA,uBACA,sDACA,kCACA,iBACA,IACA,wEAEA,6BACA;uCACA,iBACA,CAJA,CAKA,mEACA,OACA,CACA,uBACA,0DACA,oCACA,iBACA,IACA,EACA,mCACA,mCACA,kCACA,kCACA,wCACA,mEACA,OACA,uBACA,+BACA,gDAEA,kBACA,EACA,qEACA,OACA,CACA,uBACA,sBACA,oCACA,iCACA,iBAEA,IACA,EACA,2EACA,OACA,CACA,+BACA,sBAEA,UACA,wEClHA,aACA;AACA;AAEA;AACA,gCACA,mBACA,YACA;AACA;AAEA;AAMA;;;;;GACA;AACA,yDACA,oBACA,4BACA,4BACA,2CACA,wCACA,2CACA,+DACA,OACA,MACA,EACA,yDACA,qBACA,OACA,EACA,uDACA,mBACA,wEACA,IACA,EACA,uDACA,mBACA,8EACA,IACA,EACA,uCACA,sCACA,4CACA,uDACA,wDACA,UACA,2DAEA,yBACA,CACA;OACA,WACA,2EACA,yCACA,MACA,CACA,CATA,uECnDA,aACA;AACA;AAEA;AACA,gCACA,mBACA,YACA,iCACA,sBACA;AACA;AAEA;AACA,uCACA,0CACA,KACA,CACA,iDACA,CACA;AACA;yBACA,gDACA,oCACA,EAEA,GACA;gDACA,yBACA,CACA,OAEA,CACA;eACA,gDACA,yBACA,mCACA,YACA,CACA,GACA,GACA,CACA;AACA;AAEA;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;GACA;AACA,2DACA,sBACA,gEACA,QACA,OACA,EACA,gEACA,QACA,OACA,iFAEA,iEACA,CACA;iBACA,UACA,CACA;YACA,eACA,CACA,CATA,CAUA,4EACA,mCACA,GACA;uCACA,aACA,QACA,CACA;uCACA,aACA,cACA,QACA,SACA,EACA,0EACA,CACA;AACA;mDACA,8CACA,MAEA,wBACA,mCACA,gDACA,SACA,sDACA,mCACA,SACA,uCACA,4CACA,SAEA,gBACA,wBACA,kBACA,OACA,kBACA,4EAEA,CACA;sBACA,wCACA,oEACA,+CAEA,wBACA;uCACA,OACA,kBACA,wBACA,kBACA,OACA,kBACA,CAfA,CAgBA,2EACA,iEACA,4CACA,0DACA,uBACA,wBACA,IACA,kBACA,wBACA,kBACA,OACA,kBACA,EACA,0EACA,oFACA,oDACA,GACA,GACA,EACA,0EACA,OACA,GACA,EACA,8CACA,0EACA,mDACA,YACA,EACA,4EACA,aACA,UACA,EACA,kFACA,YACA,eACA,EACA,4EACA,qBACA,OACA,EAEA;uEC1LA,aACA;AACA;AAEA;AACA,gCACA,mBACA,YACA;AACA;AAEA;AACA;AACA,wDACA,mBACA,qCACA,qCACA,sCACA,qCACA,2CACA,+CACA,gBACA,8BACA,SACA,iCACA,IACA,EACA,qCACA,OACA,MACA,EACA,qCACA,OACA,MACA,EACA,oDACA,4BACA,KACA,EACA,iDACA,2DACA,IACA,EACA,iDACA,gBACA,MACA,EACA,iDACA,aACA,WACA,EACA,uDACA,iCACA,cACA,wECtDA,aACA;AACA;AAEA;AACA,kCACA,+BACA,mBACA,YACA;AACA;AAEA;AACA,kDACA,aACA,sCACA,sCACA,eACA,EACA,sCACA,wCACA,eACA,EACA,qDACA,kCACA,UACA,oDAEA,CACA;gFACA,QACA,CAJA,CAKA,gDACA,oCACA,IACA,qCACA,6CACA,eACA,EACA,sDACA,4BACA,SACA,EACA,kDACA,8CACA,4BACA,sDACA,iCACA,SACA,qCACA,eACA,EACA,wDACA,gDACA,eACA,EACA,gDACA,wDACA,uCACA,wCACA,eACA,EACA,gDACA,0DACA,oCACA,wCACA,eACA,EACA,iDACA,yDACA,wCACA,eACA,uFCxEA,aACA;AACA;AAEA;AACA,gCACA,mBACA,YACA;AACA;AAEA;AAOA;;;;;;GACA,gDACA,YACA,8BACA,OACA,MACA,EACA,8BACA,OACA,MACA,EACA,6CACA,4BACA,KACA,EACA,0CACA,2DACA,IACA,EACA,0CACA,gBACA,MACA,EACA,wCACA,iCACA,IACA,EACA,wCACA,4BACA,gBACA,mFACA,IACA,EACA,wCACA,8BACA,kBACA,uFACA,IACA,EACA,yCACA,uBACA,SACA,EACA,wCACA,gBACA,KACA,EACA,8CACA,gBACA,KACA,EACA,0CACA,uBACA,0DACA,yCACA,SACA,aACA,SACA,CACA,EACA,gDACA,4BACA,IACA,wECjFA,aACA;AACA;AAEA;AACA,mEACA,+BACA,+BACA,qBACA,YACA;AACA;AAEA;AAEA;AACA,iBACA,iBACA,iDACA,CACA;AACA,8CACA,aACA,sBACA,UACA,OACA,MACA,EAEA;AACA,6BACA,WAEA;AACA,6BACA,WAEA;AACA,uBACA,UACA,KACA,kBACA,OAEA;AACA,wBACA,WACA,aACA,IACA,eACA,OAEA;AACA,sBACA,YACA,OACA,eACA,OAEA;AACA,oBACA,YACA,OACA,aACA,OAEA;AACA,wCACA,mBACA,uBACA,eACA,2CACA,sBACA,WACA,gBACA,KAEA;AACA,sBACA,cACA,SACA,aACA,OAEA;AACA,oBACA,WACA,MACA,cACA,OACA,mBACA,WACA,MACA,cACA,MACA,mBACA,WACA,MACA,cACA,MACA,kBACA,WACA,MACA,aACA,MACA,4BACA,4BACA,uBACA,IACA,+BACA,+BACA,4BACA,EACA,sDACA,sDACA,4BACA,EAEA;AACA,mBACA,WACA,MACA,aACA,OACA,wBACA,WACA,MACA,mBACA,OAEA;AACA,mBACA,WACA,MACA,aACA,OAEA;AACA,mBACA,WACA,MACA,aACA,OAEA;AACA,mBACA,WACA,MACA,aACA,OAEA;AACA,mCACA,kEACA,uCACA,8BACA,qCACA,iBACA,iBACA,0BACA,UACA,EACA,aACA,OAEA;AACA,iCACA,eACA,4BACA,IACA,eACA,OACA,sCACA,gCACA,UACA,EACA;AACA,qCACA,mBACA,mDACA,aACA,aACA,SACA,EAEA;AACA,+BACA,eACA,wCACA,WACA,qBACA,OACA;AACA;AAEA;AACA,qBACA,gBACA,gBACA,0BACA,oBACA,oBACA,gBACA,sBACA,gBACA,kBACA,kBACA,kBACA,gBACA,gBACA,4BACA,gBACA,gBACA,gBACA,gBACA,oBACA,oBACA,YACA;AACA;AAEA;AACA,kDACA,kDACA,kDACA,sDACA,0BACA,yBACA,6BACA,iCACA,oCACA,+BACA,qCACA,oCACA,uCACA,8BACA,6BACA,QACA,onBC9OA,aACA;AACA;AAEA;AACA,oBACA,YACA;AACA;AAEA;AACA;AACA;AACA,sCACA,YACA,iCACA,WACA,sCACA,cACA,KACA,kEACA,GACA,CACA;AACA;AACA,iCACA,sBACA,8BACA,sCACA,uCACA,aACA,CACA;AACA;AAEA;AACA;AACA;AACA,8CACA,aACA,aAEA,iBACA,sBAEA,eACA,kBACA,8BAEA,0BACA,kBACA,0BACA,CACA,iBACA,sBACA,gCACA,6BACA,CACA,SACA,CAEA,CACA;oCACA,uCACA,mBACA,YACA,CACA;sDACA,6CACA,uCACA,mBACA;sDACA,IAEA,CACA;2BACA,wCACA,sCACA;AAEA,EACA;iEAEA,UACA,SACA,eACA,YACA,cACA,kBAEA,UACA,EACA;AACA;AACA,oEACA,sBAEA,sDACA,0BACA,+EAEA,OACA;yCACA,gDACA,aACA,uDAGA,IACA;wCACA,iDACA,MAEA,CACA;8BACA,kCACA,MACA,CACA;8BAEA,MACA;AACA;6BACA,gDACA,mDACA,mCACA,wBACA,wBACA,+CAEA,oFACA,+BACA,wDAEA,6EACA,UACA,yCACA,0BACA,yEACA,8CAEA,MACA;8BACA,kCACA,MACA,WACA,WACA,0DCpJA;AACA;AACA;AACA,gBACA,CACA;IACA,qmLACA,qkLACA,qEACA,qQAEA,ksEACA;IACA,qDAEA,kQACA;IACA,qwCAEA,koBACA;IAEA,kHACA;IAEA,kCACA;AACA;AACA;GACA,uqbAEA,whF;;;;;;;;;;;;;AC/BA;;KAAY,G;;;;AAEZ,KAAI,OAAJ;AACO,KAAI,yCAAJ;;AAEP;AACA,KAAI,04HAAJ;;AAwKA,KAAI,iiBAAJ;AAkCA;;AAEO,KAAI,wCAAgB,UAApB;AACP,WAAU,IAAI,OAAJ,CAAY,aAAZ,CAAV;;AAEA,KAAI,eAAe,EAAnB;AACA,cAAa,QAAQ,IAArB,IAA6B,OAA7B;AACA,SApNW,SAoNX,eAAY,IAAI,eAAJ,CAAoB,YAApB,CAAZ;;mBAEe,O;;;;;;;;;;ACzNf;;AAEA;AACA,KAAI,QAAS,YAAW;AACtB;;AAEA;AACA,OAAI,OAAO,OAAO,MAAd,KAAyB,UAA7B,EAAyC;AACvC,YAAO,MAAP,GAAgB,UAAS,MAAT,EAAiB;AAC/B,WAAI,UAAU,IAAd,EAAoB;AAClB,eAAM,IAAI,SAAJ,CAAc,4CAAd,CAAN;AACD;;AAED,gBAAS,OAAO,MAAP,CAAT;AACA,YAAK,IAAI,QAAQ,CAAjB,EAAoB,QAAQ,UAAU,MAAtC,EAA8C,OAA9C,EAAuD;AACrD,aAAI,SAAS,UAAU,KAAV,CAAb;AACA,aAAI,UAAU,IAAd,EAAoB;AAClB,gBAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AACtB,iBAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,MAArC,EAA6C,GAA7C,CAAJ,EAAuD;AACrD,sBAAO,GAAP,IAAc,OAAO,GAAP,CAAd;AACD;AACF;AACF;AACF;AACD,cAAO,MAAP;AACD,MAjBD;AAkBD;;AAED,YAAS,aAAT,CAAuB,GAAvB,EAA4B,IAA5B,EAAkC;AAChC,YAAO,IAAP,CAAY,GAAZ,EAAiB,OAAjB,CAAyB,UAAS,GAAT,EAAc;AACrC,cAAO,KAAK,GAAL,EAAU,IAAI,GAAJ,CAAV,EAAoB,GAApB,CAAP;AACD,MAFD;AAGD;;AAED,UAAO;AACL,oBAAe,aADV;AAEL,gBAAW,mBAAS,GAAT,EAAc,IAAd,EAAoB;AAC7B,cAAO,OAAO,IAAP,CAAY,GAAZ,EAAiB,GAAjB,CAAqB,UAAS,GAAT,EAAc;AACxC,gBAAO,KAAK,GAAL,EAAU,IAAI,GAAJ,CAAV,EAAoB,GAApB,CAAP;AACD,QAFM,CAAP;AAGD,MANI;;AAQL,QAAG,WAAS,KAAT,EAAgB;AAAE,cAAO,SAAS,aAAT,CAAuB,KAAvB,CAAP;AAAuC,MARvD;;AAUL,SAAI,YAAS,KAAT,EAAgB;AAClB,cAAO,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAAS,gBAAT,CAA0B,KAA1B,CAA3B,CAAP;AACD,MAZI;;AAcL,QAAG,WAAS,OAAT,EAAkB,UAAlB,EAA8B;AAC/B,WAAI,WAAW,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAf;AACA,oBAAa,cAAc,EAA3B;AACA,kBAAW,YAAY,EAAvB;;AAEA;AACA,WAAI,UAAU,SAAS,aAAT,CAAuB,OAAvB,CAAd;AACA;AACA,qBAAc,UAAd,EAA0B,UAAS,IAAT,EAAe,GAAf,EAAoB;AAC5C,iBAAQ,YAAR,CAAqB,IAArB,EAA2B,GAA3B;AACD,QAFD;AAGA,gBAAS,OAAT,CAAiB,UAAS,KAAT,EAAgB;AAC/B,iBAAQ,WAAR,CAAoB,KAApB;AACD,QAFD;AAGA,cAAO,OAAP;AACD,MA7BI;;AA+BL,QAAG,WAAS,IAAT,EAAe;AAChB,cAAO,SAAS,cAAT,CAAwB,IAAxB,CAAP;AACD,MAjCI;;AAmCL,mBAAc,sBAAS,OAAT,EAAkB;AAC9B,cAAO,QAAQ,UAAf,EAA2B;AACzB,iBAAQ,WAAR,CAAoB,QAAQ,UAA5B;AACD;AACF,MAvCI;;AAyCL,aAAQ,gBAAS,CAAT,EAAY,EAAZ,EAAgB;AACtB,WAAI,IAAI,CAAR,EAAW;AAAE;AAAS;AACtB,cAAO,IAAI,CAAX,EAAc;AACZ,YAAG,CAAH;AACA;AACD;AACF,MA/CI;;AAiDL,cAAS,iBAAS,CAAT,EAAY;AACnB;AACA,WAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AACA;;AAEA,YAAK,IAAI,EAAE,MAAX,EAAmB,CAAnB,EAAsB,KAAK,CAA3B,EAA8B;AAC5B,aAAI,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,CAA3B,CAAJ;AACA,aAAI,EAAE,IAAI,CAAN,CAAJ;AACA,WAAE,IAAI,CAAN,IAAW,EAAE,CAAF,CAAX;AACA,WAAE,CAAF,IAAO,CAAP;AACD;AACF,MA5DI;;AA8DL;AACA,iBAAY,oBAAS,CAAT,EAAY,CAAZ,EAAe;AACzB,cAAO,EAAE,MAAF,CAAS,UAAS,IAAT,EAAe;AAC7B,gBAAO,CAAC,EAAE,QAAF,CAAW,IAAX,CAAR;AACD,QAFM,CAAP;AAGD;AAnEI,IAAP;AAqED,EApGW,EAAZ;;AAsGA,KAAI,gCAAO,OAAP,OAAmB,QAAvB,EAAiC;AAC/B,UAAO,OAAP,GAAiB,KAAjB;AACD,E;;;;;;;;;;;SCxGe,O,GAAA,O;SAMA,O,GAAA,O;AAThB,KAAI,UAAU,CAAd;AACA,KAAI,QAAQ,EAAZ;;AAEO,UAAS,OAAT,CAAiB,IAAjB,EAAuB;AAC5B,OAAI,SAAS,SAAb;AACA,SAAM,MAAN,IAAgB,IAAhB;AACA,UAAO,MAAP;AACD;;AAEM,UAAS,OAAT,CAAiB,GAAjB,EAAsB;AAC3B,UAAO,MAAM,GAAN,CAAP;AACD,E;;;;;;;;;;;;;;ACTD;;;;AAEA;;;;AACA;;KAAY,G;;AACZ;;AACA;;;;;;;;;;;;gfAPA;;KASqB,sB;;;AACnB,mCAAY,QAAZ,EAAsB;AAAA;;AAAA;;AAGpB,WAAK,QAAL,GAAgB,QAAhB;AACA,WAAK,KAAL,GAAa,MAAK,MAAL,CAAY,QAAZ,CAAb;AACA,WAAK,SAAL,GAAiB,yBAAU,MAAK,KAAf,CAAjB;;AAEA,WAAK,aAAL;AAPoB;AAQrB;;;;;;AAID;4BACO,Q,EAAU;AACf,WAAI,SAAS,QAAT,CAAkB,GAAlB,CAAJ,EAA4B;AAC1B,gBAAO,2BAAU,kBAAQ,KAAR,CAAc,QAAd,EAAwB,IAAlC,EAAwC,QAAxC,CAAP;AACD,QAFD,MAEO;AACL,aAAI,QAAQ,IAAI,IAAI,MAAJ,CAAW,GAAf,CAAmB,CAAC,IAAI,IAAI,MAAJ,CAAW,KAAf,CAAqB,QAArB,CAAD,CAAnB,CAAZ;AACA,iBAAQ,2BAAU,KAAV,EAAiB,QAAjB,CAAR;AACA,gBAAO,KAAP;AACD;AACF;;;mCAEa,Q,EAAU,K,EAAO;AAC7B,YAAK,UAAL,CAAgB,aAAhB,CAA8B,QAA9B,EAAwC,KAAxC;AACD;;;qCAEe;AACd,YAAK,SAAL,CAAe,YAAf,CAA4B,IAA5B;AACD;;;yBAnBS;AAAE,cAAO,KAAK,SAAL,CAAe,GAAtB;AAA4B;;;yBAqBvB;AAAE,cAAO,KAAK,SAAZ;AAAwB;;;;;;mBAhCxB,sB;;;;;;ACTrB;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB;AACA,cAAa,EAAE;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB;AACA,cAAa,EAAE;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,yCAAwC;AACxC,yCAAwC;AACxC;;AAEA;AACA,uHAAsH;AACtH;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,yCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA,uBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,oBAAoB;AACjC,cAAa,OAAO;AACpB,cAAa,EAAE;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED,mC;;;;;;;AC9LA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACnItC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,2CAA0C,+DAA+D,qGAAqG,EAAE,yEAAyE,eAAe,yEAAyE,EAAE,EAAE,uHAAuH;;AAE5e;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAa,wBAAwB;AACrC;AACA,cAAa,SAAS;AACtB;AACA,cAAa,EAAE;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED,sC;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;AACA,cAAa,wBAAwB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED,oC;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA,EAAC;;AAED,0C;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD;AACrD,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA,2BAA0B;AAC1B;AACA;AACA;;AAEA,4B;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gC;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;SCZgB,S,GAAA,S;SAwBA,S,GAAA,S;SA+BA,W,GAAA,W;;AAjEhB;;KAAY,G;;AACZ;;;;;;;;;;AAEA;AACA,KAAI,cAAc;AAChB,QAAK,OADW;AAEhB,QAAK,SAFW;AAGhB,UAAO;AAHS,EAAlB;;AAMO,UAAS,SAAT,CAAmB,KAAnB,EAA0B,WAA1B,EAAuC;AAC5C,OAAI,YAAJ;;AAEA,OAAI,YAAY,cAAZ,CAA2B,MAAM,WAAN,CAAkB,IAA7C,CAAJ,EAAwD;AACtD,SAAI,gBAAgB,YAAY,MAAM,WAAN,CAAkB,IAA9B,CAApB;AACA,SAAI,gBAAgB,MAAM,aAAN,EAAqB,GAArB,CAAyB;AAAA,cAAQ,UAAU,IAAV,EAAgB,WAAhB,CAAR;AAAA,MAAzB,CAApB;;AAEA,SAAI,SAAS,OAAO,IAAP,CAAY,KAAZ,EAAmB,GAAnB,CAAuB;AAAA,cAAO,MAAM,GAAN,CAAP;AAAA,MAAvB,CAAb;AACA,YAAO,OAAO,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,aAA3B,CAAP,IAAoD,aAApD;;AAEA,8CAAU,MAAM,WAAhB,mCAA+B,MAA/B;AACD,IARD,MAQO,IAAI,iBAAiB,IAAI,MAAJ,CAAW,IAAhC,EAAsC;AAC3C,WAAM,IAAI,MAAM,WAAV,CAAsB,UAAU,MAAM,IAAhB,EAAsB,WAAtB,CAAtB,CAAN;AACD,IAFM,MAEA;AACL,SAAI,UAAS,OAAO,IAAP,CAAY,KAAZ,EAAmB,GAAnB,CAAuB;AAAA,cAAO,MAAM,GAAN,CAAP;AAAA,MAAvB,CAAb;AACA,8CAAU,MAAM,WAAhB,mCAA+B,OAA/B;AACD;;AAED,OAAI,WAAJ,EAAiB;AACf,SAAI,YAAJ,GAAmB,WAAnB;AACD;AACD,UAAO,GAAP;AACD;;AAEM,UAAS,SAAT,CAAmB,MAAnB,EAA2B,KAA3B,EAAkC;AACvC,OAAI,YAAY,WAAW,KAAX,CAAhB;AACA,UAAO,aAAa,cAAc,MAAlC,EAA0C;AACxC,iBAAY,WAAW,SAAX,CAAZ;AACD;;AAED;AACA,OAAI,SAAJ,EAAe;AACb,YAAO,IAAP;AACD,IAFD,MAEO;AACL,YAAO,KAAP;AACD;AACF;;AAED;AACA,UAAS,UAAT,CAAoB,QAApB,EAA8B;AAC5B,OAAI,SAAS,QAAT,CAAkB,GAAlB,CAAJ,EAA4B;AAC1B,YAAO,SAAS,KAAT,CAAe,CAAf,EAAkB,SAAS,WAAT,CAAqB,GAArB,CAAlB,CAAP;AACD,IAFD,MAEO;AACL,YAAO,OAAO,IAAP,CAAY,kBAAQ,KAApB,EAA2B,IAA3B,CAAgC,qBAAa;AAClD,WAAI,OAAO,kBAAQ,KAAR,CAAc,SAAd,EAAyB,IAApC;AACA,cAAQ,gBAAgB,IAAI,MAAJ,CAAW,KAA3B,IAAoC,KAAK,QAAL,KAAkB,QAAvD,IACC,gBAAgB,IAAI,MAAJ,CAAW,GAA3B,IACA,KAAK,KAAL,CAAW,IAAX,CAAgB;AAAA,gBACd,gBAAgB,IAAI,MAAJ,CAAW,KAA3B,IACA,KAAK,QAAL,KAAkB,QAFJ;AAAA,QAAhB,CAFR;AAMD,MARM,CAAP;AASD;AACF;;AAEM,UAAS,WAAT,CAAqB,QAArB,EAA+B;AACpC,OAAI,YAAY,SAAS,CAAT,CAAhB;AACA,UAAO,cAAc,UAAU,WAAV,EAArB;AACD,E;;;;;;;;;;;mBCxDuB,S;;AAZxB;;KAAY,G;;AAEZ;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;AACA;;AAEe,UAAS,SAAT,CAAmB,KAAnB,EAA0B;AACvC,OAAI,YAAJ;;AAEA,OAAI,iBAAiB,IAAI,MAAJ,CAAW,GAAhC,EAAqC;AACnC,WAAM,kBAAQ,KAAR,CAAN;AACD,IAFD,MAEO,IAAI,iBAAiB,IAAI,MAAJ,CAAW,QAAhC,EAA0C;AAC/C,WAAM,uBAAa,KAAb,CAAN;AACD,IAFM,MAEA,IAAI,iBAAiB,IAAI,MAAJ,CAAW,KAAhC,EAAuC;AAC5C,WAAM,oBAAU,KAAV,CAAN;AACD,IAFM,MAEA,IAAI,iBAAiB,IAAI,MAAJ,CAAW,IAAhC,EAAsC;AAC3C,WAAM,mBAAS,KAAT,CAAN;AACD,IAFM,MAEA,IAAI,iBAAiB,IAAI,MAAJ,CAAW,IAAhC,EAAsC;AAC3C,WAAM,mBAAS,KAAT,CAAN;AACD,IAFM,MAEA;AACL,WAAM,oBAAU,KAAV,CAAN;AACD;;AAED,UAAO,GAAP;AACD,E;;;;;;;;;;;;;;AC3BD;;KAAY,G;;AACZ;;;;AACA;;;;AAEA;;;;;;;;;;;;AAPA;AACA,qBAAQ,EAAR;;AAQA,KAAM,qBAAqB,GAA3B,C,CAAgC;;KAEX,K;;;AACnB,kBAAY,KAAZ,EAAmB;AAAA;;AAAA;;AAGjB,WAAK,aAAL,CAAmB,eAAnB,EAAoC,OAApC;;AAEA,WAAK,KAAL,GAAa,KAAb;AACA,WAAK,GAAL,GAAW,oBAAO,MAAK,MAAZ,EAAmB,SAAM,OAAzB,EAAiC,aAAa,MAAM,QAAN,EAA9C,GAAX;AACA,WAAK,GAAL,CAAS,gBAAT,CAA0B,OAA1B,EAAmC;AAAA,cAAK,MAAK,QAAL,CAAc,CAAd,CAAL;AAAA,MAAnC;AACA,WAAK,GAAL,CAAS,SAAT;;AAEA,WAAK,aAAL,IAAwB,6BAAY,MAAK,KAAL,CAAW,YAAvB,IAAuC,GAAvC,GAA6C,GAArE;AACA,WAAK,OAAL,GAAe,IAAI,OAAJ,8BACK,kBAAQ,IADb,oBAET,MAAK,aAFI,WAEe,MAAK,KAAL,CAAW,QAAX,EAFf,yCAAf;;AAMA,WAAK,WAAL,CAAiB,eAAjB,EAAkC;AAAA,cAAK,MAAK,eAAL,CAAqB,CAArB,CAAL;AAAA,MAAlC;AAjBiB;AAkBlB;;;;2BAEK,K,EAAO;AACX,cAAO,KAAK,OAAL,CAAa,KAAb,CAAmB,KAAnB,EAA0B,KAAK,aAA/B,CAAP;AACD;;;8BAEQ,K,EAAO;AAAA;;AACd,WAAI,KAAK,QAAT,EAAmB;AACjB,sBAAa,KAAK,QAAlB;AACA,cAAK,QAAL,GAAgB,IAAhB;AACD;AACD,YAAK,QAAL,GAAgB,WAAW;AAAA,gBAAM,OAAK,IAAL,CAAU,eAAV,EAA2B,KAA3B,CAAN;AAAA,QAAX,EAAoD,kBAApD,CAAhB;;AAEA,WAAI,KAAK,KAAL,CAAW,KAAK,GAAL,CAAS,KAApB,EAA2B,SAA3B,EAAJ,EAA4C;AAC1C,cAAK,QAAL,CAAc,IAAd;AACD,QAFD,MAEO,IAAI,KAAK,SAAL,IACA,KAAK,KAAL,CAAW,KAAK,GAAL,CAAS,KAAT,CAAe,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAX,EAAwC,SAAxC,EADA,IAEA,KAAK,SAAL,CAAe,KAAf,CAAqB,KAAK,GAAL,CAAS,KAAT,CAAe,KAAf,CAAqB,CAAC,CAAtB,CAArB,EAA+C,SAA/C,EAFJ,EAEgE;AACrE,aAAI,WAAW,KAAK,GAAL,CAAS,KAAT,CAAe,KAAf,CAAqB,CAAC,CAAtB,CAAf;AACA,cAAK,GAAL,CAAS,KAAT,GAAiB,KAAK,GAAL,CAAS,KAAT,CAAe,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAjB;AACA,cAAK,wBAAL,CAA8B,QAA9B;AACA,cAAK,QAAL,CAAc,IAAd;AACD,QAPM,MAOA;AACL,cAAK,QAAL,CAAc,KAAd;AACD;AACF;;;qCAEe,K,EAAO,CACtB;;;8CAEwB,I,EAAM;AAC7B,WAAI,KAAK,SAAL,IAAkB,KAAK,SAAL,CAAe,cAArC,EAAqD;AACnD,cAAK,SAAL,CAAe,GAAf,CAAmB,KAAnB;AACA,cAAK,SAAL,CAAe,GAAf,CAAmB,KAAnB,GAA2B,IAA3B;AACD,QAHD,MAGO,IAAI,KAAK,SAAT,EAAoB;AACzB,cAAK,SAAL,CAAe,GAAf,CAAmB,KAAnB;AACA,cAAK,SAAL,CAAe,SAAf,CAAyB,EAAC,KAAK,IAAN,EAAY,gBAAgB,0BAAW,CAAE,CAAzC,EAAzB;AACD;AACF;;;8BAEQ,O,EAAS;AAChB,YAAK,GAAL,CAAS,SAAT,CAAmB,MAAnB,CAA0B,OAA1B,EAAmC,OAAnC;AACA,YAAK,GAAL,CAAS,SAAT,CAAmB,MAAnB,CAA0B,SAA1B,EAAqC,CAAC,OAAtC;AACD;;;mCAEa,Q,EAAU,K,EAAO;AAAE;AAC/B,WAAI,KAAK,SAAT,EAAoB;AAClB,cAAK,SAAL,CAAe,aAAf,CAA6B,QAA7B,EAAuC,KAAvC;AACD;AACF;;;iCAEW,S,EAAW;AACrB,YAAK,MAAL,CAAY,YAAZ,CAAyB,SAAzB,EAAoC,IAApC;AACD;;;;;AAOD;AACA;kCACa,I,EAAM;AACjB,WAAI,IAAJ,EAAU;AACR,cAAK,SAAL,GAAiB,IAAjB;AACA,cAAK,SAAL,GAAiB,IAAjB;AACD;;AAED,cAAO,IAAP;AACD;;;yBAdc;AAAE,cAAO,IAAP;AAAc;;;yBACX;AAAE,cAAO,IAAP;AAAc;;;yBAEvB;AAAE,cAAO,KAAK,GAAL,CAAS,aAAT,CAAuB,SAA9B;AAA0C;;;yBAapC;AAAE,cAAO,IAAP;AAAc;;;;;;mBA1FlB,K;;;;;;ACXrB,0C;;;;;;;;;;;;;;;;;ACEA;;;;AACA;;;;AACA;;AACA;;AAEA;;;;;;;;;;gfAPA;;KASqB,K;;;AACnB,kBAAY,KAAZ,EAAmB;AAAA;;AAAA,0FACX,KADW;;AAGjB,WAAK,QAAL,GAAgB,IAAhB;;AAEA,WAAK,GAAL,GAAW,oBAAO,MAAK,MAAZ,EAAmB,SAAM,aAAzB,EAAuC,aAAa,MAAM,QAAN,EAApD,GAAX;AACA,WAAK,GAAL,CAAS,SAAT;;AAEA,WAAK,GAAL,CAAS,gBAAT,CAA0B,OAA1B,EAAmC;AAAA,cAAK,MAAK,QAAL,CAAc,CAAd,CAAL;AAAA,MAAnC;AACA,WAAK,GAAL,CAAS,gBAAT,CAA0B,UAA1B,EAAsC;AAAA,cAAK,MAAK,UAAL,CAAgB,CAAhB,CAAL;AAAA,MAAtC;AACA,WAAK,GAAL,CAAS,gBAAT,CAA0B,MAA1B,EAAkC;AAAA,cAAK,MAAK,MAAL,CAAY,CAAZ,CAAL;AAAA,MAAlC;AAViB;AAWlB;;;;2BAEK,K,EAAO;AACX,cAAO,kBAAQ,KAAR,CAAc,KAAd,EAAqB,KAAK,KAAL,CAAW,QAAhC,CAAP;AACD;;;mCAEa,Q,EAAU,K,EAAO;AAC7B;AACA,WAAI,UAAU,CAAC,CAAf,EAAkB;AAChB,aAAI,2BAAU,KAAK,KAAL,CAAW,QAArB,EAA+B,SAAS,YAAxC,CAAJ,EAA2D;AACzD,sBAAW,2BAAU,QAAV,EAAoB,SAAS,YAA7B,CAAX;AACA,gBAAK,WAAL,CAAiB,yBAAU,QAAV,CAAjB;AACD,UAHD,MAGO;AACL,iBAAM,IAAI,KAAJ,CAAU,uBAAqB,KAAK,KAAL,CAAW,QAAhC,iDACkB,SAAS,YAD3B,CAAV,CAAN;AAED;AACF,QARD,MAQO,IAAI,KAAK,SAAT,EAAoB;AACzB,cAAK,SAAL,CAAe,aAAf,CAA6B,QAA7B,EAAuC,KAAvC;AACD;AACF;;;gCAEU,K,EAAO;AAChB,aAAM,cAAN;AACA,WAAI,eAAe,wBAAQ,MAAM,YAAN,CAAmB,OAAnB,CAA2B,YAA3B,CAAR,CAAnB;AACA,WAAI,WAAW,aAAa,KAA5B;AACA,WAAI,2BAAU,KAAK,KAAL,CAAW,QAArB,EAA+B,SAAS,YAAxC,CAAJ,EAA2D;AACzD,eAAM,YAAN,CAAmB,UAAnB,GAAgC,MAAhC;AACD,QAFD,MAEO;AACL,eAAM,YAAN,CAAmB,UAAnB,GAAgC,MAAhC;AACD;AACF;;;4BAEM,K,EAAO;AACZ,aAAM,cAAN;;AAEA,WAAI,eAAe,wBAAQ,MAAM,YAAN,CAAmB,OAAnB,CAA2B,YAA3B,CAAR,CAAnB;AACA,WAAI,WAAW,aAAa,KAA5B;AACA,WAAI,2BAAU,KAAK,KAAL,CAAW,QAArB,EAA+B,SAAS,YAAxC,CAAJ,EAA2D;AACzD,oBAAW,2BAAU,QAAV,EAAoB,SAAS,YAA7B,CAAX;AACA,cAAK,WAAL,CAAiB,yBAAU,QAAV,CAAjB;AACD;AACF;;AAED;;;;;;;mBAvDmB,K;;;;;;;;;;;;;;ACNrB;;;;AAEA;;;;;;;;;;;;AALA;AACA,qBAAQ,EAAR;;AAMA;AACA;;AAEA;KACqB,G;;;AACnB,gBAAY,KAAZ,EAAmB;AAAA;;AAAA,wFACX,KADW;;AAGjB,WAAK,gBAAL,GAAwB,MAAK,KAAL,CAAW,OAAX,CAAmB,GAAnB,CAAuB;AAAA,cAAU,yBAAU,MAAV,CAAV;AAAA,MAAvB,CAAxB;AACA,WAAK,GAAL,GAAW;AAAA;AAAA,SAAM,SAAM,WAAZ;AACT,aAAK,gBAAL,CAAsB,GAAtB,CAA0B;AAAA,gBAAmB,gBAAgB,GAAnC;AAAA,QAA1B;AADS,MAAX;AAGA,WAAK,GAAL,CAAS,SAAT;AAPiB;AAQlB;;;;yBAEc;AAAE,cAAO,KAAK,gBAAZ;AAA+B;;;yBAC5B;AAAE,cAAO,KAAK,KAAL,CAAW,OAAlB;AAA4B;;;yBAE7B;AAAE,cAAO,KAAP;AAAe;;;;;;mBAdnB,G;;;;;;ACXrB,0C;;;;;;;;;;;;;;;ACGA;;;;;;;;;;;;AAHA;AACA,qBAAQ,EAAR;;KAIqB,Q;;;AACnB,qBAAY,KAAZ,EAAmB;AAAA;;AAAA,6FACX,KADW;;AAGjB,WAAK,GAAL,GAAW;AAAA;AAAA,SAAM,SAAM,gBAAZ,EAA6B,iBAAgB,MAA7C;AACT,aAAK,KAAL,CAAW;AADF,MAAX;AAGA,WAAK,GAAL,CAAS,SAAT;AACA,WAAK,GAAL,CAAS,gBAAT,CAA0B,SAA1B,EAAqC;AAAA,cAAK,MAAK,SAAL,CAAe,CAAf,CAAL;AAAA,MAArC;AACA,WAAK,GAAL,CAAS,gBAAT,CAA0B,UAA1B,EAAsC;AAAA,cAAK,MAAK,UAAL,CAAgB,CAAhB,CAAL;AAAA,MAAtC;AACA,WAAK,GAAL,CAAS,gBAAT,CAA0B,MAA1B,EAAkC;AAAA,cAAK,MAAK,MAAL,CAAY,CAAZ,CAAL;AAAA,MAAlC;;AAEA;AACA,WAAK,uBAAL,GAA+B,MAAK,KAAL,CAAW,GAA1C;AAZiB;AAalB;;AAED;;;;+BAEU,K,EAAO;AACf,WAAI,MAAM,GAAN,CAAU,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,eAAM,cAAN;AACA,aAAI,KAAK,uBAAL,CAA6B,KAA7B,CAAmC,CAAnC,EAAsC,CAAtC,MAA6C,MAAM,GAAvD,EAA4D;AAC1D,gBAAK,uBAAL,GAA+B,KAAK,uBAAL,CAA6B,KAA7B,CAAmC,CAAnC,CAA/B;AACA,eAAI,KAAK,uBAAL,KAAiC,EAAjC,IACA,KAAK,SADT,EACoB;AAClB,kBAAK,uBAAL,GAA+B,KAAK,KAAL,CAAW,GAA1C;AACA,kBAAK,SAAL,CAAe,GAAf,CAAmB,KAAnB;AACD;AACF,UAPD,MAOO,IAAI,KAAK,SAAT,EAAoB;AACzB,gBAAK,wBAAL,CAA8B,MAAM,GAApC;AACD;AACF;AACF;;;gCAEU,K,EAAO;AAChB,aAAM,cAAN;AACA,aAAM,YAAN,CAAmB,UAAnB,GAAgC,MAAhC;AACA,cAAO,KAAP;AACD;;;4BAEM,K,EAAO;AACZ,aAAM,cAAN;AACA,cAAO,KAAP;AACD;;AAED;;;;yBAEqB;AAAE,cAAO,KAAP;AAAe;;;;;;mBA/CnB,Q;;;;;;ACLrB,0C;;;;;;;ACAA,0C;;;;;;;;;;;;;;;ACEA;;;;;;;;;;gfAFA;;AAIA;KACqB,iB;;;AACnB,8BAAY,KAAZ,EAAmB;AAAA;;AAAA,sGACX,KADW;;AAGjB,SAAI,IAAI,MAAJ,KAAe,iBAAnB,EAAsC;AACpC,aAAM,IAAI,SAAJ,CAAc,6CAAd,CAAN;AACD;AALgB;AAMlB;;;;kCAEY,I,EAAM;AACjB,YAAK,QAAL,CAAc,OAAd,CAAsB,iBAAS;AAC7B,gBAAO,MAAM,YAAN,CAAmB,IAAnB,CAAP;AACD,QAFD;;AAIA,cAAO,IAAP;AACD;;;kCAEY,Q,EAAU,Q,EAAU;AAC/B,WAAI,QAAQ,KAAK,QAAL,CAAc,OAAd,CAAsB,QAAtB,CAAZ;AACA,YAAK,QAAL,CAAc,KAAd,IAAuB,QAAvB;AACA,WAAI,KAAK,aAAT,EAAwB;AACtB,cAAK,aAAL,CAAmB,KAAnB,IAA4B,SAAS,KAArC;AACD;AACD,YAAK,GAAL,CAAS,YAAT,CAAsB,SAAS,GAA/B,EAAoC,SAAS,GAA7C;;AAEA,YAAK,cAAL,CAAoB,KAApB,EAA2B,QAA3B,EAAqC,QAArC;AACD;;;oCAEc,K,EAAO,Q,EAAU,Q,EAAU;AACxC;AACA,WAAI,OAAO,SAAS,YAAT,CAAsB,SAAS,SAA/B,CAAX;AACA;AACA,WAAI,SAAS,SAAb,EAAwB;AACtB,kBAAS,SAAT,CAAmB,YAAnB,CAAgC,IAAhC;AACD;AACF;;;;;;mBAnCkB,iB;;;;;;;;;;;;;;ACHrB;;;;AAEA;;;;;;;;;;gfAJA;;KAMqB,I;;;AACnB,iBAAY,KAAZ,EAAmB;AAAA;;AAAA,yFACX,KADW;;AAGjB,WAAK,KAAL,GAAa,CAAC,yBAAU,MAAK,KAAL,CAAW,IAArB,CAAD,CAAb;AACA,WAAK,GAAL,GAAW;AAAA;AAAA,SAAM,SAAM,YAAZ;AACT,aAAK,KAAL,CAAW,GAAX,CAAe;AAAA,gBAAQ,KAAK,GAAb;AAAA,QAAf;AADS,MAAX;AAGA,WAAK,GAAL,CAAS,SAAT;AAPiB;AAQlB;;;;yBAEc;AAAE,cAAO,KAAK,KAAZ;AAAoB;;;yBACjB;AAAE,cAAO,IAAP;AAAc;;AAEpC;;;;yBACqB;AAAE,cAAO,IAAP;AAAc;;;;;;mBAflB,I;;;;;;;;;;;;;;ACJrB;;;;AAEA;;;;;;;;;;gfAJA;;KAMqB,I;;;AACnB,iBAAY,KAAZ,EAAmB;AAAA;;AAAA,yFACX,KADW;;AAGjB,WAAK,KAAL,GAAa,CAAC,yBAAU,MAAK,KAAL,CAAW,IAArB,CAAD,CAAb;AACA,WAAK,GAAL,GAAW;AAAA;AAAA,SAAM,SAAM,YAAZ;AACT,aAAK,KAAL,CAAW,GAAX,CAAe;AAAA,gBAAQ,KAAK,GAAb;AAAA,QAAf,CADS;AAEV;AAAA;AAAA;AAAA;AAAA;AAFU,MAAX;AAGA,WAAK,GAAL,CAAS,SAAT;;AAEA,WAAK,UAAL,GAAkB,MAAK,GAAL,CAAS,aAAT,CAAuB,WAAvB,CAAlB;AACA,WAAK,UAAL,CAAgB,gBAAhB,CAAiC,OAAjC,EAA0C,iBAAS;AACjD,WAAI,MAAM,QAAV,EAAoB;AAClB,eAAK,UAAL;AACD,QAFD,MAEO;AACL,eAAK,OAAL;AACD;AACF,MAND;AAViB;AAiBlB;;;;+BAQS;AACR,WAAI,YAAY,yBAAU,KAAK,KAAL,CAAW,IAArB,CAAhB;AACA,WAAI,gBAAgB,KAAK,KAAL,CAAW,KAAX,CAAiB,CAAC,CAAlB,EAAqB,CAArB,CAApB;AACA,WAAI,gBAAgB,cAAc,SAAlC;;AAEA,YAAK,KAAL,CAAW,IAAX,CAAgB,SAAhB;AACA,YAAK,GAAL,CAAS,YAAT,CAAsB,UAAU,GAAhC,EAAqC,KAAK,UAA1C;;AAEA,iBAAU,YAAV,CAAuB,aAAvB;AACA,WAAI,aAAJ,EAAmB;AACjB,uBAAc,YAAd,CAA2B,SAA3B;AACD;AACF;;;kCAEY;AACX,WAAI,cAAc,KAAK,KAAL,CAAW,GAA7B;AACA,YAAK,GAAL,CAAS,WAAT,CAAqB,YAAY,GAAjC;;AAEA,WAAI,YAAY,SAAhB,EAA2B;AACzB,qBAAY,SAAZ,CAAsB,YAAtB,CAAmC,YAAY,SAA/C;AACD;AACF;;;yBA3Bc;AAAE,cAAO,KAAK,KAAZ;AAAoB;;;yBACjB;AAAE,cAAO,IAAP;AAAc;;AAEpC;;;;yBACqB;AAAE,cAAO,IAAP;AAAc;;;;;;mBAxBlB,I","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8217dc63c0a8cc9e57b5\n **/","/* eslint-env browser */\n/* @jsx plainJSX */\nimport \"plain-jsx\";\n\nrequire(\"../stylesheets/style.css\");\n\nimport {polyfill} from \"keyboardevent-key-polyfill\";\npolyfill();\n\nimport * as ohm from \"../third_party/ohm.js\";\n\nimport {grammarSource, default as grammar} from \"./grammar.js\";\nimport {$} from \"./utils.js\";\nimport {addData} from \"./dropUtils.js\";\n\nimport StructuredExampleInput from \"./components/structuredExampleInput.js\";\n\n// TODO: create a simple set of methods that represents the actions you want\nvar inputs = $('#inputs');\nvar inputElements = [];\nfunction makeInput(ruleName) {\n  if (!grammar.rules.hasOwnProperty(ruleName)) {\n    throw new Error(`grammar doesn't have rule ${ruleName}`);\n  }\n\n  var input = <li class=\"root\" draggable=\"true\"/>;\n  inputs.appendChild(input);\n\n  let inputElement = new StructuredExampleInput(ruleName);\n  input.appendChild(inputElement.DOM);\n  inputElements.push(inputElement);\n\n  input.addEventListener('dragstart', function(event) {\n    let key = addData(inputElement);\n    event.dataTransfer.setData('text/plain', key);\n    event.dataTransfer.effectAllowed = 'all';\n  });\n\n  return input;\n}\n\n// TODO: still need to preserve state\nfunction drag(fromLineNo, toLineNo, toIndex) {\n  fromLineNo -= 1;\n  toLineNo -= 1;\n\n  let fromPexpr = inputElements[fromLineNo].pexpr;\n  let toElement = inputElements[toLineNo];\n\n  toElement.visualReplace(fromPexpr, toIndex);\n}\n\nObject.keys(grammar.rules).forEach(ruleName => makeInput(ruleName));\n$('#grammar').textContent = grammarSource;\n\nObject.assign(window, {\n  grammar,\n  ohm,\n  makeInput,\n  drag\n});\n\n/* eslint-disable no-console */\nconsole.log(grammar.source.contents);\n/* eslint-enable no-console */\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","window.plainJSX = function (tagName, attributes) {\n  'use strict';\n\n  var children = Array.prototype.concat.apply([], Array.prototype.slice.call(arguments, 2));\n\n  if (typeof tagName !== 'string') {\n    throw new Error('plain-jsx only renders regular HTML elements, not components');\n  }\n\n  var element = document.createElement(tagName);\n\n  for (var name in attributes) {\n    if (attributes.hasOwnProperty(name)) {\n      element.setAttribute(name, attributes[name]);\n    }\n  }\n\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n\n    if (child != null) {\n      element.appendChild(\n        child instanceof HTMLElement ?\n          child :\n          document.createTextNode(child)\n      );\n    }\n  }\n\n  return element;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/plain-jsx/index.js\n ** module id = 1\n ** module chunks = 0\n **/","/* global define, KeyboardEvent, module */\n\n(function () {\n\n  var keyboardeventKeyPolyfill = {\n    polyfill: polyfill,\n    keys: {\n      3: 'Cancel',\n      6: 'Help',\n      8: 'Backspace',\n      9: 'Tab',\n      12: 'Clear',\n      13: 'Enter',\n      16: 'Shift',\n      17: 'Control',\n      18: 'Alt',\n      19: 'Pause',\n      20: 'CapsLock',\n      27: 'Escape',\n      28: 'Convert',\n      29: 'NonConvert',\n      30: 'Accept',\n      31: 'ModeChange',\n      32: ' ',\n      33: 'PageUp',\n      34: 'PageDown',\n      35: 'End',\n      36: 'Home',\n      37: 'ArrowLeft',\n      38: 'ArrowUp',\n      39: 'ArrowRight',\n      40: 'ArrowDown',\n      41: 'Select',\n      42: 'Print',\n      43: 'Execute',\n      44: 'PrintScreen',\n      45: 'Insert',\n      46: 'Delete',\n      48: ['0', ')'],\n      49: ['1', '!'],\n      50: ['2', '@'],\n      51: ['3', '#'],\n      52: ['4', '$'],\n      53: ['5', '%'],\n      54: ['6', '^'],\n      55: ['7', '&'],\n      56: ['8', '*'],\n      57: ['9', '('],\n      91: 'OS',\n      93: 'ContextMenu',\n      144: 'NumLock',\n      145: 'ScrollLock',\n      181: 'VolumeMute',\n      182: 'VolumeDown',\n      183: 'VolumeUp',\n      186: [';', ':'],\n      187: ['=', '+'],\n      188: [',', '<'],\n      189: ['-', '_'],\n      190: ['.', '>'],\n      191: ['/', '?'],\n      192: ['`', '~'],\n      219: ['[', '{'],\n      220: ['\\\\', '|'],\n      221: [']', '}'],\n      222: [\"'\", '\"'],\n      224: 'Meta',\n      225: 'AltGraph',\n      246: 'Attn',\n      247: 'CrSel',\n      248: 'ExSel',\n      249: 'EraseEof',\n      250: 'Play',\n      251: 'ZoomOut'\n    }\n  };\n\n  // Function keys (F1-24).\n  var i;\n  for (i = 1; i < 25; i++) {\n    keyboardeventKeyPolyfill.keys[111 + i] = 'F' + i;\n  }\n\n  // Printable ASCII characters.\n  var letter = '';\n  for (i = 65; i < 91; i++) {\n    letter = String.fromCharCode(i);\n    keyboardeventKeyPolyfill.keys[i] = [letter.toLowerCase(), letter.toUpperCase()];\n  }\n\n  function polyfill () {\n    if (!('KeyboardEvent' in window) ||\n        'key' in KeyboardEvent.prototype) {\n      return false;\n    }\n\n    // Polyfill `key` on `KeyboardEvent`.\n    var proto = {\n      get: function (x) {\n        var key = keyboardeventKeyPolyfill.keys[this.which || this.keyCode];\n\n        if (Array.isArray(key)) {\n          key = key[+this.shiftKey];\n        }\n\n        return key;\n      }\n    };\n    Object.defineProperty(KeyboardEvent.prototype, 'key', proto);\n    return proto;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define('keyboardevent-key-polyfill', keyboardeventKeyPolyfill);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    module.exports = keyboardeventKeyPolyfill;\n  } else if (window) {\n    window.keyboardeventKeyPolyfill = keyboardeventKeyPolyfill;\n  }\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/keyboardevent-key-polyfill/index.js\n ** module id = 2\n ** module chunks = 0\n **/","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})\n\n\n/** WEBPACK FOOTER **\n ** node_modules/browser-pack/_prelude.js\n **/","var ohm = require('..');\nmodule.exports = ohm.makeRecipe([\"grammar\",{\"source\":\"BuiltInRules {\\n\\n  alnum  (an alpha-numeric character)\\n    = letter\\n    | digit\\n\\n  letter  (a letter)\\n    = lower\\n    | upper\\n    | unicodeLtmo\\n\\n  digit  (a digit)\\n    = \\\"0\\\"..\\\"9\\\"\\n\\n  hexDigit  (a hexadecimal digit)\\n    = digit\\n    | \\\"a\\\"..\\\"f\\\"\\n    | \\\"A\\\"..\\\"F\\\"\\n\\n  ListOf<elem, sep>\\n    = NonemptyListOf<elem, sep>\\n    | EmptyListOf<elem, sep>\\n\\n  NonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  EmptyListOf<elem, sep>\\n    = /* nothing */\\n\\n  listOf<elem, sep>\\n    = nonemptyListOf<elem, sep>\\n    | emptyListOf<elem, sep>\\n\\n  nonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  emptyListOf<elem, sep>\\n    = /* nothing */\\n\\n}\"},\"BuiltInRules\",null,null,{\"alnum\":[\"define\",{\"sourceInterval\":[18,78]},\"an alpha-numeric character\",[],[\"alt\",{\"sourceInterval\":[60,78]},[\"app\",{\"sourceInterval\":[60,66]},\"letter\",[]],[\"app\",{\"sourceInterval\":[73,78]},\"digit\",[]]]],\"letter\":[\"define\",{\"sourceInterval\":[82,142]},\"a letter\",[],[\"alt\",{\"sourceInterval\":[107,142]},[\"app\",{\"sourceInterval\":[107,112]},\"lower\",[]],[\"app\",{\"sourceInterval\":[119,124]},\"upper\",[]],[\"app\",{\"sourceInterval\":[131,142]},\"unicodeLtmo\",[]]]],\"digit\":[\"define\",{\"sourceInterval\":[146,177]},\"a digit\",[],[\"range\",{\"sourceInterval\":[169,177]},\"0\",\"9\"]],\"hexDigit\":[\"define\",{\"sourceInterval\":[181,254]},\"a hexadecimal digit\",[],[\"alt\",{\"sourceInterval\":[219,254]},[\"app\",{\"sourceInterval\":[219,224]},\"digit\",[]],[\"range\",{\"sourceInterval\":[231,239]},\"a\",\"f\"],[\"range\",{\"sourceInterval\":[246,254]},\"A\",\"F\"]]],\"ListOf\":[\"define\",{\"sourceInterval\":[258,336]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[282,336]},[\"app\",{\"sourceInterval\":[282,307]},\"NonemptyListOf\",[[\"param\",{},0],[\"param\",{},1]]],[\"app\",{\"sourceInterval\":[314,336]},\"EmptyListOf\",[[\"param\",{},0],[\"param\",{},1]]]]],\"NonemptyListOf\":[\"define\",{\"sourceInterval\":[340,388]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[372,388]},[\"param\",{},0],[\"star\",{\"sourceInterval\":[377,388]},[\"seq\",{\"sourceInterval\":[378,386]},[\"param\",{},1],[\"param\",{},0]]]]],\"EmptyListOf\":[\"define\",{\"sourceInterval\":[392,434]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[438,438]}]],\"listOf\":[\"define\",{\"sourceInterval\":[438,516]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[462,516]},[\"app\",{\"sourceInterval\":[462,487]},\"nonemptyListOf\",[[\"param\",{},0],[\"param\",{},1]]],[\"app\",{\"sourceInterval\":[494,516]},\"emptyListOf\",[[\"param\",{},0],[\"param\",{},1]]]]],\"nonemptyListOf\":[\"define\",{\"sourceInterval\":[520,568]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[552,568]},[\"param\",{},0],[\"star\",{\"sourceInterval\":[557,568]},[\"seq\",{\"sourceInterval\":[558,566]},[\"param\",{},1],[\"param\",{},0]]]]],\"emptyListOf\":[\"define\",{\"sourceInterval\":[572,614]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[616,616]}]]}]);\n\n\n\n/** WEBPACK FOOTER **\n ** dist/built-in-rules.js\n **/","var ohm = require('..');\nmodule.exports = ohm.makeRecipe([\"grammar\",{\"source\":\"Ohm {\\n\\n  Grammars\\n    = Grammar*\\n\\n  Grammar\\n    = ident SuperGrammar? \\\"{\\\" Rule* \\\"}\\\"\\n\\n  SuperGrammar\\n    = \\\"<:\\\" ident\\n\\n  Rule\\n    = ident Formals? ruleDescr? \\\"=\\\"  RuleBody  -- define\\n    | ident Formals?            \\\":=\\\" RuleBody  -- override\\n    | ident Formals?            \\\"+=\\\" RuleBody  -- extend\\n\\n  RuleBody\\n    = \\\"|\\\"? NonemptyListOf<TopLevelTerm, \\\"|\\\">\\n\\n  TopLevelTerm\\n    = Seq caseName  -- inline\\n    | Seq\\n\\n  Formals\\n    = \\\"<\\\" ListOf<ident, \\\",\\\"> \\\">\\\"\\n\\n  Params\\n    = \\\"<\\\" ListOf<Seq, \\\",\\\"> \\\">\\\"\\n\\n  Alt\\n    = NonemptyListOf<Seq, \\\"|\\\">\\n\\n  Seq\\n    = Iter*\\n\\n  Iter\\n    = Pred \\\"*\\\"  -- star\\n    | Pred \\\"+\\\"  -- plus\\n    | Pred \\\"?\\\"  -- opt\\n    | Pred\\n\\n  Pred\\n    = \\\"~\\\" Lex  -- not\\n    | \\\"&\\\" Lex  -- lookahead\\n    | Lex\\n\\n  Lex\\n    = \\\"#\\\" Base  -- lex\\n    | Base\\n\\n  Base\\n    = ident Params? ~(ruleDescr? \\\"=\\\" | \\\":=\\\" | \\\"+=\\\")  -- application\\n    | terminal \\\"..\\\" terminal                         -- range\\n    | terminal                                       -- terminal\\n    | \\\"(\\\" Alt \\\")\\\"                                    -- paren\\n\\n  ruleDescr  (a rule description)\\n    = \\\"(\\\" ruleDescrText \\\")\\\"\\n\\n  ruleDescrText\\n    = (~\\\")\\\" any)*\\n\\n  caseName\\n    = \\\"--\\\" (~\\\"\\\\n\\\" space)* name (~\\\"\\\\n\\\" space)* (\\\"\\\\n\\\" | &\\\"}\\\")\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n  ident  (an identifier)\\n    = name\\n\\n  terminal\\n    = \\\"\\\\\\\"\\\" terminalChar* \\\"\\\\\\\"\\\"\\n\\n  terminalChar\\n    = escapeChar\\n    | ~\\\"\\\\\\\\\\\" ~\\\"\\\\\\\"\\\" ~\\\"\\\\n\\\" any\\n\\n  escapeChar  (an escape sequence)\\n    = \\\"\\\\\\\\\\\\\\\\\\\"                                     -- backslash\\n    | \\\"\\\\\\\\\\\\\\\"\\\"                                     -- doubleQuote\\n    | \\\"\\\\\\\\\\\\'\\\"                                     -- singleQuote\\n    | \\\"\\\\\\\\b\\\"                                      -- backspace\\n    | \\\"\\\\\\\\n\\\"                                      -- lineFeed\\n    | \\\"\\\\\\\\r\\\"                                      -- carriageReturn\\n    | \\\"\\\\\\\\t\\\"                                      -- tab\\n    | \\\"\\\\\\\\u\\\" hexDigit hexDigit hexDigit hexDigit  -- unicodeEscape\\n    | \\\"\\\\\\\\x\\\" hexDigit hexDigit                    -- hexEscape\\n\\n  space\\n   += comment\\n\\n  comment\\n    = \\\"//\\\" (~\\\"\\\\n\\\" any)* \\\"\\\\n\\\"  -- singleLine\\n    | \\\"/*\\\" (~\\\"*/\\\" any)* \\\"*/\\\"  -- multiLine\\n\\n  tokens = token*\\n\\n  token = caseName | comment | ident | operator | punctuation | terminal | any\\n\\n  operator = \\\"<:\\\" | \\\"=\\\" | \\\":=\\\" | \\\"+=\\\" | \\\"*\\\" | \\\"+\\\" | \\\"?\\\" | \\\"~\\\" | \\\"&\\\"\\n\\n  punctuation = \\\"<\\\" | \\\">\\\" | \\\",\\\" | \\\"--\\\"\\n}\"},\"Ohm\",null,\"Grammars\",{\"Grammars\":[\"define\",{\"sourceInterval\":[9,32]},null,[],[\"star\",{\"sourceInterval\":[24,32]},[\"app\",{\"sourceInterval\":[24,31]},\"Grammar\",[]]]],\"Grammar\":[\"define\",{\"sourceInterval\":[36,83]},null,[],[\"seq\",{\"sourceInterval\":[50,83]},[\"app\",{\"sourceInterval\":[50,55]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[56,69]},[\"app\",{\"sourceInterval\":[56,68]},\"SuperGrammar\",[]]],[\"terminal\",{\"sourceInterval\":[70,73]},\"{\"],[\"star\",{\"sourceInterval\":[74,79]},[\"app\",{\"sourceInterval\":[74,78]},\"Rule\",[]]],[\"terminal\",{\"sourceInterval\":[80,83]},\"}\"]]],\"SuperGrammar\":[\"define\",{\"sourceInterval\":[87,116]},null,[],[\"seq\",{\"sourceInterval\":[106,116]},[\"terminal\",{\"sourceInterval\":[106,110]},\"<:\"],[\"app\",{\"sourceInterval\":[111,116]},\"ident\",[]]]],\"Rule_define\":[\"define\",{\"sourceInterval\":[131,181]},null,[],[\"seq\",{\"sourceInterval\":[131,170]},[\"app\",{\"sourceInterval\":[131,136]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[137,145]},[\"app\",{\"sourceInterval\":[137,144]},\"Formals\",[]]],[\"opt\",{\"sourceInterval\":[146,156]},[\"app\",{\"sourceInterval\":[146,155]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[157,160]},\"=\"],[\"app\",{\"sourceInterval\":[162,170]},\"RuleBody\",[]]]],\"Rule_override\":[\"define\",{\"sourceInterval\":[188,240]},null,[],[\"seq\",{\"sourceInterval\":[188,227]},[\"app\",{\"sourceInterval\":[188,193]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[194,202]},[\"app\",{\"sourceInterval\":[194,201]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[214,218]},\":=\"],[\"app\",{\"sourceInterval\":[219,227]},\"RuleBody\",[]]]],\"Rule_extend\":[\"define\",{\"sourceInterval\":[247,297]},null,[],[\"seq\",{\"sourceInterval\":[247,286]},[\"app\",{\"sourceInterval\":[247,252]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[253,261]},[\"app\",{\"sourceInterval\":[253,260]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[273,277]},\"+=\"],[\"app\",{\"sourceInterval\":[278,286]},\"RuleBody\",[]]]],\"Rule\":[\"define\",{\"sourceInterval\":[120,297]},null,[],[\"alt\",{\"sourceInterval\":[131,297]},[\"app\",{\"sourceInterval\":[131,170]},\"Rule_define\",[]],[\"app\",{\"sourceInterval\":[188,227]},\"Rule_override\",[]],[\"app\",{\"sourceInterval\":[247,286]},\"Rule_extend\",[]]]],\"RuleBody\":[\"define\",{\"sourceInterval\":[301,354]},null,[],[\"seq\",{\"sourceInterval\":[316,354]},[\"opt\",{\"sourceInterval\":[316,320]},[\"terminal\",{\"sourceInterval\":[316,319]},\"|\"]],[\"app\",{\"sourceInterval\":[321,354]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[336,348]},\"TopLevelTerm\",[]],[\"terminal\",{\"sourceInterval\":[350,353]},\"|\"]]]]],\"TopLevelTerm_inline\":[\"define\",{\"sourceInterval\":[377,400]},null,[],[\"seq\",{\"sourceInterval\":[377,389]},[\"app\",{\"sourceInterval\":[377,380]},\"Seq\",[]],[\"app\",{\"sourceInterval\":[381,389]},\"caseName\",[]]]],\"TopLevelTerm\":[\"define\",{\"sourceInterval\":[358,410]},null,[],[\"alt\",{\"sourceInterval\":[377,410]},[\"app\",{\"sourceInterval\":[377,389]},\"TopLevelTerm_inline\",[]],[\"app\",{\"sourceInterval\":[407,410]},\"Seq\",[]]]],\"Formals\":[\"define\",{\"sourceInterval\":[414,454]},null,[],[\"seq\",{\"sourceInterval\":[428,454]},[\"terminal\",{\"sourceInterval\":[428,431]},\"<\"],[\"app\",{\"sourceInterval\":[432,450]},\"ListOf\",[[\"app\",{\"sourceInterval\":[439,444]},\"ident\",[]],[\"terminal\",{\"sourceInterval\":[446,449]},\",\"]]],[\"terminal\",{\"sourceInterval\":[451,454]},\">\"]]],\"Params\":[\"define\",{\"sourceInterval\":[458,495]},null,[],[\"seq\",{\"sourceInterval\":[471,495]},[\"terminal\",{\"sourceInterval\":[471,474]},\"<\"],[\"app\",{\"sourceInterval\":[475,491]},\"ListOf\",[[\"app\",{\"sourceInterval\":[482,485]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[487,490]},\",\"]]],[\"terminal\",{\"sourceInterval\":[492,495]},\">\"]]],\"Alt\":[\"define\",{\"sourceInterval\":[499,533]},null,[],[\"app\",{\"sourceInterval\":[509,533]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[524,527]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[529,532]},\"|\"]]]],\"Seq\":[\"define\",{\"sourceInterval\":[537,552]},null,[],[\"star\",{\"sourceInterval\":[547,552]},[\"app\",{\"sourceInterval\":[547,551]},\"Iter\",[]]]],\"Iter_star\":[\"define\",{\"sourceInterval\":[567,584]},null,[],[\"seq\",{\"sourceInterval\":[567,575]},[\"app\",{\"sourceInterval\":[567,571]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[572,575]},\"*\"]]],\"Iter_plus\":[\"define\",{\"sourceInterval\":[591,608]},null,[],[\"seq\",{\"sourceInterval\":[591,599]},[\"app\",{\"sourceInterval\":[591,595]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[596,599]},\"+\"]]],\"Iter_opt\":[\"define\",{\"sourceInterval\":[615,631]},null,[],[\"seq\",{\"sourceInterval\":[615,623]},[\"app\",{\"sourceInterval\":[615,619]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[620,623]},\"?\"]]],\"Iter\":[\"define\",{\"sourceInterval\":[556,642]},null,[],[\"alt\",{\"sourceInterval\":[567,642]},[\"app\",{\"sourceInterval\":[567,575]},\"Iter_star\",[]],[\"app\",{\"sourceInterval\":[591,599]},\"Iter_plus\",[]],[\"app\",{\"sourceInterval\":[615,623]},\"Iter_opt\",[]],[\"app\",{\"sourceInterval\":[638,642]},\"Pred\",[]]]],\"Pred_not\":[\"define\",{\"sourceInterval\":[657,672]},null,[],[\"seq\",{\"sourceInterval\":[657,664]},[\"terminal\",{\"sourceInterval\":[657,660]},\"~\"],[\"app\",{\"sourceInterval\":[661,664]},\"Lex\",[]]]],\"Pred_lookahead\":[\"define\",{\"sourceInterval\":[679,700]},null,[],[\"seq\",{\"sourceInterval\":[679,686]},[\"terminal\",{\"sourceInterval\":[679,682]},\"&\"],[\"app\",{\"sourceInterval\":[683,686]},\"Lex\",[]]]],\"Pred\":[\"define\",{\"sourceInterval\":[646,710]},null,[],[\"alt\",{\"sourceInterval\":[657,710]},[\"app\",{\"sourceInterval\":[657,664]},\"Pred_not\",[]],[\"app\",{\"sourceInterval\":[679,686]},\"Pred_lookahead\",[]],[\"app\",{\"sourceInterval\":[707,710]},\"Lex\",[]]]],\"Lex_lex\":[\"define\",{\"sourceInterval\":[724,740]},null,[],[\"seq\",{\"sourceInterval\":[724,732]},[\"terminal\",{\"sourceInterval\":[724,727]},\"#\"],[\"app\",{\"sourceInterval\":[728,732]},\"Base\",[]]]],\"Lex\":[\"define\",{\"sourceInterval\":[714,751]},null,[],[\"alt\",{\"sourceInterval\":[724,751]},[\"app\",{\"sourceInterval\":[724,732]},\"Lex_lex\",[]],[\"app\",{\"sourceInterval\":[747,751]},\"Base\",[]]]],\"Base_application\":[\"define\",{\"sourceInterval\":[766,827]},null,[],[\"seq\",{\"sourceInterval\":[766,811]},[\"app\",{\"sourceInterval\":[766,771]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[772,779]},[\"app\",{\"sourceInterval\":[772,778]},\"Params\",[]]],[\"not\",{\"sourceInterval\":[780,811]},[\"alt\",{\"sourceInterval\":[782,810]},[\"seq\",{\"sourceInterval\":[782,796]},[\"opt\",{\"sourceInterval\":[782,792]},[\"app\",{\"sourceInterval\":[782,791]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[793,796]},\"=\"]],[\"terminal\",{\"sourceInterval\":[799,803]},\":=\"],[\"terminal\",{\"sourceInterval\":[806,810]},\"+=\"]]]]],\"Base_range\":[\"define\",{\"sourceInterval\":[834,889]},null,[],[\"seq\",{\"sourceInterval\":[834,856]},[\"app\",{\"sourceInterval\":[834,842]},\"terminal\",[]],[\"terminal\",{\"sourceInterval\":[843,847]},\"..\"],[\"app\",{\"sourceInterval\":[848,856]},\"terminal\",[]]]],\"Base_terminal\":[\"define\",{\"sourceInterval\":[896,954]},null,[],[\"app\",{\"sourceInterval\":[896,904]},\"terminal\",[]]],\"Base_paren\":[\"define\",{\"sourceInterval\":[961,1016]},null,[],[\"seq\",{\"sourceInterval\":[961,972]},[\"terminal\",{\"sourceInterval\":[961,964]},\"(\"],[\"app\",{\"sourceInterval\":[965,968]},\"Alt\",[]],[\"terminal\",{\"sourceInterval\":[969,972]},\")\"]]],\"Base\":[\"define\",{\"sourceInterval\":[755,1016]},null,[],[\"alt\",{\"sourceInterval\":[766,1016]},[\"app\",{\"sourceInterval\":[766,811]},\"Base_application\",[]],[\"app\",{\"sourceInterval\":[834,856]},\"Base_range\",[]],[\"app\",{\"sourceInterval\":[896,904]},\"Base_terminal\",[]],[\"app\",{\"sourceInterval\":[961,972]},\"Base_paren\",[]]]],\"ruleDescr\":[\"define\",{\"sourceInterval\":[1020,1079]},\"a rule description\",[],[\"seq\",{\"sourceInterval\":[1058,1079]},[\"terminal\",{\"sourceInterval\":[1058,1061]},\"(\"],[\"app\",{\"sourceInterval\":[1062,1075]},\"ruleDescrText\",[]],[\"terminal\",{\"sourceInterval\":[1076,1079]},\")\"]]],\"ruleDescrText\":[\"define\",{\"sourceInterval\":[1083,1114]},null,[],[\"star\",{\"sourceInterval\":[1103,1114]},[\"seq\",{\"sourceInterval\":[1104,1112]},[\"not\",{\"sourceInterval\":[1104,1108]},[\"terminal\",{\"sourceInterval\":[1105,1108]},\")\"]],[\"app\",{\"sourceInterval\":[1109,1112]},\"any\",[]]]]],\"caseName\":[\"define\",{\"sourceInterval\":[1118,1186]},null,[],[\"seq\",{\"sourceInterval\":[1133,1186]},[\"terminal\",{\"sourceInterval\":[1133,1137]},\"--\"],[\"star\",{\"sourceInterval\":[1138,1152]},[\"seq\",{\"sourceInterval\":[1139,1150]},[\"not\",{\"sourceInterval\":[1139,1144]},[\"terminal\",{\"sourceInterval\":[1140,1144]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1145,1150]},\"space\",[]]]],[\"app\",{\"sourceInterval\":[1153,1157]},\"name\",[]],[\"star\",{\"sourceInterval\":[1158,1172]},[\"seq\",{\"sourceInterval\":[1159,1170]},[\"not\",{\"sourceInterval\":[1159,1164]},[\"terminal\",{\"sourceInterval\":[1160,1164]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1165,1170]},\"space\",[]]]],[\"alt\",{\"sourceInterval\":[1174,1185]},[\"terminal\",{\"sourceInterval\":[1174,1178]},\"\\n\"],[\"lookahead\",{\"sourceInterval\":[1181,1185]},[\"terminal\",{\"sourceInterval\":[1182,1185]},\"}\"]]]]],\"name\":[\"define\",{\"sourceInterval\":[1190,1230]},\"a name\",[],[\"seq\",{\"sourceInterval\":[1211,1230]},[\"app\",{\"sourceInterval\":[1211,1220]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[1221,1230]},[\"app\",{\"sourceInterval\":[1221,1229]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[1234,1266]},null,[],[\"alt\",{\"sourceInterval\":[1250,1266]},[\"terminal\",{\"sourceInterval\":[1250,1253]},\"_\"],[\"app\",{\"sourceInterval\":[1260,1266]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[1270,1300]},null,[],[\"alt\",{\"sourceInterval\":[1285,1300]},[\"terminal\",{\"sourceInterval\":[1285,1288]},\"_\"],[\"app\",{\"sourceInterval\":[1295,1300]},\"alnum\",[]]]],\"ident\":[\"define\",{\"sourceInterval\":[1304,1337]},\"an identifier\",[],[\"app\",{\"sourceInterval\":[1333,1337]},\"name\",[]]],\"terminal\":[\"define\",{\"sourceInterval\":[1341,1379]},null,[],[\"seq\",{\"sourceInterval\":[1356,1379]},[\"terminal\",{\"sourceInterval\":[1356,1360]},\"\\\"\"],[\"star\",{\"sourceInterval\":[1361,1374]},[\"app\",{\"sourceInterval\":[1361,1373]},\"terminalChar\",[]]],[\"terminal\",{\"sourceInterval\":[1375,1379]},\"\\\"\"]]],\"terminalChar\":[\"define\",{\"sourceInterval\":[1383,1440]},null,[],[\"alt\",{\"sourceInterval\":[1402,1440]},[\"app\",{\"sourceInterval\":[1402,1412]},\"escapeChar\",[]],[\"seq\",{\"sourceInterval\":[1419,1440]},[\"not\",{\"sourceInterval\":[1419,1424]},[\"terminal\",{\"sourceInterval\":[1420,1424]},\"\\\\\"]],[\"not\",{\"sourceInterval\":[1425,1430]},[\"terminal\",{\"sourceInterval\":[1426,1430]},\"\\\"\"]],[\"not\",{\"sourceInterval\":[1431,1436]},[\"terminal\",{\"sourceInterval\":[1432,1436]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1437,1440]},\"any\",[]]]]],\"escapeChar_backslash\":[\"define\",{\"sourceInterval\":[1483,1538]},null,[],[\"terminal\",{\"sourceInterval\":[1483,1489]},\"\\\\\\\\\"]],\"escapeChar_doubleQuote\":[\"define\",{\"sourceInterval\":[1545,1602]},null,[],[\"terminal\",{\"sourceInterval\":[1545,1551]},\"\\\\\\\"\"]],\"escapeChar_singleQuote\":[\"define\",{\"sourceInterval\":[1609,1666]},null,[],[\"terminal\",{\"sourceInterval\":[1609,1615]},\"\\\\'\"]],\"escapeChar_backspace\":[\"define\",{\"sourceInterval\":[1673,1728]},null,[],[\"terminal\",{\"sourceInterval\":[1673,1678]},\"\\\\b\"]],\"escapeChar_lineFeed\":[\"define\",{\"sourceInterval\":[1735,1789]},null,[],[\"terminal\",{\"sourceInterval\":[1735,1740]},\"\\\\n\"]],\"escapeChar_carriageReturn\":[\"define\",{\"sourceInterval\":[1796,1856]},null,[],[\"terminal\",{\"sourceInterval\":[1796,1801]},\"\\\\r\"]],\"escapeChar_tab\":[\"define\",{\"sourceInterval\":[1863,1912]},null,[],[\"terminal\",{\"sourceInterval\":[1863,1868]},\"\\\\t\"]],\"escapeChar_unicodeEscape\":[\"define\",{\"sourceInterval\":[1919,1978]},null,[],[\"seq\",{\"sourceInterval\":[1919,1960]},[\"terminal\",{\"sourceInterval\":[1919,1924]},\"\\\\u\"],[\"app\",{\"sourceInterval\":[1925,1933]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[1934,1942]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[1943,1951]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[1952,1960]},\"hexDigit\",[]]]],\"escapeChar_hexEscape\":[\"define\",{\"sourceInterval\":[1985,2040]},null,[],[\"seq\",{\"sourceInterval\":[1985,2008]},[\"terminal\",{\"sourceInterval\":[1985,1990]},\"\\\\x\"],[\"app\",{\"sourceInterval\":[1991,1999]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2000,2008]},\"hexDigit\",[]]]],\"escapeChar\":[\"define\",{\"sourceInterval\":[1444,2040]},\"an escape sequence\",[],[\"alt\",{\"sourceInterval\":[1483,2040]},[\"app\",{\"sourceInterval\":[1483,1489]},\"escapeChar_backslash\",[]],[\"app\",{\"sourceInterval\":[1545,1551]},\"escapeChar_doubleQuote\",[]],[\"app\",{\"sourceInterval\":[1609,1615]},\"escapeChar_singleQuote\",[]],[\"app\",{\"sourceInterval\":[1673,1678]},\"escapeChar_backspace\",[]],[\"app\",{\"sourceInterval\":[1735,1740]},\"escapeChar_lineFeed\",[]],[\"app\",{\"sourceInterval\":[1796,1801]},\"escapeChar_carriageReturn\",[]],[\"app\",{\"sourceInterval\":[1863,1868]},\"escapeChar_tab\",[]],[\"app\",{\"sourceInterval\":[1919,1960]},\"escapeChar_unicodeEscape\",[]],[\"app\",{\"sourceInterval\":[1985,2008]},\"escapeChar_hexEscape\",[]]]],\"space\":[\"extend\",{\"sourceInterval\":[2044,2063]},null,[],[\"app\",{\"sourceInterval\":[2056,2063]},\"comment\",[]]],\"comment_singleLine\":[\"define\",{\"sourceInterval\":[2081,2118]},null,[],[\"seq\",{\"sourceInterval\":[2081,2103]},[\"terminal\",{\"sourceInterval\":[2081,2085]},\"//\"],[\"star\",{\"sourceInterval\":[2086,2098]},[\"seq\",{\"sourceInterval\":[2087,2096]},[\"not\",{\"sourceInterval\":[2087,2092]},[\"terminal\",{\"sourceInterval\":[2088,2092]},\"\\n\"]],[\"app\",{\"sourceInterval\":[2093,2096]},\"any\",[]]]],[\"terminal\",{\"sourceInterval\":[2099,2103]},\"\\n\"]]],\"comment_multiLine\":[\"define\",{\"sourceInterval\":[2125,2161]},null,[],[\"seq\",{\"sourceInterval\":[2125,2147]},[\"terminal\",{\"sourceInterval\":[2125,2129]},\"/*\"],[\"star\",{\"sourceInterval\":[2130,2142]},[\"seq\",{\"sourceInterval\":[2131,2140]},[\"not\",{\"sourceInterval\":[2131,2136]},[\"terminal\",{\"sourceInterval\":[2132,2136]},\"*/\"]],[\"app\",{\"sourceInterval\":[2137,2140]},\"any\",[]]]],[\"terminal\",{\"sourceInterval\":[2143,2147]},\"*/\"]]],\"comment\":[\"define\",{\"sourceInterval\":[2067,2161]},null,[],[\"alt\",{\"sourceInterval\":[2081,2161]},[\"app\",{\"sourceInterval\":[2081,2103]},\"comment_singleLine\",[]],[\"app\",{\"sourceInterval\":[2125,2147]},\"comment_multiLine\",[]]]],\"tokens\":[\"define\",{\"sourceInterval\":[2165,2180]},null,[],[\"star\",{\"sourceInterval\":[2174,2180]},[\"app\",{\"sourceInterval\":[2174,2179]},\"token\",[]]]],\"token\":[\"define\",{\"sourceInterval\":[2184,2260]},null,[],[\"alt\",{\"sourceInterval\":[2192,2260]},[\"app\",{\"sourceInterval\":[2192,2200]},\"caseName\",[]],[\"app\",{\"sourceInterval\":[2203,2210]},\"comment\",[]],[\"app\",{\"sourceInterval\":[2213,2218]},\"ident\",[]],[\"app\",{\"sourceInterval\":[2221,2229]},\"operator\",[]],[\"app\",{\"sourceInterval\":[2232,2243]},\"punctuation\",[]],[\"app\",{\"sourceInterval\":[2246,2254]},\"terminal\",[]],[\"app\",{\"sourceInterval\":[2257,2260]},\"any\",[]]]],\"operator\":[\"define\",{\"sourceInterval\":[2264,2329]},null,[],[\"alt\",{\"sourceInterval\":[2275,2329]},[\"terminal\",{\"sourceInterval\":[2275,2279]},\"<:\"],[\"terminal\",{\"sourceInterval\":[2282,2285]},\"=\"],[\"terminal\",{\"sourceInterval\":[2288,2292]},\":=\"],[\"terminal\",{\"sourceInterval\":[2295,2299]},\"+=\"],[\"terminal\",{\"sourceInterval\":[2302,2305]},\"*\"],[\"terminal\",{\"sourceInterval\":[2308,2311]},\"+\"],[\"terminal\",{\"sourceInterval\":[2314,2317]},\"?\"],[\"terminal\",{\"sourceInterval\":[2320,2323]},\"~\"],[\"terminal\",{\"sourceInterval\":[2326,2329]},\"&\"]]],\"punctuation\":[\"define\",{\"sourceInterval\":[2333,2369]},null,[],[\"alt\",{\"sourceInterval\":[2347,2369]},[\"terminal\",{\"sourceInterval\":[2347,2350]},\"<\"],[\"terminal\",{\"sourceInterval\":[2353,2356]},\">\"],[\"terminal\",{\"sourceInterval\":[2359,2362]},\",\"],[\"terminal\",{\"sourceInterval\":[2365,2369]},\"--\"]]]}]);\n\n\n\n/** WEBPACK FOOTER **\n ** dist/ohm-grammar.js\n **/","var ohm = require('..');\nmodule.exports = ohm.makeRecipe([\"grammar\",{\"source\":\"OperationsAndAttributes {\\n\\n  AttributeSignature =\\n    name\\n\\n  OperationSignature =\\n    name Formals?\\n\\n  Formals\\n    = \\\"(\\\" ListOf<name, \\\",\\\"> \\\")\\\"\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n}\"},\"OperationsAndAttributes\",null,\"AttributeSignature\",{\"AttributeSignature\":[\"define\",{\"sourceInterval\":[29,58]},null,[],[\"app\",{\"sourceInterval\":[54,58]},\"name\",[]]],\"OperationSignature\":[\"define\",{\"sourceInterval\":[62,100]},null,[],[\"seq\",{\"sourceInterval\":[87,100]},[\"app\",{\"sourceInterval\":[87,91]},\"name\",[]],[\"opt\",{\"sourceInterval\":[92,100]},[\"app\",{\"sourceInterval\":[92,99]},\"Formals\",[]]]]],\"Formals\":[\"define\",{\"sourceInterval\":[104,143]},null,[],[\"seq\",{\"sourceInterval\":[118,143]},[\"terminal\",{\"sourceInterval\":[118,121]},\"(\"],[\"app\",{\"sourceInterval\":[122,139]},\"ListOf\",[[\"app\",{\"sourceInterval\":[129,133]},\"name\",[]],[\"terminal\",{\"sourceInterval\":[135,138]},\",\"]]],[\"terminal\",{\"sourceInterval\":[140,143]},\")\"]]],\"name\":[\"define\",{\"sourceInterval\":[147,187]},\"a name\",[],[\"seq\",{\"sourceInterval\":[168,187]},[\"app\",{\"sourceInterval\":[168,177]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[178,187]},[\"app\",{\"sourceInterval\":[178,186]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[191,223]},null,[],[\"alt\",{\"sourceInterval\":[207,223]},[\"terminal\",{\"sourceInterval\":[207,210]},\"_\"],[\"app\",{\"sourceInterval\":[217,223]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[227,257]},null,[],[\"alt\",{\"sourceInterval\":[242,257]},[\"terminal\",{\"sourceInterval\":[242,245]},\"_\"],[\"app\",{\"sourceInterval\":[252,257]},\"alnum\",[]]]]}]);\n\n\n\n/** WEBPACK FOOTER **\n ** dist/operations-and-attributes.js\n **/","'use strict';\n\nmodule.exports = {\n  toAST: require('./semantics-toAST').helper,\n  semanticsForToAST: require('./semantics-toAST').semantics\n};\n\n\n\n/** WEBPACK FOOTER **\n ** extras/index.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar pexprs = require('../src/pexprs');\nvar MatchResult = require('../src/MatchResult');\nvar Grammar = require('../src/Grammar');\nvar extend = require('util-extend');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nvar defaultOperation = {\n  _terminal: function() {\n    return this.primitiveValue;\n  },\n\n  _nonterminal: function(children) {\n    var ctorName = this._node.ctorName;\n    var mapping = this.args.mapping;\n\n    // without customization\n    if (!mapping.hasOwnProperty(ctorName)) {\n      // intermediate node\n      if (this._node instanceof pexprs.Alt || this._node instanceof pexprs.Apply) {\n        return children[0].toAST(mapping);\n      }\n\n      // lexical rule\n      if (this.isLexical()) {\n        return this.sourceString;\n      }\n\n      // singular node (e.g. only surrounded by literals or lookaheads)\n      var realChildren = children.filter(function(child) {\n        return !child.isTerminal();\n      });\n      if (realChildren.length === 1) {\n        return realChildren[0].toAST(mapping);\n      }\n\n      // rest: terms with multiple children\n    }\n\n    // direct forward\n    if (typeof mapping[ctorName] === 'number') {\n      return children[mapping[ctorName]].toAST(mapping);\n    }\n\n    // named/mapped children or unnamed children ('0', '1', '2', ...)\n    var propMap = mapping[ctorName] || children;\n    var node = {\n      type: ctorName\n    };\n    for (var prop in propMap) {\n      var mappedProp = mapping[ctorName] && mapping[ctorName][prop];\n      if (typeof mappedProp === 'number') {\n        // direct forward\n        node[prop] = children[mappedProp].toAST(mapping);\n      } else if ((typeof mappedProp === 'string') || (typeof mappedProp === 'boolean') ||\n          (mappedProp === null)) {\n        // primitive value\n        node[prop] = mappedProp;\n      } else if ((typeof mappedProp === 'object') && (mappedProp instanceof Number)) {\n        // primitive number (must be unboxed)\n        node[prop] = Number(mappedProp);\n      } else if (typeof mappedProp === 'function') {\n        // computed value\n        node[prop] = mappedProp.call(this, children);\n      } else if (mappedProp === undefined) {\n        if (children[prop] && !children[prop].isTerminal()) {\n          node[prop] = children[prop].toAST(mapping);\n        } else {\n          // delete predefined 'type' properties, like 'type', if explicitely removed\n          delete node[prop];\n        }\n      }\n    }\n    return node;\n  },\n\n  _iter: function(children) {\n    if (this._node.isOptional()) {\n      if (this.numChildren === 0) {\n        return null;\n      } else {\n        return children[0].toAST(this.args.mapping);\n      }\n    }\n\n    return children.map(function(child) {\n      return child.toAST(this.args.mapping);\n    }, this);\n  },\n\n  NonemptyListOf: function(first, sep, rest) {\n    return [first.toAST(this.args.mapping)].concat(rest.toAST(this.args.mapping));\n  },\n\n  EmptyListOf: function() {\n    return [];\n  }\n};\n\n// Returns a plain JavaScript object that includes an abstract syntax tree (AST)\n// for the given match result `res` containg a concrete syntax tree (CST) and grammar.\n// The optional `mapping` parameter can be used to customize how the nodes of the CST\n// are mapped to the AST (see /doc/extras.md#toastmatchresult-mapping).\nfunction toAST(res, mapping) {\n  if (!(res instanceof MatchResult) || res.failed()) {\n    throw new Error('toAST() expects a succesfull MatchResult as first parameter');\n  }\n\n  mapping = extend({}, mapping);\n  var operation = extend({}, defaultOperation);\n  for (var termName in mapping) {\n    if (typeof mapping[termName] === 'function') {\n      operation[termName] = mapping[termName];\n      delete mapping[termName];\n    }\n  }\n  var g = res._cst.grammar;\n  var s = g.semantics().addOperation('toAST(mapping)', operation);\n  return s(res).toAST(mapping);\n}\n\n// Returns a semantics containg the toAST(mapping) operation for the given grammar g.\nfunction semanticsForToAST(g) {\n  if (!(g instanceof Grammar)) {\n    throw new Error('semanticsToAST() expects a Grammar as parameter');\n  }\n\n  return g.semantics().addOperation('toAST(mapping)', defaultOperation);\n}\n\nmodule.exports = {\n  helper: toAST,\n  semantics: semanticsForToAST\n};\n\n\n\n/** WEBPACK FOOTER **\n ** extras/semantics-toAST.js\n **/","'use strict';\n\nmodule.exports = require('./is-implemented')() ? Symbol : require('./polyfill');\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/index.js\n **/","'use strict';\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\tif (typeof Symbol.iterator === 'symbol') return true;\n\n\t// Return 'true' for polyfills\n\tif (typeof Symbol.isConcatSpreadable !== 'object') return false;\n\tif (typeof Symbol.iterator !== 'object') return false;\n\tif (typeof Symbol.toPrimitive !== 'object') return false;\n\tif (typeof Symbol.toStringTag !== 'object') return false;\n\tif (typeof Symbol.unscopables !== 'object') return false;\n\n\treturn true;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/is-implemented.js\n **/","'use strict';\n\nmodule.exports = function (x) {\n\treturn (x && ((typeof x === 'symbol') || (x['@@toStringTag'] === 'Symbol'))) || false;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/is-symbol.js\n **/","'use strict';\n\nvar assign        = require('es5-ext/object/assign')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , isCallable    = require('es5-ext/object/is-callable')\n  , contains      = require('es5-ext/string/#/contains')\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/d/index.js\n **/","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Object.assign\n\t: require('./shim');\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/object/assign/index.js\n **/","'use strict';\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== 'function') return false;\n\tobj = { foo: 'raz' };\n\tassign(obj, { bar: 'dwa' }, { trzy: 'trzy' });\n\treturn (obj.foo + obj.bar + obj.trzy) === 'razdwatrzy';\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/object/assign/is-implemented.js\n **/","'use strict';\n\nvar keys  = require('../keys')\n  , value = require('../valid-value')\n\n  , max = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, l = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry { dest[key] = src[key]; } catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < l; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/object/assign/shim.js\n **/","// Deprecated\n\n'use strict';\n\nmodule.exports = function (obj) { return typeof obj === 'function'; };\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/object/is-callable.js\n **/","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Object.keys\n\t: require('./shim');\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/object/keys/index.js\n **/","'use strict';\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys('primitive');\n\t\treturn true;\n\t} catch (e) { return false; }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/object/keys/is-implemented.js\n **/","'use strict';\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) {\n\treturn keys(object == null ? object : Object(object));\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/object/keys/shim.js\n **/","'use strict';\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\nmodule.exports = function (options/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (options == null) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/object/normalize-options.js\n **/","'use strict';\n\nmodule.exports = function (value) {\n\tif (value == null) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/object/valid-value.js\n **/","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? String.prototype.contains\n\t: require('./shim');\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/string/#/contains/index.js\n **/","'use strict';\n\nvar str = 'razdwatrzy';\n\nmodule.exports = function () {\n\tif (typeof str.contains !== 'function') return false;\n\treturn ((str.contains('dwa') === true) && (str.contains('foo') === false));\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/string/#/contains/is-implemented.js\n **/","'use strict';\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/~/es5-ext/string/#/contains/shim.js\n **/","'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , Symbol, HiddenSymbol, globalSymbols = create(null);\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\tdefineProperty(this, name, d(value));\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('TypeError: Symbol is not a constructor');\n\treturn Symbol(description);\n};\nmodule.exports = Symbol = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('TypeError: Symbol is not a constructor');\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(Symbol, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = Symbol(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\thasInstance: d('', Symbol('hasInstance')),\n\tisConcatSpreadable: d('', Symbol('isConcatSpreadable')),\n\titerator: d('', Symbol('iterator')),\n\tmatch: d('', Symbol('match')),\n\treplace: d('', Symbol('replace')),\n\tsearch: d('', Symbol('search')),\n\tspecies: d('', Symbol('species')),\n\tsplit: d('', Symbol('split')),\n\ttoPrimitive: d('', Symbol('toPrimitive')),\n\ttoStringTag: d('', Symbol('toStringTag')),\n\tunscopables: d('', Symbol('unscopables'))\n});\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(Symbol),\n\ttoString: d('', function () { return this.__name__; })\n});\n\ndefineProperties(Symbol.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(Symbol.prototype, Symbol.toPrimitive, d('',\n\tfunction () { return validateSymbol(this); }));\ndefineProperty(Symbol.prototype, Symbol.toStringTag, d('c', 'Symbol'));\n\ndefineProperty(HiddenSymbol.prototype, Symbol.toPrimitive,\n\td('c', Symbol.prototype[Symbol.toPrimitive]));\ndefineProperty(HiddenSymbol.prototype, Symbol.toStringTag,\n\td('c', Symbol.prototype[Symbol.toStringTag]));\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/polyfill.js\n **/","'use strict';\n\nvar isSymbol = require('./is-symbol');\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/es6-symbol/validate-symbol.js\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/inherits/inherits_browser.js\n **/","/**\n * Determine if an object is Buffer\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n * `npm install is-buffer`\n */\n\nmodule.exports = function (obj) {\n  return !!(\n    obj != null &&\n    obj.constructor &&\n    typeof obj.constructor.isBuffer === 'function' &&\n    obj.constructor.isBuffer(obj)\n  )\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/is-buffer/index.js\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = extend;\nfunction extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || typeof add !== 'object') return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/util-extend/extend.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar GrammarDecl = require('./GrammarDecl');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Builder() {}\n\nBuilder.prototype = {\n  currentDecl: null,\n\n  newGrammar: function(name) {\n    return new GrammarDecl(name);\n  },\n\n  grammar: function(metaInfo, name, superGrammar, defaultStartRule, rules) {\n    var gDecl = new GrammarDecl(name);\n    if (superGrammar) {\n      gDecl.withSuperGrammar(this.fromRecipe(superGrammar));\n    }\n    if (defaultStartRule) {\n      gDecl.withDefaultStartRule(defaultStartRule);\n    }\n    if (metaInfo && metaInfo.source) {\n      gDecl.withSource(metaInfo.source);\n    }\n\n    var self = this;\n    this.currentDecl = gDecl;\n    Object.keys(rules).forEach(function(ruleName) {\n      var ruleRecipe = rules[ruleName];\n\n      var action = ruleRecipe[0]; // define/extend/override\n      var metaInfo = ruleRecipe[1];\n      var description = ruleRecipe[2];\n      var formals = ruleRecipe[3];\n      var body = self.fromRecipe(ruleRecipe[4]);\n\n      var source;\n      if (gDecl.source && metaInfo && metaInfo.sourceInterval) {\n        var inputStream = gDecl.source.inputStream;\n        source = inputStream.interval.apply(inputStream, metaInfo.sourceInterval);\n      }\n      gDecl[action](ruleName, formals, body, description, source);\n    });\n    this.currentDecl = null;\n    return gDecl.build();\n  },\n\n  terminal: function(x) {\n    return new pexprs.Terminal(x);\n  },\n\n  range: function(from, to) {\n    return new pexprs.Range(from, to);\n  },\n\n  param: function(index) {\n    return new pexprs.Param(index);\n  },\n\n  alt: function(/* term1, term1, ... */) {\n    var terms = [];\n    for (var idx = 0; idx < arguments.length; idx++) {\n      var arg = arguments[idx];\n      if (!(arg instanceof pexprs.PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof pexprs.Alt) {\n        terms = terms.concat(arg.terms);\n      } else {\n        terms.push(arg);\n      }\n    }\n    return terms.length === 1 ? terms[0] : new pexprs.Alt(terms);\n  },\n\n  seq: function(/* factor1, factor2, ... */) {\n    var factors = [];\n    for (var idx = 0; idx < arguments.length; idx++) {\n      var arg = arguments[idx];\n      if (!(arg instanceof pexprs.PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof pexprs.Seq) {\n        factors = factors.concat(arg.factors);\n      } else {\n        factors.push(arg);\n      }\n    }\n    return factors.length === 1 ? factors[0] : new pexprs.Seq(factors);\n  },\n\n  star: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Star(expr);\n  },\n\n  plus: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Plus(expr);\n  },\n\n  opt: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Opt(expr);\n  },\n\n  not: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Not(expr);\n  },\n\n  la: function(expr) {\n    // TODO: temporary to still be able to read old recipes\n    return this.lookahead(expr);\n  },\n\n  lookahead: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Lookahead(expr);\n  },\n\n  lex: function(expr) {\n    if (!(expr instanceof pexprs.PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new pexprs.Lex(expr);\n  },\n\n  app: function(ruleName, optParams) {\n    if (optParams && optParams.length > 0) {\n      optParams = optParams.map(function(param) {\n        return param instanceof pexprs.PExpr ? param :\n          this.fromRecipe(param);\n      }, this);\n    }\n    return new pexprs.Apply(ruleName, optParams);\n  },\n\n  fromRecipe: function(recipe) {\n    // the meta-info of 'grammar' is proccessed in Builder.grammar\n    var result = this[recipe[0]].apply(this,\n      recipe[0] === 'grammar' ? recipe.slice(1) : recipe.slice(2));\n\n    var metaInfo = recipe[1];\n    if (metaInfo) {\n      if (metaInfo.sourceInterval && this.currentDecl) {\n        result.withSource(\n          this.currentDecl.sourceInterval.apply(this.currentDecl, metaInfo.sourceInterval)\n        );\n      }\n    }\n    return result;\n  }\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Builder;\n\n\n\n/** WEBPACK FOOTER **\n ** src/Builder.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n/*\n  `Failure`s represent expressions that weren't matched while parsing. They are used to generate\n  error messages automatically. The interface of `Failure`s includes the collowing methods:\n\n  - getText() : String\n  - getType() : String  (one of {\"description\", \"string\", \"code\"})\n  - isDescription() : bool\n  - isStringTerminal() : bool\n  - isCode() : bool\n  - isFluffy() : bool\n  - makeFluffy() : void\n  - subsumes(Failure) : bool\n*/\n\nfunction isValidType(type) {\n  return type === 'description' || type === 'string' || type === 'code';\n}\n\nfunction Failure(pexpr, text, type) {\n  if (!isValidType(type)) {\n    throw new Error('invalid Failure type: ' + type);\n  }\n  this.pexpr = pexpr;\n  this.text = text;\n  this.type = type;\n  this.fluffy = false;\n}\n\nFailure.prototype.getPExpr = function() {\n  return this.pexpr;\n};\n\nFailure.prototype.getText = function() {\n  return this.text;\n};\n\nFailure.prototype.getType = function() {\n  return this.type;\n};\n\nFailure.prototype.isDescription = function() {\n  return this.type === 'description';\n};\n\nFailure.prototype.isStringTerminal = function() {\n  return this.type === 'string';\n};\n\nFailure.prototype.isCode = function() {\n  return this.type === 'code';\n};\n\nFailure.prototype.isFluffy = function() {\n  return this.fluffy;\n};\n\nFailure.prototype.makeFluffy = function() {\n  this.fluffy = true;\n};\n\nFailure.prototype.clearFluffy = function() {\n  this.fluffy = false;\n};\n\nFailure.prototype.subsumes = function(that) {\n  return this.getText() === that.getText() &&\n      this.type === that.type &&\n      (!this.isFluffy() || this.isFluffy() && that.isFluffy());\n};\n\nFailure.prototype.toString = function() {\n  return this.type === 'string' ?\n    JSON.stringify(this.getText()) :\n    this.getText();\n};\n\nFailure.prototype.clone = function() {\n  var failure = new Failure(this.pexpr, this.text, this.type);\n  if (this.isFluffy()) {\n    failure.makeFluffy();\n  }\n  return failure;\n};\n\nFailure.prototype.toKey = function() {\n  return this.toString() + '#' + this.type;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Failure;\n\n\n\n/** WEBPACK FOOTER **\n ** src/Failure.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar MatchResult = require('./MatchResult');\nvar Semantics = require('./Semantics');\nvar State = require('./State');\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Grammar(\n    name,\n    superGrammar,\n    rules,\n    optDefaultStartRule) {\n  this.name = name;\n  this.superGrammar = superGrammar;\n  this.rules = rules;\n  if (optDefaultStartRule) {\n    if (!(optDefaultStartRule in rules)) {\n      throw new Error(\"Invalid start rule: '\" + optDefaultStartRule +\n                      \"' is not a rule in grammar '\" + name + \"'\");\n    }\n    this.defaultStartRule = optDefaultStartRule;\n  }\n}\n\nvar ohmGrammar;\nvar buildGrammar;\n\n// This method is called from main.js once Ohm has loaded.\nGrammar.initApplicationParser = function(grammar, builderFn) {\n  ohmGrammar = grammar;\n  buildGrammar = builderFn;\n};\n\nGrammar.prototype = {\n  // Return true if the grammar is a built-in grammar, otherwise false.\n  // NOTE: This might give an unexpected result if called before BuiltInRules is defined!\n  isBuiltIn: function() {\n    return this === Grammar.ProtoBuiltInRules || this === Grammar.BuiltInRules;\n  },\n\n  _match: function(input, opts) {\n    var state = new State(this, input, opts);\n    state.evalFromStart();\n    return state;\n  },\n\n  match: function(input, optStartApplication) {\n    var state = this._match(input, {startApplication: optStartApplication});\n    return MatchResult.newFor(state);\n  },\n\n  trace: function(input, optStartApplication) {\n    var state = this._match(input, {startApplication: optStartApplication, trace: true});\n\n    // The trace node for the start rule is always the last entry. If it is a syntactic rule,\n    // the first entry is for an application of 'spaces'.\n    // TODO(pdubroy): Clean this up by introducing a special `Match<startAppl>` rule, which will\n    // ensure that there is always a single root trace node.\n    var rootTrace = state.trace[state.trace.length - 1];\n    rootTrace.state = state;\n    rootTrace.result = MatchResult.newFor(state);\n    return rootTrace;\n  },\n\n  semantics: function() {\n    return Semantics.createSemantics(this);\n  },\n\n  extendSemantics: function(superSemantics) {\n    return Semantics.createSemantics(this, superSemantics._getSemantics());\n  },\n\n  // Check that every key in `actionDict` corresponds to a semantic action, and that it maps to\n  // a function of the correct arity. If not, throw an exception.\n  _checkTopDownActionDict: function(what, name, actionDict) {\n    function isSpecialAction(a) {\n      return a === '_iter' || a === '_terminal' || a === '_nonterminal' || a === '_default';\n    }\n\n    var problems = [];\n    for (var k in actionDict) {\n      var v = actionDict[k];\n      if (!isSpecialAction(k) && !(k in this.rules)) {\n        problems.push(\"'\" + k + \"' is not a valid semantic action for '\" + this.name + \"'\");\n      } else if (typeof v !== 'function') {\n        problems.push(\n            \"'\" + k + \"' must be a function in an action dictionary for '\" + this.name + \"'\");\n      } else {\n        var actual = v.length;\n        var expected = this._topDownActionArity(k);\n        if (actual !== expected) {\n          problems.push(\n              \"Semantic action '\" + k + \"' has the wrong arity: \" +\n              'expected ' + expected + ', got ' + actual);\n        }\n      }\n    }\n    if (problems.length > 0) {\n      var prettyProblems = problems.map(function(problem) { return '- ' + problem; });\n      var error = new Error(\n          \"Found errors in the action dictionary of the '\" + name + \"' \" + what + ':\\n' +\n          prettyProblems.join('\\n'));\n      error.problems = problems;\n      throw error;\n    }\n  },\n\n  // Return the expected arity for a semantic action named `actionName`, which\n  // is either a rule name or a special action name like '_nonterminal'.\n  _topDownActionArity: function(actionName) {\n    if (actionName === '_iter' || actionName === '_nonterminal' || actionName === '_default') {\n      return 1;\n    } else if (actionName === '_terminal') {\n      return 0;\n    }\n    return this.rules[actionName].body.getArity();\n  },\n\n  _inheritsFrom: function(grammar) {\n    var g = this.superGrammar;\n    while (g) {\n      if (g === grammar) {\n        return true;\n      }\n      g = g.superGrammar;\n    }\n    return false;\n  },\n\n  toRecipe: function(optVarName) {\n    var metaInfo = {};\n    // Include the grammar source if it is available.\n    if (this.source) {\n      metaInfo.source = this.source.contents;\n    }\n\n    var superGrammar = null;\n    if (this.superGrammar && !this.superGrammar.isBuiltIn()) {\n      superGrammar = JSON.parse(this.superGrammar.toRecipe());\n    }\n\n    var startRule = null;\n    if (this.defaultStartRule) {\n      startRule = this.defaultStartRule;\n    }\n\n    var rules = {};\n    var self = this;\n    Object.keys(this.rules).forEach(function(ruleName) {\n      var ruleInfo = self.rules[ruleName];\n      var body = ruleInfo.body;\n      var isDefinition = !self.superGrammar || !self.superGrammar.rules[ruleName];\n\n      var operation;\n      if (isDefinition) {\n        operation = 'define';\n      } else {\n        operation = body instanceof pexprs.Extend ? 'extend' : 'override';\n      }\n\n      var metaInfo = {};\n      if (ruleInfo.source && self.source) {\n        var adjusted = ruleInfo.source.relativeTo(self.source);\n        metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n      }\n\n      var description = isDefinition ? ruleInfo.description : null;\n      var bodyRecipe = body.outputRecipe(ruleInfo.formals, self.source);\n\n      rules[ruleName] = [\n        operation, // \"define\"/\"extend\"/\"override\"\n        metaInfo,\n        description,\n        ruleInfo.formals,\n        bodyRecipe\n      ];\n    });\n\n    return JSON.stringify([\n      'grammar',\n      metaInfo,\n      this.name,\n      superGrammar,\n      startRule,\n      rules\n    ]);\n  },\n\n  // TODO: Come up with better names for these methods.\n  // TODO: Write the analog of these methods for inherited attributes.\n  toOperationActionDictionaryTemplate: function() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  },\n  toAttributeActionDictionaryTemplate: function() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  },\n\n  _toOperationOrAttributeActionDictionaryTemplate: function() {\n    // TODO: add the super-grammar's templates at the right place, e.g., a case for AddExpr_plus\n    // should appear next to other cases of AddExpr.\n\n    var sb = new common.StringBuffer();\n    sb.append('{');\n\n    var first = true;\n    for (var ruleName in this.rules) {\n      var body = this.rules[ruleName].body;\n      if (first) {\n        first = false;\n      } else {\n        sb.append(',');\n      }\n      sb.append('\\n');\n      sb.append('  ');\n      this.addSemanticActionTemplate(ruleName, body, sb);\n    }\n\n    sb.append('\\n}');\n    return sb.contents();\n  },\n\n  addSemanticActionTemplate: function(ruleName, body, sb) {\n    sb.append(ruleName);\n    sb.append(': function(');\n    var arity = this._topDownActionArity(ruleName);\n    sb.append(common.repeat('_', arity).join(', '));\n    sb.append(') {\\n');\n    sb.append('  }');\n  },\n\n  // Parse a string which expresses a rule application in this grammar, and return the\n  // resulting Apply node.\n  parseApplication: function(str) {\n    var app;\n    if (str.indexOf('<') === -1) {\n      // simple application\n      app = new pexprs.Apply(str);\n    } else {\n      // parameterized application\n      var cst = ohmGrammar.match(str, 'Base_application');\n      app = buildGrammar(cst, {});\n    }\n\n    // Ensure that the application is valid.\n    if (!(app.ruleName in this.rules)) {\n      throw errors.undeclaredRule(app.ruleName, this.name);\n    }\n    var formals = this.rules[app.ruleName].formals;\n    if (formals.length !== app.args.length) {\n      var source = this.rules[app.ruleName].source;\n      throw errors.wrongNumberOfParameters(app.ruleName, formals.length, app.args.length, source);\n    }\n    return app;\n  }\n};\n\n// The following grammar contains a few rules that couldn't be written  in \"userland\".\n// At the bottom of src/main.js, we create a sub-grammar of this grammar that's called\n// `BuiltInRules`. That grammar contains several convenience rules, e.g., `letter` and\n// `digit`, and is implicitly the super-grammar of any grammar whose super-grammar\n// isn't specified.\nGrammar.ProtoBuiltInRules = new Grammar(\n    'ProtoBuiltInRules',  // name\n    undefined,  // supergrammar\n    {\n      // The following rules can't be written in userland because they reference\n      // `any` and `end` directly.\n      any: {body: pexprs.any, formals: [], description: 'any object'},\n      end: {body: pexprs.end, formals: [], description: 'end of input'},\n\n      // The following rule is invoked implicitly by syntactic rules to skip spaces.\n      spaces: {\n        body: new pexprs.Star(new pexprs.Apply('space')),\n        formals: []\n      },\n\n      // The `space` rule must be defined here because it's referenced by `spaces`.\n      space: {\n        body: new pexprs.Range('\\x00', ' '),\n        formals: [],\n        description: 'a space'\n      },\n\n      // These rules are implemented natively because they use UnicodeChar directly, which is\n      // not part of the Ohm grammar.\n      lower: {\n        body: new pexprs.UnicodeChar('Ll'),\n        formals: [],\n        description: 'a lowercase letter'\n      },\n      upper: {\n        body: new pexprs.UnicodeChar('Lu'),\n        formals: [],\n        description: 'an uppercase letter'\n      },\n\n      // The union of Lt (titlecase), Lm (modifier), and Lo (other), i.e. any letter not\n      // in Ll or Lu.\n      unicodeLtmo: {\n        body: new pexprs.UnicodeChar('Ltmo'),\n        formals: []\n      }\n    }\n);\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Grammar;\n\n\n\n/** WEBPACK FOOTER **\n ** src/Grammar.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Grammar = require('./Grammar');\nvar InputStream = require('./InputStream');\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Constructors\n\nfunction GrammarDecl(name) {\n  this.name = name;\n}\n\n// Helpers\n\nGrammarDecl.prototype.sourceInterval = function(startIdx, endIdx) {\n  var inputStream = this.source.inputStream;\n  return inputStream.interval(startIdx, endIdx);\n};\n\nGrammarDecl.prototype.ensureSuperGrammar = function() {\n  if (!this.superGrammar) {\n    this.withSuperGrammar(\n        // TODO: The conditional expression below is an ugly hack. It's kind of ok because\n        // I doubt anyone will ever try to declare a grammar called `BuiltInRules`. Still,\n        // we should try to find a better way to do this.\n        this.name === 'BuiltInRules' ?\n            Grammar.ProtoBuiltInRules :\n            Grammar.BuiltInRules);\n  }\n  return this.superGrammar;\n};\n\nGrammarDecl.prototype.installOverriddenOrExtendedRule = function(name, formals, body, source) {\n  var duplicateParameterNames = common.getDuplicates(formals);\n  if (duplicateParameterNames.length > 0) {\n    throw errors.duplicateParameterNames(name, duplicateParameterNames, body, source);\n  }\n  var ruleInfo = this.ensureSuperGrammar().rules[name];\n  var expectedFormals = ruleInfo.formals;\n  var expectedNumFormals = expectedFormals ? expectedFormals.length : 0;\n  if (formals.length !== expectedNumFormals) {\n    throw errors.wrongNumberOfParameters(name, expectedNumFormals, formals.length, body, source);\n  }\n  return this.install(name, formals, body, ruleInfo.description, source);\n};\n\nGrammarDecl.prototype.install = function(name, formals, body, description, source) {\n  this.rules[name] = {\n    body: body.introduceParams(formals),\n    formals: formals,\n    description: description,\n    source: source\n  };\n  return this;\n};\n\n// Stuff that you should only do once\n\nGrammarDecl.prototype.withSuperGrammar = function(superGrammar) {\n  if (this.superGrammar) {\n    throw new Error('the super grammar of a GrammarDecl cannot be set more than once');\n  }\n  this.superGrammar = superGrammar;\n  this.rules = Object.create(superGrammar.rules);\n\n  // Grammars with an explicit supergrammar inherit a default start rule.\n  if (!superGrammar.isBuiltIn()) {\n    this.defaultStartRule = superGrammar.defaultStartRule;\n  }\n  return this;\n};\n\nGrammarDecl.prototype.withDefaultStartRule = function(ruleName) {\n  this.defaultStartRule = ruleName;\n  return this;\n};\n\nGrammarDecl.prototype.withSource = function(source) {\n  this.source = new InputStream(source).interval(0, source.length);\n  return this;\n};\n\n// Creates a Grammar instance, and if it passes the sanity checks, returns it.\nGrammarDecl.prototype.build = function() {\n  var grammar = new Grammar(\n      this.name,\n      this.ensureSuperGrammar(),\n      this.rules,\n      this.defaultStartRule);\n\n  // TODO: change the pexpr.prototype.assert... methods to make them add\n  // exceptions to an array that's provided as an arg. Then we'll be able to\n  // show more than one error of the same type at a time.\n  // TODO: include the offending pexpr in the errors, that way we can show\n  // the part of the source that caused it.\n  var grammarErrors = [];\n  var grammarHasInvalidApplications = false;\n  Object.keys(grammar.rules).forEach(function(ruleName) {\n    var body = grammar.rules[ruleName].body;\n    try {\n      body.assertChoicesHaveUniformArity(ruleName);\n    } catch (e) {\n      grammarErrors.push(e);\n    }\n    try {\n      body.assertAllApplicationsAreValid(ruleName, grammar);\n    } catch (e) {\n      grammarErrors.push(e);\n      grammarHasInvalidApplications = true;\n    }\n  });\n  if (!grammarHasInvalidApplications) {\n    // The following check can only be done if the grammar has no invalid applications.\n    Object.keys(grammar.rules).forEach(function(ruleName) {\n      var body = grammar.rules[ruleName].body;\n      try {\n        body.assertIteratedExprsAreNotNullable(grammar, ruleName);\n      } catch (e) {\n        grammarErrors.push(e);\n      }\n    });\n  }\n  if (grammarErrors.length > 0) {\n    errors.throwErrors(grammarErrors);\n  }\n  if (this.source) {\n    grammar.source = this.source;\n  }\n\n  return grammar;\n};\n\n// Rule declarations\n\nGrammarDecl.prototype.define = function(name, formals, body, description, source) {\n  this.ensureSuperGrammar();\n  if (this.superGrammar.rules[name]) {\n    throw errors.duplicateRuleDeclaration(name, this.name, this.superGrammar.name, body, source);\n  } else if (this.rules[name]) {\n    throw errors.duplicateRuleDeclaration(name, this.name, this.name, body, source);\n  }\n  var duplicateParameterNames = common.getDuplicates(formals);\n  if (duplicateParameterNames.length > 0) {\n    throw errors.duplicateParameterNames(name, duplicateParameterNames, body, source);\n  }\n  return this.install(name, formals, body, description, source);\n};\n\nGrammarDecl.prototype.override = function(name, formals, body, descIgnored, source) {\n  var ruleInfo = this.ensureSuperGrammar().rules[name];\n  if (!ruleInfo) {\n    throw errors.cannotOverrideUndeclaredRule(name, this.superGrammar.name, body, source);\n  }\n  this.installOverriddenOrExtendedRule(name, formals, body, source);\n  return this;\n};\n\nGrammarDecl.prototype.extend = function(name, formals, fragment, descIgnored, source) {\n  var ruleInfo = this.ensureSuperGrammar().rules[name];\n  if (!ruleInfo) {\n    throw errors.cannotExtendUndeclaredRule(name, this.superGrammar.name, fragment, source);\n  }\n  var body = new pexprs.Extend(this.superGrammar, name, fragment);\n  body.source = fragment.source;\n  this.installOverriddenOrExtendedRule(name, formals, body, source);\n  return this;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = GrammarDecl;\n\n\n\n/** WEBPACK FOOTER **\n ** src/GrammarDecl.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Interval = require('./Interval');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction InputStream(source) {\n  this.source = source;\n  this.pos = 0;\n  this.posInfos = [];\n}\n\nInputStream.prototype = {\n  atEnd: function() {\n    return this.pos === this.source.length;\n  },\n\n  next: function() {\n    return this.source[this.pos++];\n  },\n\n  matchString: function(s) {\n    for (var idx = 0; idx < s.length; idx++) {\n      if (this.next() !== s[idx]) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  sourceSlice: function(startIdx, endIdx) {\n    return this.source.slice(startIdx, endIdx);\n  },\n\n  interval: function(startIdx, optEndIdx) {\n    return new Interval(this, startIdx, optEndIdx ? optEndIdx : this.pos);\n  }\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = InputStream;\n\n\n\n/** WEBPACK FOOTER **\n ** src/InputStream.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar assert = require('./common').assert;\nvar errors = require('./errors');\nvar util = require('./util');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Interval(inputStream, startIdx, endIdx) {\n  this.inputStream = inputStream;\n  this.startIdx = startIdx;\n  this.endIdx = endIdx;\n}\n\nInterval.coverage = function(/* interval1, interval2, ... */) {\n  var inputStream = arguments[0].inputStream;\n  var startIdx = arguments[0].startIdx;\n  var endIdx = arguments[0].endIdx;\n  for (var idx = 1; idx < arguments.length; idx++) {\n    var interval = arguments[idx];\n    if (interval.inputStream !== inputStream) {\n      throw errors.intervalSourcesDontMatch();\n    } else {\n      startIdx = Math.min(startIdx, arguments[idx].startIdx);\n      endIdx = Math.max(endIdx, arguments[idx].endIdx);\n    }\n  }\n  return new Interval(inputStream, startIdx, endIdx);\n};\n\nInterval.prototype = {\n  coverageWith: function(/* interval1, interval2, ... */) {\n    var intervals = Array.prototype.slice.call(arguments);\n    intervals.push(this);\n    return Interval.coverage.apply(undefined, intervals);\n  },\n\n  collapsedLeft: function() {\n    return new Interval(this.inputStream, this.startIdx, this.startIdx);\n  },\n\n  collapsedRight: function() {\n    return new Interval(this.inputStream, this.endIdx, this.endIdx);\n  },\n\n  getLineAndColumnMessage: function() {\n    var range = [this.startIdx, this.endIdx];\n    return util.getLineAndColumnMessage(this.inputStream.source, this.startIdx, range);\n  },\n\n  // Returns an array of 0, 1, or 2 intervals that represents the result of the\n  // interval difference operation.\n  minus: function(that) {\n    if (this.inputStream !== that.inputStream) {\n      throw errors.intervalSourcesDontMatch();\n    } else if (this.startIdx === that.startIdx && this.endIdx === that.endIdx) {\n      // `this` and `that` are the same interval!\n      return [\n      ];\n    } else if (this.startIdx < that.startIdx && that.endIdx < this.endIdx) {\n      // `that` splits `this` into two intervals\n      return [\n        new Interval(this.inputStream, this.startIdx, that.startIdx),\n        new Interval(this.inputStream, that.endIdx, this.endIdx)\n      ];\n    } else if (this.startIdx < that.endIdx && that.endIdx < this.endIdx) {\n      // `that` contains a prefix of `this`\n      return [\n        new Interval(this.inputStream, that.endIdx, this.endIdx)\n      ];\n    } else if (this.startIdx < that.startIdx && that.startIdx < this.endIdx) {\n      // `that` contains a suffix of `this`\n      return [\n        new Interval(this.inputStream, this.startIdx, that.startIdx)\n      ];\n    } else {\n      // `that` and `this` do not overlap\n      return [\n        this\n      ];\n    }\n  },\n\n  // Returns a new Interval that has the same extent as this one, but which is relative\n  // to `that`, an Interval that fully covers this one.\n  relativeTo: function(that, newInputStream) {\n    if (this.inputStream !== that.inputStream) {\n      throw errors.intervalSourcesDontMatch();\n    }\n    assert(this.startIdx >= that.startIdx && this.endIdx <= that.endIdx,\n           'other interval does not cover this one');\n    return new Interval(newInputStream,\n                        this.startIdx - that.startIdx,\n                        this.endIdx - that.startIdx);\n  },\n\n  // Returns a new Interval which contains the same contents as this one,\n  // but with whitespace trimmed from both ends. (This only makes sense when\n  // the input stream is a string.)\n  trimmed: function() {\n    var contents = this.contents;\n    var startIdx = this.startIdx + contents.match(/^\\s*/)[0].length;\n    var endIdx = this.endIdx - contents.match(/\\s*$/)[0].length;\n    return new Interval(this.inputStream, startIdx, endIdx);\n  }\n};\n\nObject.defineProperties(Interval.prototype, {\n  contents: {\n    get: function() {\n      if (this._contents === undefined) {\n        this._contents = this.inputStream.sourceSlice(this.startIdx, this.endIdx);\n      }\n      return this._contents;\n    },\n    enumerable: true\n  },\n  length: {\n    get: function() { return this.endIdx - this.startIdx; },\n    enumerable: true\n  }\n});\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Interval;\n\n\n\n\n/** WEBPACK FOOTER **\n ** src/Interval.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar inherits = require('inherits');\n\nvar common = require('./common');\nvar nodes = require('./nodes');\nvar util = require('./util');\nvar Interval = require('./Interval');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Create a short error message for an error that occurred during matching.\nfunction getShortMatchErrorMessage(pos, source, detail) {\n  var errorInfo = util.getLineAndColumn(source, pos);\n  return 'Line ' + errorInfo.lineNum + ', col ' + errorInfo.colNum + ': ' + detail;\n}\n\n// ----------------- MatchFailure -----------------\n\nfunction MatchResult(state) {\n  this.state = state;\n  this._cst = state.bindings[0];\n}\n\nMatchResult.newFor = function(state) {\n  var succeeded = state.bindings.length > 0;\n  return succeeded ? new MatchResult(state) : new MatchFailure(state);\n};\n\nMatchResult.prototype.failed = function() {\n  return false;\n};\n\nMatchResult.prototype.succeeded = function() {\n  return !this.failed();\n};\n\n// Returns a `MatchResult` that can be fed into operations or attributes that care\n// about the whitespace that was implicitly skipped over by syntactic rules. This\n// is useful for doing things with comments, e.g., syntax highlighting.\nMatchResult.prototype.getDiscardedSpaces = function() {\n  if (this.failed()) {\n    return [];\n  }\n\n  var state = this.state;\n  var grammar = state.grammar;\n  var inputStream = state.inputStream;\n\n  var intervals = [new Interval(inputStream, 0, inputStream.source.length)];\n\n  // Subtract the interval of each terminal from the set of intervals above.\n  var s = grammar.semantics().addOperation('subtractTerminals', {\n    _nonterminal: function(children) {\n      children.forEach(function(child) {\n        child.subtractTerminals();\n      });\n    },\n    _terminal: function() {\n      var t = this;\n      intervals = intervals.\n          map(function(interval) { return interval.minus(t.interval); }).\n          reduce(function(xs, ys) { return xs.concat(ys); }, []);\n    }\n  });\n  s(this).subtractTerminals();\n\n  // Now `intervals` holds the intervals of the input stream that were skipped over by syntactic\n  // rules, because they contained spaces.\n\n  // Next, we want to match the contents of each of those intervals with the grammar's `spaces`\n  // rule, to reconstruct the CST nodes that were discarded by syntactic rules. But if we simply\n  // pass each interval's `contents` to the grammar's `match` method, the resulting nodes and\n  // their children will have intervals that are associated with a different input, i.e., a\n  // substring of the original input. The following operation will fix this problem for us.\n  s.addOperation('fixIntervals(idxOffset)', {\n    _default: function(children) {\n      var idxOffset = this.args.idxOffset;\n      this.interval.inputStream = inputStream;\n      this.interval.startIdx += idxOffset;\n      this.interval.endIdx += idxOffset;\n      if (!this.isTerminal()) {\n        children.forEach(function(child) {\n          child.fixIntervals(idxOffset);\n        });\n      }\n    }\n  });\n\n  // Now we're finally ready to reconstruct the discarded CST nodes.\n  var discardedNodes = intervals.map(function(interval) {\n    var r = grammar.match(interval.contents, 'spaces');\n    s(r).fixIntervals(interval.startIdx);\n    return r._cst;\n  });\n\n  // Rather than return a bunch of CST nodes and make the caller of this method loop over them,\n  // we can construct a single CST node that is the parent of all of the discarded nodes. An\n  // `IterationNode` is the obvious choice for this.\n  discardedNodes = new nodes.IterationNode(\n      grammar,\n      discardedNodes,\n      discardedNodes.length === 0 ?\n          new Interval(inputStream, 0, 0) :\n          new Interval(\n              inputStream,\n              discardedNodes[0].interval.startIdx,\n              discardedNodes[discardedNodes.length - 1].interval.endIdx));\n\n  // But remember that a CST node can't be used directly by clients. What we really need to return\n  // from this method is a successful `MatchResult` that can be used with the clients' semantics.\n  // We already have one -- `this` -- but it's got a different CST node inside. So we create a new\n  // object that delegates to `this`, and override its `_cst` property.\n  var r = Object.create(this);\n  r._cst = discardedNodes;\n\n  // We also override its `getDiscardedSpaces` method, in case someone decides to call it.\n  r.getDiscardedSpaces = function() { return r; };\n\n  return r;\n};\n\n// ----------------- MatchFailure -----------------\n\nfunction MatchFailure(state) {\n  this.state = state;\n  common.defineLazyProperty(this, '_failures', function() {\n    return this.state.getFailures();\n  });\n  common.defineLazyProperty(this, 'message', function() {\n    var source = this.state.inputStream.source;\n    if (typeof source !== 'string') {\n      return 'match failed at position ' + this.getRightmostFailurePosition();\n    }\n\n    var detail = 'Expected ' + this.getExpectedText();\n    return util.getLineAndColumnMessage(source, this.getRightmostFailurePosition()) + detail;\n  });\n  common.defineLazyProperty(this, 'shortMessage', function() {\n    if (typeof this.state.inputStream.source !== 'string') {\n      return 'match failed at position ' + this.getRightmostFailurePosition();\n    }\n    var detail = 'expected ' + this.getExpectedText();\n    return getShortMatchErrorMessage(\n        this.getRightmostFailurePosition(),\n        this.state.inputStream.source,\n        detail);\n  });\n}\ninherits(MatchFailure, MatchResult);\n\nMatchFailure.prototype.toString = function() {\n  return '[MatchFailure at position ' + this.getRightmostFailurePosition() + ']';\n};\n\nMatchFailure.prototype.failed = function() {\n  return true;\n};\n\nMatchFailure.prototype.getRightmostFailurePosition = function() {\n  return this.state.getRightmostFailurePosition();\n};\n\nMatchFailure.prototype.getRightmostFailures = function() {\n  return this._failures;\n};\n\n// Return a string summarizing the expected contents of the input stream when\n// the match failure occurred.\nMatchFailure.prototype.getExpectedText = function() {\n  var sb = new common.StringBuffer();\n  var failures = this.getRightmostFailures();\n\n  // Filter out the fluffy failures to make the default error messages more useful\n  failures = failures.filter(function(failure) {\n    return !failure.isFluffy();\n  });\n\n  for (var idx = 0; idx < failures.length; idx++) {\n    if (idx > 0) {\n      if (idx === failures.length - 1) {\n        sb.append((failures.length > 2 ? ', or ' : ' or '));\n      } else {\n        sb.append(', ');\n      }\n    }\n    sb.append(failures[idx].toString());\n  }\n  return sb.contents();\n};\n\nMatchFailure.prototype.getInterval = function() {\n  var pos = this.state.getRightmostFailurePosition();\n  return new Interval(this.state.inputStream, pos, pos);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = MatchResult;\n\n\n\n/** WEBPACK FOOTER **\n ** src/MatchResult.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar extend = require('util-extend');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Namespace() {\n}\nNamespace.prototype = Object.create(null);\n\nNamespace.asNamespace = function(objOrNamespace) {\n  if (objOrNamespace instanceof Namespace) {\n    return objOrNamespace;\n  }\n  return Namespace.createNamespace(objOrNamespace);\n};\n\n// Create a new namespace. If `optProps` is specified, all of its properties\n// will be copied to the new namespace.\nNamespace.createNamespace = function(optProps) {\n  return Namespace.extend(Namespace.prototype, optProps);\n};\n\n// Create a new namespace which extends another namespace. If `optProps` is\n// specified, all of its properties will be copied to the new namespace.\nNamespace.extend = function(namespace, optProps) {\n  if (namespace !== Namespace.prototype && !(namespace instanceof Namespace)) {\n    throw new TypeError('not a Namespace object: ' + namespace);\n  }\n  var ns = Object.create(namespace, {\n    constructor: {\n      value: Namespace,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  return extend(ns, optProps);\n};\n\n// TODO: Should this be a regular method?\nNamespace.toString = function(ns) {\n  return Object.prototype.toString.call(ns);\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Namespace;\n\n\n\n/** WEBPACK FOOTER **\n ** src/Namespace.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction PosInfo(state) {\n  this.state = state;\n  this.applicationMemoKeyStack = [];  // a stack of \"memo keys\" of the active applications\n  this.memo = {};\n  this.currentLeftRecursion = undefined;\n}\n\nPosInfo.prototype = {\n  isActive: function(application) {\n    return this.applicationMemoKeyStack.indexOf(application.toMemoKey()) >= 0;\n  },\n\n  enter: function(application) {\n    this.state.enter(application);\n    this.applicationMemoKeyStack.push(application.toMemoKey());\n  },\n\n  exit: function() {\n    this.state.exit();\n    this.applicationMemoKeyStack.pop();\n  },\n\n  startLeftRecursion: function(headApplication, memoRec) {\n    memoRec.isLeftRecursion = true;\n    memoRec.headApplication = headApplication;\n    memoRec.nextLeftRecursion = this.currentLeftRecursion;\n    this.currentLeftRecursion = memoRec;\n\n    var applicationMemoKeyStack = this.applicationMemoKeyStack;\n    var indexOfFirstInvolvedRule = applicationMemoKeyStack.indexOf(headApplication.toMemoKey()) + 1;\n    var involvedApplicationMemoKeys = applicationMemoKeyStack.slice(indexOfFirstInvolvedRule);\n\n    memoRec.isInvolved = function(applicationMemoKey) {\n      return involvedApplicationMemoKeys.indexOf(applicationMemoKey) >= 0;\n    };\n\n    memoRec.updateInvolvedApplicationMemoKeys = function() {\n      for (var idx = indexOfFirstInvolvedRule; idx < applicationMemoKeyStack.length; idx++) {\n        var applicationMemoKey = applicationMemoKeyStack[idx];\n        if (!this.isInvolved(applicationMemoKey)) {\n          involvedApplicationMemoKeys.push(applicationMemoKey);\n        }\n      }\n    };\n  },\n\n  endLeftRecursion: function() {\n    this.currentLeftRecursion = this.currentLeftRecursion.nextLeftRecursion;\n  },\n\n  // Note: this method doesn't get called for the \"head\" of a left recursion -- for LR heads,\n  // the memoized result (which starts out being a failure) is always used.\n  shouldUseMemoizedResult: function(memoRec) {\n    if (!memoRec.isLeftRecursion) {\n      return true;\n    }\n    var applicationMemoKeyStack = this.applicationMemoKeyStack;\n    for (var idx = 0; idx < applicationMemoKeyStack.length; idx++) {\n      var applicationMemoKey = applicationMemoKeyStack[idx];\n      if (memoRec.isInvolved(applicationMemoKey)) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = PosInfo;\n\n\n\n/** WEBPACK FOOTER **\n ** src/PosInfo.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Symbol = require('es6-symbol');  // eslint-disable-line no-undef\nvar inherits = require('inherits');\n\nvar MatchResult = require('./MatchResult');\nvar IterationNode = require('./nodes').IterationNode;\nvar common = require('./common');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// ----------------- Wrappers -----------------\n\n// Wrappers decorate CST nodes with all of the functionality (i.e., operations and attributes)\n// provided by a Semantics (see below). `Wrapper` is the abstract superclass of all wrappers. A\n// `Wrapper` must have `_node` and `_semantics` instance variables, which refer to the CST node and\n// Semantics (resp.) for which it was created, and a `_childWrappers` instance variable which is\n// used to cache the wrapper instances that are created for its child nodes. Setting these instance\n// variables is the responsibility of the constructor of each Semantics-specific subclass of\n// `Wrapper`.\nfunction Wrapper() {}\n\nWrapper.prototype.toString = function() {\n  return '[semantics wrapper for ' + this._node.grammar.name + ']';\n};\n\nWrapper.prototype._forgetMemoizedResultFor = function(attributeName) {\n  // Remove the memoized attribute from the cstNode and all its children.\n  delete this._node[this._semantics.attributeKeys[attributeName]];\n  this.children.forEach(function(child) {\n    child._forgetMemoizedResultFor(attributeName);\n  });\n};\n\n// Returns the wrapper of the specified child node. Child wrappers are created lazily and cached in\n// the parent wrapper's `_childWrappers` instance variable.\nWrapper.prototype.child = function(idx) {\n  if (!(0 <= idx && idx < this._node.numChildren())) {\n    // TODO: Consider throwing an exception here.\n    return undefined;\n  }\n  var childWrapper = this._childWrappers[idx];\n  if (!childWrapper) {\n    childWrapper = this._childWrappers[idx] = this._semantics.wrap(this._node.childAt(idx));\n  }\n  return childWrapper;\n};\n\n// Returns an array containing the wrappers of all of the children of the node associated with this\n// wrapper.\nWrapper.prototype._children = function() {\n  // Force the creation of all child wrappers\n  for (var idx = 0; idx < this._node.numChildren(); idx++) {\n    this.child(idx);\n  }\n  return this._childWrappers;\n};\n\n// Returns `true` if the CST node associated with this wrapper corresponds to an iteration\n// expression, i.e., a Kleene-*, Kleene-+, or an optional. Returns `false` otherwise.\nWrapper.prototype.isIteration = function() {\n  return this._node.isIteration();\n};\n\n// Returns `true` if the CST node associated with this wrapper is a terminal node, `false`\n// otherwise.\nWrapper.prototype.isTerminal = function() {\n  return this._node.isTerminal();\n};\n\n// Returns `true` if the CST node associated with this wrapper is a nonterminal node, `false`\n// otherwise.\nWrapper.prototype.isNonterminal = function() {\n  return this._node.isNonterminal();\n};\n\n// Returns `true` if the CST node associated with this wrapper is a nonterminal node\n// corresponding to a syntactic rule, `false` otherwise.\nWrapper.prototype.isSyntactic = function() {\n  return this.isNonterminal() && this._node.isSyntactic();\n};\n\n// Returns `true` if the CST node associated with this wrapper is a nonterminal node\n// corresponding to a lexical rule, `false` otherwise.\nWrapper.prototype.isLexical = function() {\n  return this.isNonterminal() && this._node.isLexical();\n};\n\n// Returns `true` if the CST node associated with this wrapper is an iterator node\n// having either one or no child (? operator), `false` otherwise.\n// Otherwise, throws an exception.\nWrapper.prototype.isOptional = function() {\n  return this._node.isOptional();\n};\n\n// Create a new IterationNode in the same semantics as this wrapper.\nWrapper.prototype.iteration = function(optElements) {\n  var iter = new IterationNode(this._node.grammar, optElements || [], this.source, false);\n  return this._semantics.wrap(iter);\n};\n\nObject.defineProperties(Wrapper.prototype, {\n  // Returns an array containing the children of this CST node.\n  children: {get: function() { return this._children(); }},\n\n  // Returns the name of grammar rule that created this CST node.\n  ctorName: {get: function() { return this._node.ctorName; }},\n\n  // Returns the interval consumed by the CST node associated with this wrapper.\n  source: {get: function() { return this._node.source; }},\n\n  // Returns the number of children of this CST node.\n  numChildren: {get: function() { return this._node.numChildren(); }},\n\n  // Returns the primitive value of this CST node, if it's a terminal node. Otherwise,\n  // throws an exception.\n  primitiveValue: {\n    get: function() {\n      if (this.isTerminal()) {\n        return this._node.primitiveValue;\n      }\n      throw new TypeError(\n          \"tried to access the 'primitiveValue' attribute of a non-terminal CST node\");\n    }\n  },\n\n  // Returns the contents of the input stream consumed by this CST node.\n  sourceString: {get: function() { return this.source.contents; }}\n});\n\n// ----------------- Semantics -----------------\n\n// A Semantics is a container for a family of Operations and Attributes for a given grammar.\n// Semantics enable modularity (different clients of a grammar can create their set of operations\n// and attributes in isolation) and extensibility even when operations and attributes are mutually-\n// recursive. This constructor should not be called directly except from\n// `Semantics.createSemantics`. The normal ways to create a Semantics, given a grammar 'g', are\n// `g.semantics()` and `g.extendSemantics(parentSemantics)`.\nfunction Semantics(grammar, superSemantics) {\n  var self = this;\n  this.grammar = grammar;\n  this.checkedActionDicts = false;\n\n  // Constructor for wrapper instances, which are passed as the arguments to the semantic actions\n  // of an operation or attribute. Operations and attributes require double dispatch: the semantic\n  // action is chosen based on both the node's type and the semantics. Wrappers ensure that\n  // the `execute` method is called with the correct (most specific) semantics object as an\n  // argument.\n  this.Wrapper = function(node) {\n    self.checkActionDictsIfHaventAlready();\n    this._semantics = self;\n    this._node = node;\n    this._childWrappers = [];\n  };\n\n  this.super = superSemantics;\n  if (superSemantics) {\n    if (grammar !== this.super.grammar && !grammar._inheritsFrom(this.super.grammar)) {\n      throw new Error(\n          \"Cannot extend a semantics for grammar '\" + this.super.grammar.name +\n          \"' for use with grammar '\" + grammar.name + \"' (not a sub-grammar)\");\n    }\n    inherits(this.Wrapper, this.super.Wrapper);\n    this.operations = Object.create(this.super.operations);\n    this.attributes = Object.create(this.super.attributes);\n    this.attributeKeys = Object.create(null);\n\n    // Assign unique symbols for each of the attributes inherited from the super-semantics so that\n    // they are memoized independently.\n    for (var attributeName in this.attributes) {\n      this.attributeKeys[attributeName] = Symbol();\n    }\n  } else {\n    inherits(this.Wrapper, Wrapper);\n    this.operations = Object.create(null);\n    this.attributes = Object.create(null);\n    this.attributeKeys = Object.create(null);\n  }\n}\n\nSemantics.prototype.toString = function() {\n  return '[semantics for ' + this.grammar.name + ']';\n};\n\nSemantics.prototype.checkActionDictsIfHaventAlready = function() {\n  if (!this.checkedActionDicts) {\n    this.checkActionDicts();\n    this.checkedActionDicts = true;\n  }\n};\n\n// Checks that the action dictionaries for all operations and attributes in this semantics,\n// including the ones that were inherited from the super-semantics, agree with the grammar.\n// Throws an exception if one or more of them doesn't.\nSemantics.prototype.checkActionDicts = function() {\n  for (var name in this.operations) {\n    this.operations[name].checkActionDict(this.grammar);\n  }\n  for (name in this.attributes) {\n    this.attributes[name].checkActionDict(this.grammar);\n  }\n};\n\nSemantics.prototype.toRecipe = function(semanticsOnly) {\n  function hasSuperSemantics(s) {\n    return s.super !== Semantics.BuiltInSemantics._getSemantics();\n  }\n\n  var str = '(function(g) {\\n';\n  if (hasSuperSemantics(this)) {\n    str += '  var semantics = ' + this.super.toRecipe(true) + '(g';\n\n    var superSemanticsGrammar = this.super.grammar;\n    var relatedGrammar = this.grammar;\n    while (relatedGrammar !== superSemanticsGrammar) {\n      str += '.superGrammar';\n      relatedGrammar = relatedGrammar.superGrammar;\n    }\n\n    str += ');\\n';\n    str += '  return g.extendSemantics(semantics)';\n  } else {\n    str += '  return g.semantics()';\n  }\n  ['Operation', 'Attribute'].forEach(function(type) {\n    var semanticOperations = this[type.toLowerCase() + 's'];\n    Object.keys(semanticOperations).forEach(function(name) {\n      var signature = name;\n      if (semanticOperations[name].formals.length > 0) {\n        signature += '(' + semanticOperations[name].formals.join(', ') + ')';\n      }\n\n      var method;\n      if (hasSuperSemantics(this) && this.super[type.toLowerCase() + 's'][name]) {\n        method = 'extend' + type;\n      } else {\n        method = 'add' + type;\n      }\n      str += '\\n    .' + method + '(' + JSON.stringify(signature) + ', {';\n\n      var actions = semanticOperations[name].actionDict;\n      var srcArray = [];\n      Object.keys(actions).forEach(function(actionName) {\n        if (semanticOperations[name].builtInDefault !== actions[actionName]) {\n          srcArray.push('\\n      ' + JSON.stringify(actionName) + ': ' +\n            actions[actionName].toString());\n        }\n      });\n      str += srcArray.join(',');\n\n      str += '\\n    })';\n    }, this);\n  }, this);\n  str += ';\\n  })';\n\n  if (!semanticsOnly) {\n    str =\n      '(function() {\\n' +\n      '  var grammar = this.fromRecipe(' + this.grammar.toRecipe() + ');\\n' +\n      '  var semantics = ' + str + '(grammar);\\n' +\n      '  return semantics;\\n' +\n      '});\\n';\n  }\n\n  return str;\n};\n\nvar prototypeGrammar;\nvar prototypeGrammarSemantics;\n\n// This method is called from main.js once Ohm has loaded.\nSemantics.initPrototypeParser = function(grammar) {\n  prototypeGrammarSemantics = grammar.semantics().addOperation('parse', {\n    AttributeSignature: function(name) {\n      return {\n        name: name.parse(),\n        formals: []\n      };\n    },\n    OperationSignature: function(name, optFormals) {\n      return {\n        name: name.parse(),\n        formals: optFormals.parse()[0] || []\n      };\n    },\n    Formals: function(oparen, fs, cparen) {\n      return fs.asIteration().parse();\n    },\n    name: function(first, rest) {\n      return this.sourceString;\n    }\n  });\n  prototypeGrammar = grammar;\n};\n\nfunction parseSignature(signature, type) {\n  if (!prototypeGrammar) {\n    // The Operations and Attributes grammar won't be available while Ohm is loading,\n    // but we can get away the following simplification b/c none of the operations\n    // that are used while loading take arguments.\n    common.assert(signature.indexOf('(') === -1);\n    return {\n      name: signature,\n      formals: []\n    };\n  }\n\n  var r = prototypeGrammar.match(\n      signature,\n      type === 'operation' ? 'OperationSignature' : 'AttributeSignature');\n  if (r.failed()) {\n    throw new Error(r.message);\n  }\n\n  return prototypeGrammarSemantics(r).parse();\n}\n\nfunction newDefaultAction(type, name, doIt) {\n  return function(children) {\n    var self = this;\n    var thisThing = this._semantics.operations[name] || this._semantics.attributes[name];\n    var args = thisThing.formals.map(function(formal) {\n      return self.args[formal];\n    });\n\n    if (this.isIteration()) {\n      // This CST node corresponds to an iteration expression in the grammar (*, +, or ?). The\n      // default behavior is to map this operation or attribute over all of its child nodes.\n      return children.map(function(child) { return doIt.apply(child, args); });\n    }\n\n    // This CST node corresponds to a non-terminal in the grammar (e.g., AddExpr). The fact that\n    // we got here means that this action dictionary doesn't have an action for this particular\n    // non-terminal or a generic `_nonterminal` action.\n    if (children.length === 1) {\n      // As a convenience, if this node only has one child, we just return the result of\n      // applying this operation / attribute to the child node.\n      return doIt.apply(children[0], args);\n    } else {\n      // Otherwise, we throw an exception to let the programmer know that we don't know what\n      // to do with this node.\n      throw new Error(\n          'Missing semantic action for ' + this.ctorName + ' in ' + name + ' ' + type);\n    }\n  };\n}\n\nSemantics.prototype.addOperationOrAttribute = function(type, signature, actionDict) {\n  var typePlural = type + 's';\n\n  var parsedNameAndFormalArgs = parseSignature(signature, type);\n  var name = parsedNameAndFormalArgs.name;\n  var formals = parsedNameAndFormalArgs.formals;\n\n  // TODO: check that there are no duplicate formal arguments\n\n  this.assertNewName(name, type);\n\n  // Create the action dictionary for this operation / attribute that contains a `_default` action\n  // which defines the default behavior of iteration, terminal, and non-terminal nodes...\n  var builtInDefault = newDefaultAction(type, name, doIt);\n  var realActionDict = {_default: builtInDefault};\n  // ... and add in the actions supplied by the programmer, which may override some or all of the\n  // default ones.\n  Object.keys(actionDict).forEach(function(name) {\n    realActionDict[name] = actionDict[name];\n  });\n\n  var entry = type === 'operation' ?\n      new Operation(name, formals, realActionDict, builtInDefault) :\n      new Attribute(name, realActionDict, builtInDefault);\n\n  // The following check is not strictly necessary (it will happen later anyway) but it's better to\n  // catch errors early.\n  entry.checkActionDict(this.grammar);\n\n  this[typePlural][name] = entry;\n\n  function doIt() {\n    // Dispatch to most specific version of this operation / attribute -- it may have been\n    // overridden by a sub-semantics.\n    var thisThing = this._semantics[typePlural][name];\n\n    // Check that the caller passed the correct number of arguments.\n    if (arguments.length !== thisThing.formals.length) {\n      throw new Error(\n          'Invalid number of arguments passed to ' + name + ' ' + type + ' (expected ' +\n          thisThing.formals.length + ', got ' + arguments.length + ')');\n    }\n\n    // Create an \"arguments object\" from the arguments that were passed to this\n    // operation / attribute.\n    var args = Object.create(null);\n    for (var idx = 0; idx < arguments.length; idx++) {\n      var formal = thisThing.formals[idx];\n      args[formal] = arguments[idx];\n    }\n\n    var oldArgs = this.args;\n    this.args = args;\n    var ans = thisThing.execute(this._semantics, this);\n    this.args = oldArgs;\n    return ans;\n  }\n\n  if (type === 'operation') {\n    this.Wrapper.prototype[name] = doIt;\n    this.Wrapper.prototype[name].toString = function() {\n      return '[' + name + ' operation]';\n    };\n  } else {\n    Object.defineProperty(this.Wrapper.prototype, name, {\n        get: doIt,\n        configurable: true  // So the property can be deleted.\n      });\n    this.attributeKeys[name] = Symbol();\n  }\n};\n\nSemantics.prototype.extendOperationOrAttribute = function(type, name, actionDict) {\n  var typePlural = type + 's';\n\n  // Make sure that `name` really is just a name, i.e., that it doesn't also contain formals.\n  parseSignature(name, 'attribute');\n\n  if (!(this.super && name in this.super[typePlural])) {\n    throw new Error('Cannot extend ' + type + \" '\" + name +\n        \"': did not inherit an \" + type + ' with that name');\n  }\n  if (Object.prototype.hasOwnProperty.call(this[typePlural], name)) {\n    throw new Error('Cannot extend ' + type + \" '\" + name + \"' again\");\n  }\n\n  // Create a new operation / attribute whose actionDict delegates to the super operation /\n  // attribute's actionDict, and which has all the keys from `inheritedActionDict`.\n  var inheritedFormals = this[typePlural][name].formals;\n  var inheritedActionDict = this[typePlural][name].actionDict;\n  var newActionDict = Object.create(inheritedActionDict);\n  Object.keys(actionDict).forEach(function(name) {\n    newActionDict[name] = actionDict[name];\n  });\n\n  this[typePlural][name] = type === 'operation' ?\n      new Operation(name, inheritedFormals, newActionDict) :\n      new Attribute(name, newActionDict);\n\n  // The following check is not strictly necessary (it will happen later anyway) but it's better to\n  // catch errors early.\n  this[typePlural][name].checkActionDict(this.grammar);\n};\n\nSemantics.prototype.assertNewName = function(name, type) {\n  if (Wrapper.prototype.hasOwnProperty(name)) {\n    throw new Error(\n        'Cannot add ' + type + \" '\" + name + \"': that's a reserved name\");\n  }\n  if (name in this.operations) {\n    throw new Error(\n        'Cannot add ' + type + \" '\" + name + \"': an operation with that name already exists\");\n  }\n  if (name in this.attributes) {\n    throw new Error(\n        'Cannot add ' + type + \" '\" + name + \"': an attribute with that name already exists\");\n  }\n};\n\n// Returns a wrapper for the given CST `node` in this semantics.\n// If `node` is already a wrapper, returns `node` itself.  // TODO: why is this needed?\nSemantics.prototype.wrap = function(node) {\n  return node instanceof this.Wrapper ? node : new this.Wrapper(node);\n};\n\n// Creates a new Semantics instance for `grammar`, inheriting operations and attributes from\n// `optSuperSemantics`, if it is specified. Returns a function that acts as a proxy for the new\n// Semantics instance. When that function is invoked with a CST node as an argument, it returns\n// a wrapper for that node which gives access to the operations and attributes provided by this\n// semantics.\nSemantics.createSemantics = function(grammar, optSuperSemantics) {\n  var s = new Semantics(\n      grammar,\n      optSuperSemantics !== undefined ?\n          optSuperSemantics :\n          Semantics.BuiltInSemantics._getSemantics());\n\n  // To enable clients to invoke a semantics like a function, return a function that acts as a proxy\n  // for `s`, which is the real `Semantics` instance.\n  var proxy = function ASemantics(matchResult) {\n    if (!(matchResult instanceof MatchResult)) {\n      throw new TypeError(\n          'Semantics expected a MatchResult, but got ' + common.unexpectedObjToString(matchResult));\n    }\n    if (!matchResult.succeeded()) {\n      throw new TypeError(\n          'cannot apply Semantics to ' + matchResult.toString());\n    }\n\n    var cst = matchResult._cst;\n    if (cst.grammar !== grammar) {\n      throw new Error(\n          \"Cannot use a MatchResult from grammar '\" + cst.grammar.name +\n          \"' with a semantics for '\" + grammar.name + \"'\");\n    }\n    return s.wrap(cst);\n  };\n\n  // Forward public methods from the proxy to the semantics instance.\n  proxy.addOperation = function(signature, actionDict) {\n    s.addOperationOrAttribute.call(s, 'operation', signature, actionDict);\n    return proxy;\n  };\n  proxy.extendOperation = function(name, actionDict) {\n    s.extendOperationOrAttribute.call(s, 'operation', name, actionDict);\n    return proxy;\n  };\n  proxy.addAttribute = function(name, actionDict) {\n    s.addOperationOrAttribute.call(s, 'attribute', name, actionDict);\n    return proxy;\n  };\n  proxy.extendAttribute = function(name, actionDict) {\n    s.extendOperationOrAttribute.call(s, 'attribute', name, actionDict);\n    return proxy;\n  };\n  proxy._getActionDict = function(operationOrAttributeName) {\n    var action = s.operations[operationOrAttributeName] || s.attributes[operationOrAttributeName];\n    if (!action) {\n      throw new Error('\"' + operationOrAttributeName + '\" is not a valid operation or attribute ' +\n        'name in this semantics for \"' + grammar.name + '\"');\n    }\n    return action.actionDict;\n  };\n  proxy._remove = function(operationOrAttributeName) {\n    var semantic;\n    if (operationOrAttributeName in s.operations) {\n      semantic = s.operations[operationOrAttributeName];\n      delete s.operations[operationOrAttributeName];\n    } else if (operationOrAttributeName in s.attributes) {\n      semantic = s.attributes[operationOrAttributeName];\n      delete s.attributes[operationOrAttributeName];\n    }\n    delete s.Wrapper.prototype[operationOrAttributeName];\n    return semantic;\n  };\n  proxy.getOperationNames = function() {\n    return Object.keys(s.operations);\n  };\n  proxy.getAttributeNames = function() {\n    return Object.keys(s.attributes);\n  };\n  proxy.getGrammar = function() {\n    return s.grammar;\n  };\n  proxy.toRecipe = function(semanticsOnly) {\n    return s.toRecipe(semanticsOnly);\n  };\n\n  // Make the proxy's toString() work.\n  proxy.toString = s.toString.bind(s);\n\n  // Returns the semantics for the proxy.\n  proxy._getSemantics = function() {\n    return s;\n  };\n\n  return proxy;\n};\n\nSemantics.initBuiltInSemantics = function(builtInRules) {\n  var actions = {\n    empty: function() {\n      return this.iteration();\n    },\n    nonEmpty: function(first, _, rest) {\n      return this.iteration([first].concat(rest.children));\n    }\n  };\n\n  Semantics.BuiltInSemantics = Semantics\n      .createSemantics(builtInRules, null)\n      .addOperation('asIteration', {\n        emptyListOf: actions.empty,\n        nonemptyListOf: actions.nonEmpty,\n        EmptyListOf: actions.empty,\n        NonemptyListOf: actions.nonEmpty\n      });\n};\n\n// ----------------- Operation -----------------\n\n// An Operation represents a function to be applied to a concrete syntax tree (CST) -- it's very\n// similar to a Visitor (http://en.wikipedia.org/wiki/Visitor_pattern). An operation is executed by\n// recursively walking the CST, and at each node, invoking the matching semantic action from\n// `actionDict`. See `Operation.prototype.execute` for details of how a CST node's matching semantic\n// action is found.\nfunction Operation(name, formals, actionDict, builtInDefault) {\n  this.name = name;\n  this.formals = formals;\n  this.actionDict = actionDict;\n  this.builtInDefault = builtInDefault;\n}\n\nOperation.prototype.typeName = 'operation';\n\nOperation.prototype.checkActionDict = function(grammar) {\n  grammar._checkTopDownActionDict(this.typeName, this.name, this.actionDict);\n};\n\n// Execute this operation on the CST node associated with `nodeWrapper` in the context of the given\n// Semantics instance.\nOperation.prototype.execute = function(semantics, nodeWrapper) {\n  // Look for a semantic action whose name matches the node's constructor name, which is either the\n  // name of a rule in the grammar, or '_terminal' (for a terminal node), or '_iter' (for an\n  // iteration node). In the latter case, the action function receives a single argument, which is\n  // an array containing all of the children of the CST node.\n  var actionFn = this.actionDict[nodeWrapper._node.ctorName];\n  if (actionFn) {\n    return this.doAction(semantics, nodeWrapper, actionFn, nodeWrapper.isIteration());\n  }\n\n  // The action dictionary does not contain a semantic action for this specific type of node.\n  // If this is a nonterminal node and the programmer has provided a `_nonterminal` semantic\n  // action, we invoke it:\n  if (nodeWrapper.isNonterminal()) {\n    actionFn = this.actionDict._nonterminal;\n    if (actionFn) {\n      return this.doAction(semantics, nodeWrapper, actionFn, true);\n    }\n  }\n\n  // Otherwise, we invoke the '_default' semantic action.\n  return this.doAction(semantics, nodeWrapper, this.actionDict._default, true);\n};\n\n// Invoke `actionFn` on the CST node that corresponds to `nodeWrapper`, in the context of\n// `semantics`. If `optPassChildrenAsArray` is truthy, `actionFn` will be called with a single\n// argument, which is an array of wrappers. Otherwise, the number of arguments to `actionFn` will\n// be equal to the number of children in the CST node.\nOperation.prototype.doAction = function(semantics, nodeWrapper, actionFn, optPassChildrenAsArray) {\n  return optPassChildrenAsArray ?\n      actionFn.call(nodeWrapper, nodeWrapper._children()) :\n      actionFn.apply(nodeWrapper, nodeWrapper._children());\n};\n\n// ----------------- Attribute -----------------\n\n// Attributes are Operations whose results are memoized. This means that, for any given semantics,\n// the semantic action for a CST node will be invoked no more than once.\nfunction Attribute(name, actionDict, builtInDefault) {\n  this.name = name;\n  this.formals = [];\n  this.actionDict = actionDict;\n  this.builtInDefault = builtInDefault;\n}\ninherits(Attribute, Operation);\n\nAttribute.prototype.typeName = 'attribute';\n\nAttribute.prototype.execute = function(semantics, nodeWrapper) {\n  var node = nodeWrapper._node;\n  var key = semantics.attributeKeys[this.name];\n  if (!node.hasOwnProperty(key)) {\n    // The following is a super-send -- isn't JS beautiful? :/\n    node[key] = Operation.prototype.execute.call(this, semantics, nodeWrapper);\n  }\n  return node[key];\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Semantics;\n\n\n\n/** WEBPACK FOOTER **\n ** src/Semantics.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar InputStream = require('./InputStream');\nvar PosInfo = require('./PosInfo');\nvar Trace = require('./Trace');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nvar RM_RIGHTMOST_FAILURE_POSITION = 0;\nvar RM_RIGHTMOST_FAILURES = 1;\n\nvar applySpaces = new pexprs.Apply('spaces');\n\nfunction State(grammar, input, opts) {\n  this.grammar = grammar;\n  this.startExpr = this._getStartExpr(grammar, opts.startApplication);\n  this.inputStream = new InputStream(input);\n  this.tracingEnabled = opts.trace || false;\n  this.init(RM_RIGHTMOST_FAILURE_POSITION);\n}\n\nState.prototype = {\n  init: function(recordingMode) {\n    this.posInfos = [];\n    this.bindings = [];\n    this.applicationStack = [];\n    this.inLexifiedContextStack = [false];\n\n    this.recordingMode = recordingMode;\n    if (recordingMode === RM_RIGHTMOST_FAILURE_POSITION) {\n      this.rightmostFailurePosition = -1;\n    } else if (recordingMode === RM_RIGHTMOST_FAILURES) {\n      // We always run in *rightmost failure position* recording mode before running in\n      // *rightmost failures* recording mode. And since the traces generated by each of\n      // these passes would be identical, there's no need to record it now if we have\n      // already recorded it in the first pass.\n      this.tracingEnabled = false;\n    } else {\n      throw new Error('invalid recording mode: ' + recordingMode);\n    }\n\n    if (this.isTracing()) {\n      this.trace = [];\n    }\n  },\n\n  enter: function(app) {\n    this.applicationStack.push(app);\n    this.inLexifiedContextStack.push(false);\n  },\n\n  exit: function() {\n    this.applicationStack.pop();\n    this.inLexifiedContextStack.pop();\n  },\n\n  enterLexifiedContext: function() {\n    this.inLexifiedContextStack.push(true);\n  },\n\n  exitLexifiedContext: function() {\n    this.inLexifiedContextStack.pop();\n  },\n\n  currentApplication: function() {\n    return this.applicationStack[this.applicationStack.length - 1];\n  },\n\n  inSyntacticContext: function() {\n    if (typeof this.inputStream.source !== 'string') {\n      return false;\n    }\n    var currentApplication = this.currentApplication();\n    if (currentApplication) {\n      return currentApplication.isSyntactic() && !this.inLexifiedContext();\n    } else {\n      // The top-level context is syntactic if the start application is.\n      return this.startExpr.factors[0].isSyntactic();\n    }\n  },\n\n  inLexifiedContext: function() {\n    return this.inLexifiedContextStack[this.inLexifiedContextStack.length - 1];\n  },\n\n  skipSpaces: function() {\n    var origFailuresInfo = this.getFailuresInfo();\n    this.eval(applySpaces);\n    this.bindings.pop();\n    this.restoreFailuresInfo(origFailuresInfo);\n    return this.inputStream.pos;\n  },\n\n  skipSpacesIfInSyntacticContext: function() {\n    return this.inSyntacticContext() ?\n        this.skipSpaces() :\n        this.inputStream.pos;\n  },\n\n  maybeSkipSpacesBefore: function(expr) {\n    if (expr instanceof pexprs.Apply && expr.isSyntactic()) {\n      return this.skipSpaces();\n    } else if (expr.allowsSkippingPrecedingSpace() && expr !== applySpaces) {\n      return this.skipSpacesIfInSyntacticContext();\n    } else {\n      return this.inputStream.pos;\n    }\n  },\n\n  truncateBindings: function(newLength) {\n    // Yes, this is this really faster than setting the `length` property (tested with\n    // bin/es5bench on Node v6.1.0).\n    while (this.bindings.length > newLength) {\n      this.bindings.pop();\n    }\n  },\n\n  getCurrentPosInfo: function() {\n    return this.getPosInfo(this.inputStream.pos);\n  },\n\n  getPosInfo: function(pos) {\n    var posInfo = this.posInfos[pos];\n    return posInfo || (this.posInfos[pos] = new PosInfo(this));\n  },\n\n  processFailure: function(pos, expr) {\n    if (this.recordingMode === RM_RIGHTMOST_FAILURE_POSITION) {\n      if (pos > this.rightmostFailurePosition) {\n        this.rightmostFailurePosition = pos;\n      }\n    } else /* if (this.recordingMode === RM_RIGHTMOST_FAILURES) */\n        if (pos === this.rightmostFailurePosition) {\n          // We're only interested in failures at the rightmost failure position that haven't\n          // already been recorded.\n\n          var app = this.currentApplication();\n          if (app) {\n            // Substitute parameters with the actual pexprs that were passed to\n            // the current rule.\n            expr = expr.substituteParams(app.args);\n          } else {\n            // This branch is only reached for the \"end-check\" that is\n            // performed after the top-level application. In that case,\n            // expr === pexprs.end so there is no need to substitute\n            // parameters.\n          }\n\n          this.addRightmostFailure(expr.toFailure(this.grammar), false);\n        }\n  },\n\n  ensureRightmostFailures: function() {\n    if (!this.rightmostFailures) {\n      this.rightmostFailures = Object.create(null);\n    }\n  },\n\n  addRightmostFailure: function(failure, shouldCloneIfNew) {\n    this.ensureRightmostFailures();\n    var key = failure.toKey();\n    if (!this.rightmostFailures[key]) {\n      this.rightmostFailures[key] = shouldCloneIfNew ? failure.clone() : failure;\n    } else if (this.rightmostFailures[key].isFluffy() && !failure.isFluffy()) {\n      this.rightmostFailures[key].clearFluffy();\n    }\n  },\n\n  addRightmostFailures: function(failures, shouldCloneIfNew) {\n    var self = this;\n    Object.keys(failures).forEach(function(key) {\n      self.addRightmostFailure(failures[key], shouldCloneIfNew);\n    });\n  },\n\n  cloneRightmostFailures: function() {\n    if (!this.rightmostFailures) {\n      return undefined;\n    }\n\n    var ans = Object.create(null);\n    var self = this;\n    Object.keys(this.rightmostFailures).forEach(function(key) {\n      ans[key] = self.rightmostFailures[key].clone();\n    });\n    return ans;\n  },\n\n  getRightmostFailurePosition: function() {\n    return this.rightmostFailurePosition;\n  },\n\n  getFailures: function() {\n    if (this.recordingMode === RM_RIGHTMOST_FAILURE_POSITION) {\n      // Rewind, then try to match the input again, recording failures.\n      this.init(RM_RIGHTMOST_FAILURES);\n      this.evalFromStart();\n    }\n\n    this.ensureRightmostFailures();\n    var self = this;\n    return Object.keys(this.rightmostFailures).map(function(key) {\n      return self.rightmostFailures[key];\n    });\n  },\n\n  // Returns the memoized trace entry for `expr` at `pos`, if one exists, `null` otherwise.\n  getMemoizedTraceEntry: function(pos, expr) {\n    var posInfo = this.posInfos[pos];\n    if (posInfo && expr.ruleName) {\n      var memoRec = posInfo.memo[expr.toMemoKey()];\n      if (memoRec && memoRec.traceEntry) {\n        var entry = memoRec.traceEntry.cloneWithExpr(expr);\n        entry.isMemoized = true;\n        return entry;\n      }\n    }\n    return null;\n  },\n\n  // Returns a new trace entry, with the currently active trace array as its children.\n  getTraceEntry: function(pos, expr, succeeded, bindings) {\n    return this.getMemoizedTraceEntry(pos, expr) ||\n           new Trace(this.inputStream, pos, expr, succeeded, bindings, this.trace);\n  },\n\n  isTracing: function() {\n    return this.tracingEnabled;\n  },\n\n  useMemoizedResult: function(memoRec) {\n    if (this.isTracing()) {\n      this.trace.push(memoRec.traceEntry);\n    }\n\n    if (this.recordingMode === RM_RIGHTMOST_FAILURES && memoRec.failuresAtRightmostPosition) {\n      this.addRightmostFailures(memoRec.failuresAtRightmostPosition, true);\n    }\n\n    if (memoRec.value) {\n      this.inputStream.pos = memoRec.pos;\n      this.bindings.push(memoRec.value);\n      return true;\n    }\n    return false;\n  },\n\n  // Evaluate `expr` and return `true` if it succeeded, `false` otherwise. On success, `bindings`\n  // will have `expr.getArity()` more elements than before, and the input stream's position may\n  // have increased. On failure, `bindings` and position will be unchanged.\n  eval: function(expr) {\n    var inputStream = this.inputStream;\n    var origNumBindings = this.bindings.length;\n\n    if (this.recordingMode === RM_RIGHTMOST_FAILURES) {\n      var origFailures = this.rightmostFailures;\n      this.rightmostFailures = undefined;\n    }\n\n    var origPos = inputStream.pos;\n    var memoPos = this.maybeSkipSpacesBefore(expr);\n\n    if (this.isTracing()) {\n      var origTrace = this.trace;\n      this.trace = [];\n    }\n\n    // Do the actual evaluation.\n    var ans = expr.eval(this);\n\n    if (this.isTracing()) {\n      var bindings = this.bindings.slice(origNumBindings);\n      var traceEntry = this.getTraceEntry(memoPos, expr, ans, bindings);\n      traceEntry.isImplicitSpaces = expr === applySpaces;\n      traceEntry.isRootNode = expr === this.startExpr;\n      origTrace.push(traceEntry);\n      this.trace = origTrace;\n    }\n\n    if (ans) {\n      if (this.rightmostFailures &&\n        (inputStream.pos === this.rightmostFailurePosition ||\n         this.skipSpacesIfInSyntacticContext() === this.rightmostFailurePosition)) {\n        var self = this;\n        Object.keys(this.rightmostFailures).forEach(function(key) {\n          self.rightmostFailures[key].makeFluffy();\n        });\n      }\n    } else {\n      // Reset the position and the bindings.\n      inputStream.pos = origPos;\n      this.truncateBindings(origNumBindings);\n    }\n\n    if (this.recordingMode === RM_RIGHTMOST_FAILURES && origFailures) {\n      this.addRightmostFailures(origFailures, false);\n    }\n\n    return ans;\n  },\n\n  // Return the starting expression for this grammar. If `optStartApplication` is specified, it\n  // is a string expressing a rule application in the grammar. If not specified, the grammar's\n  // default start rule will be used.\n  _getStartExpr: function(grammar, optStartApplication) {\n    var applicationStr = optStartApplication || grammar.defaultStartRule;\n    if (!applicationStr) {\n      throw new Error('Missing start rule argument -- the grammar has no default start rule.');\n    }\n\n    var startApp = grammar.parseApplication(applicationStr);\n    return new pexprs.Seq([startApp, pexprs.end]);\n  },\n\n  evalFromStart: function() {\n    this.eval(this.startExpr);\n  },\n\n  getFailuresInfo: function() {\n    if (this.recordingMode === RM_RIGHTMOST_FAILURE_POSITION) {\n      return this.rightmostFailurePosition;\n    } else /* if (this.recordingMode === RM_RIGHTMOST_FAILURES) */ {\n      return this.rightmostFailures;\n    }\n  },\n\n  restoreFailuresInfo: function(failuresInfo) {\n    if (this.recordingMode === RM_RIGHTMOST_FAILURE_POSITION) {\n      this.rightmostFailurePosition = failuresInfo;\n    } else /* if (this.recordingMode === RM_RIGHTMOST_FAILURES) */ {\n      this.rightmostFailures = failuresInfo;\n    }\n  }\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = State;\n\n\n\n/** WEBPACK FOOTER **\n ** src/State.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Interval = require('./Interval');\nvar common = require('./common');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Unicode characters that are used in the `toString` output.\nvar BALLOT_X = '\\u2717';\nvar CHECK_MARK = '\\u2713';\nvar DOT_OPERATOR = '\\u22C5';\nvar RIGHTWARDS_DOUBLE_ARROW = '\\u21D2';\nvar SYMBOL_FOR_HORIZONTAL_TABULATION = '\\u2409';\nvar SYMBOL_FOR_LINE_FEED = '\\u240A';\nvar SYMBOL_FOR_CARRIAGE_RETURN = '\\u240D';\n\nfunction spaces(n) {\n  return common.repeat(' ', n).join('');\n}\n\n// Return a string representation of a portion of `inputStream` at offset `pos`.\n// The result will contain exactly `len` characters.\nfunction getInputExcerpt(inputStream, pos, len) {\n  var excerpt = asEscapedString(inputStream.sourceSlice(pos, pos + len));\n\n  // Pad the output if necessary.\n  if (excerpt.length < len) {\n    return excerpt + common.repeat(' ', len - excerpt.length).join('');\n  }\n  return excerpt;\n}\n\nfunction asEscapedString(obj) {\n  if (typeof obj === 'string') {\n    // Replace non-printable characters with visible symbols.\n    return obj\n        .replace(/ /g, DOT_OPERATOR)\n        .replace(/\\t/g, SYMBOL_FOR_HORIZONTAL_TABULATION)\n        .replace(/\\n/g, SYMBOL_FOR_LINE_FEED)\n        .replace(/\\r/g, SYMBOL_FOR_CARRIAGE_RETURN);\n  }\n  return String(obj);\n}\n\n// ----------------- Trace -----------------\n\nfunction Trace(inputStream, pos, expr, succeeded, bindings, optChildren) {\n  this.inputStream = inputStream;\n  this.pos = pos;\n  this.source = new Interval(inputStream, pos, inputStream.pos);\n  this.expr = expr;\n  this.succeeded = succeeded;\n  this.bindings = bindings;\n  this.children = optChildren || [];\n\n  this.isHeadOfLeftRecursion = false;  // Is this the outermost LR application?\n  this.isImplicitSpaces = false;\n  this.isMemoized = false;\n  this.isRootNode = false;\n  this.terminatesLR = false;\n  this.terminatingLREntry = null;\n}\n\n// A value that can be returned from visitor functions to indicate that a\n// node should not be recursed into.\nTrace.prototype.SKIP = {};\n\nObject.defineProperty(Trace.prototype, 'displayString', {\n  get: function() { return this.expr.toDisplayString(); }\n});\n\nTrace.prototype.clone = function() {\n  return this.cloneWithExpr(this.expr);\n};\n\nTrace.prototype.cloneWithExpr = function(expr) {\n  var ans = new Trace(\n      this.inputStream, this.pos, expr, this.succeeded, this.bindings, this.children);\n\n  ans.isHeadOfLeftRecursion = this.isHeadOfLeftRecursion;\n  ans.isImplicitSpaces = this.isImplicitSpaces;\n  ans.isMemoized = this.isMemoized;\n  ans.isRootNode = this.isRootNode;\n  ans.terminatesLR = this.terminatesLR;\n  ans.terminatingLREntry = this.terminatingLREntry;\n  return ans;\n};\n\n// Record the trace information for the terminating condition of the LR loop.\nTrace.prototype.recordLRTermination = function(ruleBodyTrace, value) {\n  this.terminatingLREntry =\n      new Trace(this.inputStream, this.pos, this.expr, false, [value], [ruleBodyTrace]);\n  this.terminatingLREntry.terminatesLR = true;\n};\n\n// Recursively traverse this trace node and all its descendents, calling a visitor function\n// for each node that is visited. If `vistorObjOrFn` is an object, then its 'enter' property\n// is a function to call before visiting the children of a node, and its 'exit' property is\n// a function to call afterwards. If `visitorObjOrFn` is a function, it represents the 'enter'\n// function.\n//\n// The functions are called with three arguments: the Trace node, its parent Trace, and a number\n// representing the depth of the node in the tree. (The root node has depth 0.) `optThisArg`, if\n// specified, is the value to use for `this` when executing the visitor functions.\nTrace.prototype.walk = function(visitorObjOrFn, optThisArg) {\n  var visitor = visitorObjOrFn;\n  if (typeof visitor === 'function') {\n    visitor = {enter: visitor};\n  }\n\n  function _walk(node, parent, depth) {\n    var recurse = true;\n    if (visitor.enter) {\n      if (visitor.enter.call(optThisArg, node, parent, depth) === Trace.prototype.SKIP) {\n        recurse = false;\n      }\n    }\n    if (recurse) {\n      node.children.forEach(function(child) {\n        _walk(child, node, depth + 1);\n      });\n      if (visitor.exit) {\n        visitor.exit.call(optThisArg, node, parent, depth);\n      }\n    }\n  }\n  if (this.isRootNode) {\n    // Don't visit the root node itself, only its children.\n    this.children.forEach(function(c) { _walk(c, null, 0); });\n  } else {\n    _walk(this, null, 0);\n  }\n};\n\n// Return a string representation of the trace.\n// Sample:\n//     12⋅+⋅2⋅*⋅3 ✓ exp ⇒  \"12\"\n//     12⋅+⋅2⋅*⋅3   ✓ addExp (LR) ⇒  \"12\"\n//     12⋅+⋅2⋅*⋅3       ✗ addExp_plus\nTrace.prototype.toString = function() {\n  var sb = new common.StringBuffer();\n  this.walk(function(node, parent, depth) {\n    if (!node) {\n      return this.SKIP;\n    }\n    var ctorName = node.expr.constructor.name;\n    // Don't print anything for Alt nodes.\n    if (ctorName === 'Alt') {\n      return;  // eslint-disable-line consistent-return\n    }\n    sb.append(getInputExcerpt(node.inputStream, node.pos, 10) + spaces(depth * 2 + 1));\n    sb.append((node.succeeded ? CHECK_MARK : BALLOT_X) + ' ' + node.displayString);\n    if (node.isHeadOfLeftRecursion) {\n      sb.append(' (LR)');\n    }\n    if (node.succeeded) {\n      var contents = asEscapedString(node.source.contents);\n      sb.append(' ' + RIGHTWARDS_DOUBLE_ARROW + '  ');\n      sb.append(typeof contents === 'string' ? '\"' + contents + '\"' : contents);\n    }\n    sb.append('\\n');\n  }.bind(this));\n  return sb.contents();\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = Trace;\n\n\n\n/** WEBPACK FOOTER **\n ** src/Trace.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar extend = require('util-extend');\n\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Helpers\n\nvar escapeStringFor = {};\nfor (var c = 0; c < 128; c++) {\n  escapeStringFor[c] = String.fromCharCode(c);\n}\nescapeStringFor[\"'\".charCodeAt(0)]  = \"\\\\'\";\nescapeStringFor['\"'.charCodeAt(0)]  = '\\\\\"';\nescapeStringFor['\\\\'.charCodeAt(0)] = '\\\\\\\\';\nescapeStringFor['\\b'.charCodeAt(0)] = '\\\\b';\nescapeStringFor['\\f'.charCodeAt(0)] = '\\\\f';\nescapeStringFor['\\n'.charCodeAt(0)] = '\\\\n';\nescapeStringFor['\\r'.charCodeAt(0)] = '\\\\r';\nescapeStringFor['\\t'.charCodeAt(0)] = '\\\\t';\nescapeStringFor['\\u000b'.charCodeAt(0)] = '\\\\v';\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nexports.abstract = function(optMethodName) {\n  var methodName = optMethodName || '';\n  return function() {\n    throw new Error(\n      'this method ' + methodName + ' is abstract! ' +\n      '(it has no implementation in class ' + this.constructor.name + ')');\n  };\n};\n\nexports.assert = function(cond, message) {\n  if (!cond) {\n    throw new Error(message);\n  }\n};\n\n// Define a lazily-computed, non-enumerable property named `propName`\n// on the object `obj`. `getterFn` will be called to compute the value the\n// first time the property is accessed.\nexports.defineLazyProperty = function(obj, propName, getterFn) {\n  var memo;\n  Object.defineProperty(obj, propName, {\n    get: function() {\n      if (!memo) {\n        memo = getterFn.call(this);\n      }\n      return memo;\n    }\n  });\n};\n\nexports.clone = function(obj) {\n  if (obj) {\n    return extend({}, obj);\n  }\n  return obj;\n};\n\nexports.extend = extend;\n\nexports.repeatFn = function(fn, n) {\n  var arr = [];\n  while (n-- > 0) {\n    arr.push(fn());\n  }\n  return arr;\n};\n\nexports.repeatStr = function(str, n) {\n  return new Array(n + 1).join(str);\n};\n\nexports.repeat = function(x, n) {\n  return exports.repeatFn(function() { return x; }, n);\n};\n\nexports.getDuplicates = function(array) {\n  var duplicates = [];\n  for (var idx = 0; idx < array.length; idx++) {\n    var x = array[idx];\n    if (array.lastIndexOf(x) !== idx && duplicates.indexOf(x) < 0) {\n      duplicates.push(x);\n    }\n  }\n  return duplicates;\n};\n\nexports.copyWithoutDuplicates = function(array) {\n  var noDuplicates = [];\n  array.forEach(function(entry) {\n    if (noDuplicates.indexOf(entry) < 0) {\n      noDuplicates.push(entry);\n    }\n  });\n  return noDuplicates;\n};\n\nexports.isSyntactic = function(ruleName) {\n  var firstChar = ruleName[0];\n  return firstChar === firstChar.toUpperCase();\n};\n\nexports.isLexical = function(ruleName) {\n  return !exports.isSyntactic(ruleName);\n};\n\nexports.padLeft = function(str, len, optChar) {\n  var ch = optChar || ' ';\n  if (str.length < len) {\n    return exports.repeatStr(ch, len - str.length) + str;\n  }\n  return str;\n};\n\n// StringBuffer\n\nexports.StringBuffer = function() {\n  this.strings = [];\n};\n\nexports.StringBuffer.prototype.append = function(str) {\n  this.strings.push(str);\n};\n\nexports.StringBuffer.prototype.contents = function() {\n  return this.strings.join('');\n};\n\n// Character escaping and unescaping\n\nexports.escapeChar = function(c, optDelim) {\n  var charCode = c.charCodeAt(0);\n  if ((c === '\"' || c === \"'\") && optDelim && c !== optDelim) {\n    return c;\n  } else if (charCode < 128) {\n    return escapeStringFor[charCode];\n  } else if (128 <= charCode && charCode < 256) {\n    return '\\\\x' + exports.padLeft(charCode.toString(16), 2, '0');\n  } else {\n    return '\\\\u' + exports.padLeft(charCode.toString(16), 4, '0');\n  }\n};\n\nexports.unescapeChar = function(s) {\n  if (s.charAt(0) === '\\\\') {\n    switch (s.charAt(1)) {\n      case 'b': return '\\b';\n      case 'f': return '\\f';\n      case 'n': return '\\n';\n      case 'r': return '\\r';\n      case 't': return '\\t';\n      case 'v': return '\\v';\n      case 'x': return String.fromCharCode(parseInt(s.substring(2, 4), 16));\n      case 'u': return String.fromCharCode(parseInt(s.substring(2, 6), 16));\n      default:   return s.charAt(1);\n    }\n  } else {\n    return s;\n  }\n};\n\n// Helper for producing a description of an unknown object in a safe way.\n// Especially useful for error messages where an unexpected type of object was encountered.\nexports.unexpectedObjToString = function(obj) {\n  if (obj == null) {\n    return String(obj);\n  }\n  var baseToString = Object.prototype.toString.call(obj);\n  try {\n    var typeName;\n    if (obj.constructor && obj.constructor.name) {\n      typeName = obj.constructor.name;\n    } else if (baseToString.indexOf('[object ') === 0) {\n      typeName = baseToString.slice(8, -1);  // Extract e.g. \"Array\" from \"[object Array]\".\n    } else {\n      typeName = typeof obj;\n    }\n    return typeName + ': ' + JSON.stringify(String(obj));\n  } catch (e) {\n    return baseToString;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/common.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Namespace = require('./Namespace');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction createError(message, optInterval) {\n  var e;\n  if (optInterval) {\n    e = new Error(optInterval.getLineAndColumnMessage() + message);\n    e.shortMessage = message;\n    e.interval = optInterval;\n  } else {\n    e = new Error(message);\n  }\n  return e;\n}\n\n// ----------------- errors about intervals -----------------\n\nfunction intervalSourcesDontMatch() {\n  return createError(\"Interval sources don't match\");\n}\n\n// ----------------- errors about grammars -----------------\n\n// Grammar syntax error\n\nfunction grammarSyntaxError(matchFailure) {\n  var e = new Error();\n  Object.defineProperty(e, 'message', {get: function() { return matchFailure.message; }});\n  Object.defineProperty(e, 'shortMessage', {get: function() {\n    return 'Expected ' + matchFailure.getExpectedText();\n  }});\n  e.interval = matchFailure.getInterval();\n  return e;\n}\n\n// Undeclared grammar\n\nfunction undeclaredGrammar(grammarName, namespace, interval) {\n  var message = namespace ?\n      'Grammar ' + grammarName + ' is not declared in namespace ' + Namespace.toString(namespace) :\n      'Undeclared grammar ' + grammarName;\n  return createError(message, interval);\n}\n\n// Duplicate grammar declaration\n\nfunction duplicateGrammarDeclaration(grammar, namespace) {\n  return createError('Grammar ' + grammar.name + ' is already declared in this namespace');\n}\n\n// ----------------- rules -----------------\n\n// Undeclared rule\n\nfunction undeclaredRule(ruleName, grammarName, optInterval) {\n  return createError(\n      'Rule ' + ruleName + ' is not declared in grammar ' + grammarName,\n      optInterval);\n}\n\n// Cannot override undeclared rule\n\nfunction cannotOverrideUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot override rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource);\n}\n\n// Cannot extend undeclared rule\n\nfunction cannotExtendUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot extend rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource);\n}\n\n// Duplicate rule declaration\n\nfunction duplicateRuleDeclaration(ruleName, grammarName, declGrammarName, body, optSource) {\n  var message = \"Duplicate declaration for rule '\" + ruleName +\n      \"' in grammar '\" + grammarName + \"'\";\n  if (grammarName !== declGrammarName) {\n    message += \" (originally declared in '\" + declGrammarName + \"')\";\n  }\n  return createError(message, optSource);\n}\n\n// Wrong number of parameters\n\nfunction wrongNumberOfParameters(ruleName, expected, actual, body, source) {\n  return createError(\n      'Wrong number of parameters for rule ' + ruleName +\n          ' (expected ' + expected + ', got ' + actual + ')',\n      source);\n}\n\n// Wrong number of arguments\n\nfunction wrongNumberOfArguments(ruleName, expected, actual, expr) {\n  return createError(\n      'Wrong number of arguments for rule ' + ruleName +\n          ' (expected ' + expected + ', got ' + actual + ')',\n      expr.source);\n}\n\n// Duplicate parameter names\n\nfunction duplicateParameterNames(ruleName, duplicates, body, source) {\n  return createError(\n      'Duplicate parameter names in rule ' + ruleName + ': ' + duplicates.join(','),\n      source);\n}\n\n// Invalid parameter expression\n\nfunction invalidParameter(ruleName, expr) {\n  return createError(\n      'Invalid parameter to rule ' + ruleName + ': ' + expr + ' has arity ' + expr.getArity() +\n          ', but parameter expressions ' + 'must have arity 1',\n      expr.source);\n}\n\n// Application of syntactic rule from lexical rule\n\nfunction applicationOfSyntacticRuleFromLexicalContext(ruleName, applyExpr) {\n  return createError(\n      'Cannot apply syntactic rule ' + ruleName + ' from here (inside a lexical context)',\n      applyExpr.source);\n}\n\n// ----------------- Kleene operators -----------------\n\nfunction kleeneExprHasNullableOperand(kleeneExpr) {\n  return createError(\n      'Nullable expression ' + kleeneExpr.expr.source.contents + \" is not allowed inside '\" +\n          kleeneExpr.operator + \"' (possible infinite loop)\",\n      kleeneExpr.expr.source);\n}\n\n// ----------------- arity -----------------\n\nfunction inconsistentArity(ruleName, expected, actual, expr) {\n  return createError(\n      'Rule ' + ruleName + ' involves an alternation which has inconsistent arity ' +\n          '(expected ' + expected + ', got ' + actual + ')',\n      expr.source);\n}\n\n// ----------------- properties -----------------\n\nfunction duplicatePropertyNames(duplicates) {\n  return createError('Object pattern has duplicate property names: ' + duplicates.join(', '));\n}\n\n// ----------------- constructors -----------------\n\nfunction invalidConstructorCall(grammar, ctorName, children) {\n  return createError(\n      'Attempt to invoke constructor ' + ctorName + ' with invalid or unexpected arguments');\n}\n\n// ----------------- convenience -----------------\n\nfunction multipleErrors(errors) {\n  var messages = errors.map(function(e) { return e.message; });\n  return createError(\n      ['Errors:'].concat(messages).join('\\n- '),\n      errors[0].interval);\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = {\n  applicationOfSyntacticRuleFromLexicalContext: applicationOfSyntacticRuleFromLexicalContext,\n  cannotExtendUndeclaredRule: cannotExtendUndeclaredRule,\n  cannotOverrideUndeclaredRule: cannotOverrideUndeclaredRule,\n  duplicateGrammarDeclaration: duplicateGrammarDeclaration,\n  duplicateParameterNames: duplicateParameterNames,\n  duplicatePropertyNames: duplicatePropertyNames,\n  duplicateRuleDeclaration: duplicateRuleDeclaration,\n  inconsistentArity: inconsistentArity,\n  intervalSourcesDontMatch: intervalSourcesDontMatch,\n  invalidConstructorCall: invalidConstructorCall,\n  invalidParameter: invalidParameter,\n  grammarSyntaxError: grammarSyntaxError,\n  kleeneExprHasNullableOperand: kleeneExprHasNullableOperand,\n  undeclaredGrammar: undeclaredGrammar,\n  undeclaredRule: undeclaredRule,\n  wrongNumberOfArguments: wrongNumberOfArguments,\n  wrongNumberOfParameters: wrongNumberOfParameters,\n\n  throwErrors: function(errors) {\n    if (errors.length === 1) {\n      throw errors[0];\n    }\n    if (errors.length > 1) {\n      throw multipleErrors(errors);\n    }\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/errors.js\n **/","/* global document, XMLHttpRequest */\n\n'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Builder = require('./Builder');\nvar Grammar = require('./Grammar');\nvar Namespace = require('./Namespace');\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\nvar util = require('./util');\n\nvar isBuffer = require('is-buffer');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// The metagrammar, i.e. the grammar for Ohm grammars. Initialized at the\n// bottom of this file because loading the grammar requires Ohm itself.\nvar ohmGrammar;\n\n// An object which makes it possible to stub out the document API for testing.\nvar documentInterface = {\n  querySelector: function(sel) { return document.querySelector(sel); },\n  querySelectorAll: function(sel) { return document.querySelectorAll(sel); }\n};\n\n// Check if `obj` is a DOM element.\nfunction isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n\nfunction isUndefined(obj) {\n  return obj === void 0;\n}\n\nvar MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n\nfunction isArrayLike(obj) {\n  if (obj == null) {\n    return false;\n  }\n  var length = obj.length;\n  return typeof length === 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n}\n\n// TODO: just use the jQuery thing\nfunction load(url) {\n  var req = new XMLHttpRequest();\n  req.open('GET', url, false);\n  try {\n    req.send();\n    if (req.status === 0 || req.status === 200) {\n      return req.responseText;\n    }\n  } catch (e) {}\n  throw new Error('unable to load url ' + url);\n}\n\n// Returns a Grammar instance (i.e., an object with a `match` method) for\n// `tree`, which is the concrete syntax tree of a user-written grammar.\n// The grammar will be assigned into `namespace` under the name of the grammar\n// as specified in the source.\nfunction buildGrammar(match, namespace, optOhmGrammarForTesting) {\n  var builder = new Builder();\n  var decl;\n  var currentRuleName;\n  var currentRuleFormals;\n  var overriding = false;\n  var metaGrammar = optOhmGrammarForTesting || ohmGrammar;\n\n  // A visitor that produces a Grammar instance from the CST.\n  var helpers = metaGrammar.semantics().addOperation('visit', {\n    Grammar: function(n, s, open, rs, close) {\n      var grammarName = n.visit();\n      decl = builder.newGrammar(grammarName, namespace);\n      s.visit();\n      rs.visit();\n      var g = decl.build();\n      g.source = this.source.trimmed();\n      if (grammarName in namespace) {\n        throw errors.duplicateGrammarDeclaration(g, namespace);\n      }\n      namespace[grammarName] = g;\n      return g;\n    },\n\n    SuperGrammar: function(_, n) {\n      var superGrammarName = n.visit();\n      if (superGrammarName === 'null') {\n        decl.withSuperGrammar(null);\n      } else {\n        if (!namespace || !(superGrammarName in namespace)) {\n          throw errors.undeclaredGrammar(superGrammarName, namespace, n.source);\n        }\n        decl.withSuperGrammar(namespace[superGrammarName]);\n      }\n    },\n\n    Rule_define: function(n, fs, d, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.visit()[0] || [];\n      // If there is no default start rule yet, set it now. This must be done before visiting\n      // the body, because it might contain an inline rule definition.\n      if (!decl.defaultStartRule && decl.ensureSuperGrammar() !== Grammar.ProtoBuiltInRules) {\n        decl.withDefaultStartRule(currentRuleName);\n      }\n      var body = b.visit();\n      var description = d.visit()[0];\n      var source = this.source.trimmed();\n      return decl.define(currentRuleName, currentRuleFormals, body, description, source);\n    },\n    Rule_override: function(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.visit()[0] || [];\n      overriding = true;\n      var body = b.visit();\n      var source = this.source.trimmed();\n      var ans = decl.override(currentRuleName, currentRuleFormals, body, null, source);\n      overriding = false;\n      return ans;\n    },\n    Rule_extend: function(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.visit()[0] || [];\n      var body = b.visit();\n      var source = this.source.trimmed();\n      var ans = decl.extend(currentRuleName, currentRuleFormals, body, null, source);\n      return ans;\n    },\n    RuleBody: function(_, terms) {\n      var args = terms.visit();\n      return builder.alt.apply(builder, args).withSource(this.source);\n    },\n\n    Formals: function(opointy, fs, cpointy) {\n      return fs.visit();\n    },\n\n    Params: function(opointy, ps, cpointy) {\n      return ps.visit();\n    },\n\n    Alt: function(seqs) {\n      var args = seqs.visit();\n      return builder.alt.apply(builder, args).withSource(this.source);\n    },\n\n    TopLevelTerm_inline: function(b, n) {\n      var inlineRuleName = currentRuleName + '_' + n.visit();\n      var body = b.visit();\n      var source = this.source.trimmed();\n      var isNewRuleDeclaration =\n          !(decl.superGrammar && decl.superGrammar.rules[inlineRuleName]);\n      if (overriding && !isNewRuleDeclaration) {\n        decl.override(inlineRuleName, currentRuleFormals, body, null, source);\n      } else {\n        decl.define(inlineRuleName, currentRuleFormals, body, null, source);\n      }\n      var params = currentRuleFormals.map(function(formal) { return builder.app(formal); });\n      return builder.app(inlineRuleName, params).withSource(body.source);\n    },\n\n    Seq: function(expr) {\n      return builder.seq.apply(builder, expr.visit()).withSource(this.source);\n    },\n\n    Iter_star: function(x, _) {\n      return builder.star(x.visit()).withSource(this.source);\n    },\n    Iter_plus: function(x, _) {\n      return builder.plus(x.visit()).withSource(this.source);\n    },\n    Iter_opt: function(x, _) {\n      return builder.opt(x.visit()).withSource(this.source);\n    },\n\n    Pred_not: function(_, x) {\n      return builder.not(x.visit()).withSource(this.source);\n    },\n    Pred_lookahead: function(_, x) {\n      return builder.lookahead(x.visit()).withSource(this.source);\n    },\n\n    Lex_lex: function(_, x) {\n      return builder.lex(x.visit()).withSource(this.source);\n    },\n\n    Base_application: function(rule, ps) {\n      return builder.app(rule.visit(), ps.visit()[0] || []).withSource(this.source);\n    },\n    Base_range: function(from, _, to) {\n      return builder.range(from.visit(), to.visit()).withSource(this.source);\n    },\n    Base_terminal: function(expr) {\n      return builder.terminal(expr.visit()).withSource(this.source);\n    },\n    Base_paren: function(open, x, close) {\n      return x.visit();\n    },\n\n    ruleDescr: function(open, t, close) {\n      return t.visit();\n    },\n    ruleDescrText: function(_) {\n      return this.sourceString.trim();\n    },\n\n    caseName: function(_, space1, n, space2, end) {\n      return n.visit();\n    },\n\n    name: function(first, rest) {\n      return this.sourceString;\n    },\n    nameFirst: function(expr) {},\n    nameRest: function(expr) {},\n\n    terminal: function(open, cs, close) {\n      return cs.visit().map(function(c) { return common.unescapeChar(c); }).join('');\n    },\n\n    terminalChar: function(_) {\n      return this.sourceString;\n    },\n\n    escapeChar: function(_) {\n      return this.sourceString;\n    },\n\n    NonemptyListOf: function(x, _, xs) {\n      return [x.visit()].concat(xs.visit());\n    },\n    EmptyListOf: function() {\n      return [];\n    },\n\n    _terminal: function() {\n      return this.primitiveValue;\n    }\n  });\n  return helpers(match).visit();\n}\n\nfunction compileAndLoad(source, namespace) {\n  var m = ohmGrammar.match(source, 'Grammars');\n  if (m.failed()) {\n    throw errors.grammarSyntaxError(m);\n  }\n  return buildGrammar(m, namespace);\n}\n\n// Return the contents of a script element, fetching it via XHR if necessary.\nfunction getScriptElementContents(el) {\n  if (!isElement(el)) {\n    throw new TypeError('Expected a DOM Node, got ' + common.unexpectedObjToString(el));\n  }\n  if (el.type !== 'text/ohm-js') {\n    throw new Error('Expected a script tag with type=\"text/ohm-js\", got ' + el);\n  }\n  return el.getAttribute('src') ? load(el.getAttribute('src')) : el.innerHTML;\n}\n\nfunction grammar(source, optNamespace) {\n  var ns = grammars(source, optNamespace);\n\n  // Ensure that the source contained no more than one grammar definition.\n  var grammarNames = Object.keys(ns);\n  if (grammarNames.length === 0) {\n    throw new Error('Missing grammar definition');\n  } else if (grammarNames.length > 1) {\n    var secondGrammar = ns[grammarNames[1]];\n    var interval = secondGrammar.source;\n    throw new Error(\n        util.getLineAndColumnMessage(interval.inputStream.source, interval.startIdx) +\n        'Found more than one grammar definition -- use ohm.grammars() instead.');\n  }\n  return ns[grammarNames[0]];  // Return the one and only grammar.\n}\n\nfunction grammars(source, optNamespace) {\n  var ns = Namespace.extend(Namespace.asNamespace(optNamespace));\n  if (typeof source !== 'string') {\n    // For convenience, detect Node.js Buffer objects and automatically call toString().\n    if (isBuffer(source)) {\n      source = source.toString();\n    } else {\n      throw new TypeError(\n          'Expected string as first argument, got ' + common.unexpectedObjToString(source));\n    }\n  }\n  compileAndLoad(source, ns);\n  return ns;\n}\n\nfunction grammarFromScriptElement(optNode) {\n  var node = optNode;\n  if (isUndefined(node)) {\n    var nodeList = documentInterface.querySelectorAll('script[type=\"text/ohm-js\"]');\n    if (nodeList.length !== 1) {\n      throw new Error(\n          'Expected exactly one script tag with type=\"text/ohm-js\", found ' + nodeList.length);\n    }\n    node = nodeList[0];\n  }\n  return grammar(getScriptElementContents(node));\n}\n\nfunction grammarsFromScriptElements(optNodeOrNodeList) {\n  // Simple case: the argument is a DOM node.\n  if (isElement(optNodeOrNodeList)) {\n    return grammars(optNodeOrNodeList);\n  }\n  // Otherwise, it must be either undefined or a NodeList.\n  var nodeList = optNodeOrNodeList;\n  if (isUndefined(nodeList)) {\n    // Find all script elements with type=\"text/ohm-js\".\n    nodeList = documentInterface.querySelectorAll('script[type=\"text/ohm-js\"]');\n  } else if (typeof nodeList === 'string' || (!isElement(nodeList) && !isArrayLike(nodeList))) {\n    throw new TypeError('Expected a Node, NodeList, or Array, but got ' + nodeList);\n  }\n  var ns = Namespace.createNamespace();\n  for (var i = 0; i < nodeList.length; ++i) {\n    // Copy the new grammars into `ns` to keep the namespace flat.\n    common.extend(ns, grammars(getScriptElementContents(nodeList[i]), ns));\n  }\n  return ns;\n}\n\nfunction makeRecipe(recipe) {\n  if (typeof recipe === 'function') {\n    return recipe.call(new Builder());\n  } else {\n    if (typeof recipe === 'string') {\n      // stringified JSON recipe\n      recipe = JSON.parse(recipe);\n    }\n    return (new Builder()).fromRecipe(recipe);\n  }\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\n// Stuff that users should know about\nmodule.exports = {\n  createNamespace: Namespace.createNamespace,\n  grammar: grammar,\n  grammars: grammars,\n  grammarFromScriptElement: grammarFromScriptElement,\n  grammarsFromScriptElements: grammarsFromScriptElements,\n  makeRecipe: makeRecipe,\n  ohmGrammar: null,  // Initialized below, after Grammar.BuiltInRules.\n  pexprs: pexprs,\n  util: util,\n  extras: require('../extras')\n};\n\n// Stuff for testing, etc.\nmodule.exports._buildGrammar = buildGrammar;\nmodule.exports._setDocumentInterfaceForTesting = function(doc) { documentInterface = doc; };\n\n// Late initialization for stuff that is bootstrapped.\n\nGrammar.BuiltInRules = require('../dist/built-in-rules');\n\nvar Semantics = require('./Semantics');\nvar operationsAndAttributesGrammar = require('../dist/operations-and-attributes');\nSemantics.initBuiltInSemantics(Grammar.BuiltInRules);\nSemantics.initPrototypeParser(operationsAndAttributesGrammar);  // requires BuiltInSemantics\n\nmodule.exports.ohmGrammar = ohmGrammar = require('../dist/ohm-grammar');\nGrammar.initApplicationParser(ohmGrammar, buildGrammar);\n\n\n\n/** WEBPACK FOOTER **\n ** src/main.js\n **/","'use strict';\n\nvar inherits = require('inherits');\n\nvar common = require('./common');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction Node(grammar, ctorName, children, source) {\n  this.grammar = grammar;\n  this.ctorName = ctorName;\n  this.children = children;\n  this.source = source;\n}\n\nNode.prototype.numChildren = function() {\n  return this.children.length;\n};\n\nNode.prototype.childAt = function(idx) {\n  return this.children[idx];\n};\n\nNode.prototype.indexOfChild = function(arg) {\n  return this.children.indexOf(arg);\n};\n\nNode.prototype.hasChildren = function() {\n  return this.children.length > 0;\n};\n\nNode.prototype.hasNoChildren = function() {\n  return !this.hasChildren();\n};\n\nNode.prototype.onlyChild = function() {\n  if (this.children.length !== 1) {\n    throw new Error(\n        'cannot get only child of a node of type ' + this.ctorName +\n        ' (it has ' + this.numChildren() + ' children)');\n  } else {\n    return this.firstChild();\n  }\n};\n\nNode.prototype.firstChild = function() {\n  if (this.hasNoChildren()) {\n    throw new Error(\n        'cannot get first child of a ' + this.ctorName + ' node, which has no children');\n  } else {\n    return this.childAt(0);\n  }\n};\n\nNode.prototype.lastChild = function() {\n  if (this.hasNoChildren()) {\n    throw new Error(\n        'cannot get last child of a ' + this.ctorName + ' node, which has no children');\n  } else {\n    return this.childAt(this.numChildren() - 1);\n  }\n};\n\nNode.prototype.childBefore = function(child) {\n  var childIdx = this.indexOfChild(child);\n  if (childIdx < 0) {\n    throw new Error('Node.childBefore() called w/ an argument that is not a child');\n  } else if (childIdx === 0) {\n    throw new Error('cannot get child before first child');\n  } else {\n    return this.childAt(childIdx - 1);\n  }\n};\n\nNode.prototype.childAfter = function(child) {\n  var childIdx = this.indexOfChild(child);\n  if (childIdx < 0) {\n    throw new Error('Node.childAfter() called w/ an argument that is not a child');\n  } else if (childIdx === this.numChildren() - 1) {\n    throw new Error('cannot get child after last child');\n  } else {\n    return this.childAt(childIdx + 1);\n  }\n};\n\nNode.prototype.isTerminal = function() {\n  return false;\n};\n\nNode.prototype.isNonterminal = function() {\n  return false;\n};\n\nNode.prototype.isIteration = function() {\n  return false;\n};\n\nNode.prototype.isOptional = function() {\n  return false;\n};\n\nNode.prototype.toJSON = function() {\n  var r = {};\n  r[this.ctorName] = this.children;\n  return r;\n};\n\n// Terminals\n\nfunction TerminalNode(grammar, value, source) {\n  Node.call(this, grammar, '_terminal', [], source);\n  this.primitiveValue = value;\n}\ninherits(TerminalNode, Node);\n\nTerminalNode.prototype.isTerminal = function() {\n  return true;\n};\n\n// Nonterminals\n\nfunction NonterminalNode(grammar, ruleName, children, source) {\n  Node.call(this, grammar, ruleName, children, source);\n}\ninherits(NonterminalNode, Node);\n\nNonterminalNode.prototype.isNonterminal = function() {\n  return true;\n};\n\nNonterminalNode.prototype.isLexical = function() {\n  return common.isLexical(this.ctorName);\n};\n\nNonterminalNode.prototype.isSyntactic = function() {\n  return common.isSyntactic(this.ctorName);\n};\n\n// Iterations\n\nfunction IterationNode(grammar, children, source, optional) {\n  Node.call(this, grammar, '_iter', children, source);\n  this.optional = optional;\n}\ninherits(IterationNode, Node);\n\nIterationNode.prototype.isIteration = function() {\n  return true;\n};\n\nIterationNode.prototype.isOptional = function() {\n  return this.optional;\n};\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nmodule.exports = {\n  Node: Node,\n  TerminalNode: TerminalNode,\n  NonterminalNode: NonterminalNode,\n  IterationNode: IterationNode\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/nodes.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Return true if we should skip spaces preceding this expression in a syntactic context.\n*/\npexprs.PExpr.prototype.allowsSkippingPrecedingSpace = common.abstract(\n  'allowsSkippingPrecedingSpace'\n);\n\n/*\n  Generally, these are all first-order expressions that operate on strings and (with the\n  exception of Apply) directly read from the input stream.\n*/\npexprs.any.allowsSkippingPrecedingSpace =\npexprs.end.allowsSkippingPrecedingSpace =\npexprs.Apply.prototype.allowsSkippingPrecedingSpace =\npexprs.Terminal.prototype.allowsSkippingPrecedingSpace =\npexprs.Range.prototype.allowsSkippingPrecedingSpace =\npexprs.UnicodeChar.prototype.allowsSkippingPrecedingSpace = function() {\n  return true;\n};\n\n/*\n  Higher-order expressions that don't directly consume input, and expressions that\n  don't operate on string input streams (e.g. Obj and Arr).\n*/\npexprs.Alt.prototype.allowsSkippingPrecedingSpace =\npexprs.Iter.prototype.allowsSkippingPrecedingSpace =\npexprs.Lex.prototype.allowsSkippingPrecedingSpace =\npexprs.Lookahead.prototype.allowsSkippingPrecedingSpace =\npexprs.Not.prototype.allowsSkippingPrecedingSpace =\npexprs.Param.prototype.allowsSkippingPrecedingSpace =\npexprs.Seq.prototype.allowsSkippingPrecedingSpace = function() {\n  return false;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-allowsSkippingPrecedingSpace.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nvar lexifyCount;\n\npexprs.PExpr.prototype.assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount = 0;\n  this._assertAllApplicationsAreValid(ruleName, grammar);\n};\n\npexprs.PExpr.prototype._assertAllApplicationsAreValid = common.abstract(\n  '_assertAllApplicationsAreValid'\n);\n\npexprs.any._assertAllApplicationsAreValid =\npexprs.end._assertAllApplicationsAreValid =\npexprs.Terminal.prototype._assertAllApplicationsAreValid =\npexprs.Range.prototype._assertAllApplicationsAreValid =\npexprs.Param.prototype._assertAllApplicationsAreValid =\npexprs.UnicodeChar.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  // no-op\n};\n\npexprs.Lex.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount++;\n  this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n  lexifyCount--;\n};\n\npexprs.Alt.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (var idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\npexprs.Seq.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (var idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\npexprs.Iter.prototype._assertAllApplicationsAreValid =\npexprs.Not.prototype._assertAllApplicationsAreValid =\npexprs.Lookahead.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n};\n\npexprs.Apply.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  var ruleInfo = grammar.rules[this.ruleName];\n\n  // Make sure that the rule exists...\n  if (!ruleInfo) {\n    throw errors.undeclaredRule(this.ruleName, grammar.name, this.source);\n  }\n\n  // ...and that this application is allowed\n  if (common.isSyntactic(this.ruleName) && (!common.isSyntactic(ruleName) || lexifyCount > 0)) {\n    throw errors.applicationOfSyntacticRuleFromLexicalContext(this.ruleName, this);\n  }\n\n  // ...and that this application has the correct number of arguments\n  var actual = this.args.length;\n  var expected = ruleInfo.formals.length;\n  if (actual !== expected) {\n    throw errors.wrongNumberOfArguments(this.ruleName, expected, actual, this);\n  }\n\n  // ...and that all of the argument expressions only have valid applications and have arity 1.\n  var self = this;\n  this.args.forEach(function(arg) {\n    arg._assertAllApplicationsAreValid(ruleName, grammar);\n    if (arg.getArity() !== 1) {\n      throw errors.invalidParameter(self.ruleName, arg);\n    }\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-assertAllApplicationsAreValid.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.assertChoicesHaveUniformArity = common.abstract(\n  'assertChoicesHaveUniformArity'\n);\n\npexprs.any.assertChoicesHaveUniformArity =\npexprs.end.assertChoicesHaveUniformArity =\npexprs.Terminal.prototype.assertChoicesHaveUniformArity =\npexprs.Range.prototype.assertChoicesHaveUniformArity =\npexprs.Param.prototype.assertChoicesHaveUniformArity =\npexprs.Lex.prototype.assertChoicesHaveUniformArity =\npexprs.UnicodeChar.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // no-op\n};\n\npexprs.Alt.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  if (this.terms.length === 0) {\n    return;\n  }\n  var arity = this.terms[0].getArity();\n  for (var idx = 0; idx < this.terms.length; idx++) {\n    var term = this.terms[idx];\n    term.assertChoicesHaveUniformArity();\n    var otherArity = term.getArity();\n    if (arity !== otherArity) {\n      throw errors.inconsistentArity(ruleName, arity, otherArity, term);\n    }\n  }\n};\n\npexprs.Extend.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // Extend is a special case of Alt that's guaranteed to have exactly two\n  // cases: [extensions, origBody].\n  var actualArity = this.terms[0].getArity();\n  var expectedArity = this.terms[1].getArity();\n  if (actualArity !== expectedArity) {\n    throw errors.inconsistentArity(ruleName, expectedArity, actualArity, this.terms[0]);\n  }\n};\n\npexprs.Seq.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  for (var idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertChoicesHaveUniformArity(ruleName);\n  }\n};\n\npexprs.Iter.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\npexprs.Not.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // no-op (not required b/c the nested expr doesn't show up in the CST)\n};\n\npexprs.Lookahead.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\npexprs.Apply.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // The arities of the parameter expressions is required to be 1 by\n  // `assertAllApplicationsAreValid()`.\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-assertChoicesHaveUniformArity.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar errors = require('./errors');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.assertIteratedExprsAreNotNullable = common.abstract(\n  'assertIteratedExprsAreNotNullable'\n);\n\npexprs.any.assertIteratedExprsAreNotNullable =\npexprs.end.assertIteratedExprsAreNotNullable =\npexprs.Terminal.prototype.assertIteratedExprsAreNotNullable =\npexprs.Range.prototype.assertIteratedExprsAreNotNullable =\npexprs.Param.prototype.assertIteratedExprsAreNotNullable =\npexprs.UnicodeChar.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  // no-op\n};\n\npexprs.Alt.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  for (var idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx].assertIteratedExprsAreNotNullable(grammar, ruleName);\n  }\n};\n\npexprs.Seq.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  for (var idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertIteratedExprsAreNotNullable(grammar, ruleName);\n  }\n};\n\npexprs.Iter.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  // Note: this is the implementation of this method for `Star` and `Plus` expressions.\n  // It is overridden for `Opt` below.\n  this.expr.assertIteratedExprsAreNotNullable(grammar, ruleName);\n  if (this.expr.isNullable(grammar)) {\n    throw errors.kleeneExprHasNullableOperand(this, ruleName);\n  }\n};\n\npexprs.Opt.prototype.assertIteratedExprsAreNotNullable =\npexprs.Not.prototype.assertIteratedExprsAreNotNullable =\npexprs.Lookahead.prototype.assertIteratedExprsAreNotNullable =\npexprs.Lex.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  this.expr.assertIteratedExprsAreNotNullable(grammar, ruleName);\n};\n\npexprs.Apply.prototype.assertIteratedExprsAreNotNullable = function(grammar, ruleName) {\n  this.args.forEach(function(arg) {\n    arg.assertIteratedExprsAreNotNullable(grammar, ruleName);\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-assertIteratedExprsAreNotNullable.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar nodes = require('./nodes');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.check = common.abstract('check');\n\npexprs.any.check = function(grammar, vals) {\n  return vals.length >= 1;\n};\n\npexprs.end.check = function(grammar, vals) {\n  return vals[0] instanceof nodes.Node &&\n         vals[0].isTerminal() &&\n         vals[0].primitiveValue === undefined;\n};\n\npexprs.Terminal.prototype.check = function(grammar, vals) {\n  return vals[0] instanceof nodes.Node &&\n         vals[0].isTerminal() &&\n         vals[0].primitiveValue === this.obj;\n};\n\npexprs.Range.prototype.check = function(grammar, vals) {\n  return vals[0] instanceof nodes.Node &&\n         vals[0].isTerminal() &&\n         typeof vals[0].primitiveValue === typeof this.from;\n};\n\npexprs.Param.prototype.check = function(grammar, vals) {\n  return vals.length >= 1;\n};\n\npexprs.Alt.prototype.check = function(grammar, vals) {\n  for (var i = 0; i < this.terms.length; i++) {\n    var term = this.terms[i];\n    if (term.check(grammar, vals)) {\n      return true;\n    }\n  }\n  return false;\n};\n\npexprs.Seq.prototype.check = function(grammar, vals) {\n  var pos = 0;\n  for (var i = 0; i < this.factors.length; i++) {\n    var factor = this.factors[i];\n    if (factor.check(grammar, vals.slice(pos))) {\n      pos += factor.getArity();\n    } else {\n      return false;\n    }\n  }\n  return true;\n};\n\npexprs.Iter.prototype.check = function(grammar, vals) {\n  var arity = this.getArity();\n  var columns = vals.slice(0, arity);\n  if (columns.length !== arity) {\n    return false;\n  }\n  var rowCount = columns[0].length;\n  var i;\n  for (i = 1; i < arity; i++) {\n    if (columns[i].length !== rowCount) {\n      return false;\n    }\n  }\n\n  for (i = 0; i < rowCount; i++) {\n    var row = [];\n    for (var j = 0; j < arity; j++) {\n      row.push(columns[j][i]);\n    }\n    if (!this.expr.check(grammar, row)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\npexprs.Not.prototype.check = function(grammar, vals) {\n  return true;\n};\n\npexprs.Lookahead.prototype.check =\npexprs.Lex.prototype.check = function(grammar, vals) {\n  return this.expr.check(grammar, vals);\n};\n\npexprs.Apply.prototype.check = function(grammar, vals) {\n  if (!(vals[0] instanceof nodes.Node &&\n        vals[0].grammar === grammar &&\n        vals[0].ctorName === this.ruleName)) {\n    return false;\n  }\n\n  // TODO: think about *not* doing the following checks, i.e., trusting that the rule\n  // was correctly constructed.\n  var ruleNode = vals[0];\n  var body = grammar.rules[this.ruleName].body;\n  return body.check(grammar, ruleNode.children) && ruleNode.numChildren() === body.getArity();\n};\n\npexprs.UnicodeChar.prototype.check = function(grammar, vals) {\n  return vals[0] instanceof nodes.Node &&\n         vals[0].isTerminal() &&\n         typeof vals[0].primitiveValue === 'string';\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-check.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Trace = require('./Trace');\nvar common = require('./common');\nvar nodes = require('./nodes');\nvar pexprs = require('./pexprs');\n\nvar TerminalNode = nodes.TerminalNode;\nvar NonterminalNode = nodes.NonterminalNode;\nvar IterationNode = nodes.IterationNode;\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Evaluate the expression and return `true` if it succeeds, `false` otherwise. This method should\n  only be called directly by `State.prototype.eval(expr)`, which also updates the data structures\n  that are used for tracing. (Making those updates in a method of `State` enables the trace-specific\n  data structures to be \"secrets\" of that class, which is good for modularity.)\n\n  The contract of this method is as follows:\n  * When the return value is `true`,\n    - the state object will have `expr.getArity()` more bindings than it did before the call.\n  * When the return value is `false`,\n    - the state object may have more bindings than it did before the call, and\n    - its input stream's position may be anywhere.\n\n  Note that `State.prototype.eval(expr)`, unlike this method, guarantees that neither the state\n  object's bindings nor its input stream's position will change if the expression fails to match.\n*/\npexprs.PExpr.prototype.eval = common.abstract('eval');  // function(state) { ... }\n\npexprs.any.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var ch = inputStream.next();\n  if (ch) {\n    var source = inputStream.interval(origPos);\n    state.bindings.push(new TerminalNode(state.grammar, ch, source));\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs.end.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  if (inputStream.atEnd()) {\n    var source = inputStream.interval(inputStream.pos);\n    state.bindings.push(new TerminalNode(state.grammar, undefined, source));\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs.Terminal.prototype.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  if (!inputStream.matchString(this.obj)) {\n    state.processFailure(origPos, this);\n    return false;\n  } else {\n    var source = inputStream.interval(origPos);\n    var primitiveValue = this.obj;\n    state.bindings.push(new TerminalNode(state.grammar, primitiveValue, source));\n    return true;\n  }\n};\n\npexprs.Range.prototype.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var ch = inputStream.next();\n  if (ch && this.from <= ch && ch <= this.to) {\n    var source = inputStream.interval(origPos);\n    state.bindings.push(new TerminalNode(state.grammar, ch, source));\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\npexprs.Param.prototype.eval = function(state) {\n  return state.eval(state.currentApplication().args[this.index]);\n};\n\npexprs.Lex.prototype.eval = function(state) {\n  state.enterLexifiedContext();\n  var ans = state.eval(this.expr);\n  state.exitLexifiedContext();\n  return ans;\n};\n\npexprs.Alt.prototype.eval = function(state) {\n  for (var idx = 0; idx < this.terms.length; idx++) {\n    if (state.eval(this.terms[idx])) {\n      return true;\n    }\n  }\n  return false;\n};\n\npexprs.Seq.prototype.eval = function(state) {\n  for (var idx = 0; idx < this.factors.length; idx++) {\n    var factor = this.factors[idx];\n    if (!state.eval(factor)) {\n      return false;\n    }\n  }\n  return true;\n};\n\npexprs.Iter.prototype.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var arity = this.getArity();\n  var cols = [];\n  while (cols.length < arity) {\n    cols.push([]);\n  }\n  var numMatches = 0;\n  var idx;\n  while (numMatches < this.maxNumMatches && state.eval(this.expr)) {\n    numMatches++;\n    var row = state.bindings.splice(state.bindings.length - arity, arity);\n    for (idx = 0; idx < row.length; idx++) {\n      cols[idx].push(row[idx]);\n    }\n  }\n  if (numMatches < this.minNumMatches) {\n    return false;\n  }\n  var source;\n  if (numMatches === 0) {\n    source = inputStream.interval(origPos, origPos);\n  } else {\n    var firstCol = cols[0];\n    var lastCol = cols[cols.length - 1];\n    source = inputStream.interval(\n        firstCol[0].source.startIdx,\n        lastCol[lastCol.length - 1].source.endIdx);\n  }\n  for (idx = 0; idx < cols.length; idx++) {\n    state.bindings.push(new IterationNode(state.grammar, cols[idx], source,\n      this instanceof pexprs.Opt));\n  }\n  return true;\n};\n\npexprs.Not.prototype.eval = function(state) {\n  /*\n    TODO:\n    - Right now we're just throwing away all of the failures that happen inside a `not`, and\n      recording `this` as a failed expression.\n    - Double negation should be equivalent to lookahead, but that's not the case right now wrt\n      failures. E.g., ~~'foo' produces a failure for ~~'foo', but maybe it should produce\n      a failure for 'foo' instead.\n  */\n\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var failuresInfo = state.getFailuresInfo();\n\n  var ans = state.eval(this.expr);\n\n  state.restoreFailuresInfo(failuresInfo);\n  if (ans) {\n    state.processFailure(origPos, this);\n    return false;\n  }\n\n  inputStream.pos = origPos;\n  return true;\n};\n\npexprs.Lookahead.prototype.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  if (state.eval(this.expr)) {\n    inputStream.pos = origPos;\n    return true;\n  } else {\n    return false;\n  }\n};\n\npexprs.Apply.prototype.eval = function(state) {\n  var caller = state.currentApplication();\n  var actuals = caller ? caller.args : [];\n  var app = this.substituteParams(actuals);\n\n  var posInfo = state.getCurrentPosInfo();\n  if (posInfo.isActive(app)) {\n    // This rule is already active at this position, i.e., it is left-recursive.\n    return app.handleCycle(state);\n  }\n\n  var memoKey = app.toMemoKey();\n  var memoRec = posInfo.memo[memoKey];\n  return memoRec && posInfo.shouldUseMemoizedResult(memoRec) ?\n      state.useMemoizedResult(memoRec) :\n      app.reallyEval(state);\n};\n\npexprs.Apply.prototype.handleCycle = function(state) {\n  var posInfo = state.getCurrentPosInfo();\n  var currentLeftRecursion = posInfo.currentLeftRecursion;\n  var memoKey = this.toMemoKey();\n  var memoRec = posInfo.memo[memoKey];\n\n  if (currentLeftRecursion && currentLeftRecursion.headApplication.toMemoKey() === memoKey) {\n    // We already know about this left recursion, but it's possible there are \"involved\n    // applications\" that we don't already know about, so...\n    memoRec.updateInvolvedApplicationMemoKeys();\n  } else if (!memoRec) {\n    // New left recursion detected! Memoize a failure to try to get a seed parse.\n    memoRec = posInfo.memo[memoKey] = {pos: -1, value: false};\n    posInfo.startLeftRecursion(this, memoRec);\n  }\n  return state.useMemoizedResult(memoRec);\n};\n\npexprs.Apply.prototype.reallyEval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var origPosInfo = state.getCurrentPosInfo();\n  var ruleInfo = state.grammar.rules[this.ruleName];\n  var body = ruleInfo.body;\n  var description = ruleInfo.description;\n\n  origPosInfo.enter(this);\n\n  if (description) {\n    var origFailuresInfo = state.getFailuresInfo();\n  }\n\n  var value = this.evalOnce(body, state);\n  var currentLR = origPosInfo.currentLeftRecursion;\n  var memoKey = this.toMemoKey();\n  var isHeadOfLeftRecursion = !!currentLR && currentLR.headApplication.toMemoKey() === memoKey;\n  var memoized = true;\n\n  if (isHeadOfLeftRecursion) {\n    value = this.growSeedResult(body, state, origPos, currentLR, value);\n    origPosInfo.endLeftRecursion();\n  } else if (currentLR && currentLR.isInvolved(memoKey)) {\n    // Don't memoize the result\n    memoized = false;\n  } else {\n    origPosInfo.memo[memoKey] = {\n      pos: inputStream.pos,\n      value: value,\n      failuresAtRightmostPosition: state.cloneRightmostFailures()\n    };\n  }\n\n  if (description) {\n    state.restoreFailuresInfo(origFailuresInfo);\n    if (!value) {\n      state.processFailure(origPos, this);\n    }\n\n    if (memoized) {\n      origPosInfo.memo[memoKey].failuresAtRightmostPosition = state.cloneRightmostFailures();\n    }\n  }\n\n  // Record trace information in the memo table, so that it is available if the memoized result\n  // is used later.\n  if (state.isTracing() && origPosInfo.memo[memoKey]) {\n    var succeeded = !!value;\n    var entry = state.getTraceEntry(origPos, this, succeeded, succeeded ? [value] : []);\n    if (isHeadOfLeftRecursion) {\n      common.assert(entry.terminatingLREntry != null || !succeeded);\n      entry.isHeadOfLeftRecursion = true;\n    }\n    origPosInfo.memo[memoKey].traceEntry = entry;\n  }\n\n  origPosInfo.exit();\n\n  if (value) {\n    state.bindings.push(value);\n    return true;\n  } else {\n    return false;\n  }\n};\n\npexprs.Apply.prototype.evalOnce = function(expr, state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n\n  if (state.eval(expr)) {\n    var arity = expr.getArity();\n    var bindings = state.bindings.splice(state.bindings.length - arity, arity);\n    var ans =\n        new NonterminalNode(state.grammar, this.ruleName, bindings, inputStream.interval(origPos));\n    return ans;\n  } else {\n    return false;\n  }\n};\n\npexprs.Apply.prototype.growSeedResult = function(body, state, origPos, lrMemoRec, newValue) {\n  if (!newValue) {\n    return false;\n  }\n\n  var inputStream = state.inputStream;\n\n  while (true) {\n    lrMemoRec.pos = inputStream.pos;\n    lrMemoRec.value = newValue;\n    lrMemoRec.failuresAtRightmostPosition = state.cloneRightmostFailures();\n\n    if (state.isTracing()) {\n      // Before evaluating the body again, add a trace node for this application to the memo entry.\n      // Its only child is a copy of the trace node from `newValue`, which will always be the last\n      // element in `state.trace`.\n      var seedTrace = state.trace[state.trace.length - 1];\n      lrMemoRec.traceEntry = new Trace(\n          state.inputStream, origPos, this, true, [newValue], [seedTrace.clone()]);\n    }\n    inputStream.pos = origPos;\n    newValue = this.evalOnce(body, state);\n    if (inputStream.pos <= lrMemoRec.pos) {\n      break;\n    }\n    if (state.isTracing()) {\n      state.trace.splice(-2, 1);  // Drop the trace for the old seed.\n    }\n  }\n  if (state.isTracing()) {\n    // The last entry is for an unused result -- pop it and save it in the \"real\" entry.\n    lrMemoRec.traceEntry.recordLRTermination(state.trace.pop(), newValue);\n  }\n  inputStream.pos = lrMemoRec.pos;\n  return lrMemoRec.value;\n};\n\npexprs.UnicodeChar.prototype.eval = function(state) {\n  var inputStream = state.inputStream;\n  var origPos = inputStream.pos;\n  var ch = inputStream.next();\n  if (ch && this.pattern.test(ch)) {\n    var source = inputStream.interval(origPos);\n    state.bindings.push(new TerminalNode(state.grammar, ch, source));\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-eval.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.getArity = common.abstract('getArity');\n\npexprs.any.getArity =\npexprs.end.getArity =\npexprs.Terminal.prototype.getArity =\npexprs.Range.prototype.getArity =\npexprs.Param.prototype.getArity =\npexprs.Apply.prototype.getArity =\npexprs.UnicodeChar.prototype.getArity = function() {\n  return 1;\n};\n\npexprs.Alt.prototype.getArity = function() {\n  // This is ok b/c all terms must have the same arity -- this property is\n  // checked by the Grammar constructor.\n  return this.terms.length === 0 ? 0 : this.terms[0].getArity();\n};\n\npexprs.Seq.prototype.getArity = function() {\n  var arity = 0;\n  for (var idx = 0; idx < this.factors.length; idx++) {\n    arity += this.factors[idx].getArity();\n  }\n  return arity;\n};\n\npexprs.Iter.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\npexprs.Not.prototype.getArity = function() {\n  return 0;\n};\n\npexprs.Lookahead.prototype.getArity =\npexprs.Lex.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-getArity.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Called at grammar creation time to rewrite a rule body, replacing each reference to a formal\n  parameter with a `Param` node. Returns a PExpr -- either a new one, or the original one if\n  it was modified in place.\n*/\npexprs.PExpr.prototype.introduceParams = common.abstract('introduceParams');\n\npexprs.any.introduceParams =\npexprs.end.introduceParams =\npexprs.Terminal.prototype.introduceParams =\npexprs.Range.prototype.introduceParams =\npexprs.Param.prototype.introduceParams =\npexprs.UnicodeChar.prototype.introduceParams = function(formals) {\n  return this;\n};\n\npexprs.Alt.prototype.introduceParams = function(formals) {\n  this.terms.forEach(function(term, idx, terms) {\n    terms[idx] = term.introduceParams(formals);\n  });\n  return this;\n};\n\npexprs.Seq.prototype.introduceParams = function(formals) {\n  this.factors.forEach(function(factor, idx, factors) {\n    factors[idx] = factor.introduceParams(formals);\n  });\n  return this;\n};\n\npexprs.Iter.prototype.introduceParams =\npexprs.Not.prototype.introduceParams =\npexprs.Lookahead.prototype.introduceParams =\npexprs.Lex.prototype.introduceParams = function(formals) {\n  this.expr = this.expr.introduceParams(formals);\n  return this;\n};\n\npexprs.Apply.prototype.introduceParams = function(formals) {\n  var index = formals.indexOf(this.ruleName);\n  if (index >= 0) {\n    if (this.args.length > 0) {\n      // TODO: Should this be supported? See issue #64.\n      throw new Error('Parameterized rules cannot be passed as arguments to another rule.');\n    }\n    return new pexprs.Param(index);\n  } else {\n    this.args.forEach(function(arg, idx, args) {\n      args[idx] = arg.introduceParams(formals);\n    });\n    return this;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-introduceParams.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns `true` if this parsing expression may accept without consuming any input.\npexprs.PExpr.prototype.isNullable = function(grammar) {\n  return this._isNullable(grammar, Object.create(null));\n};\n\npexprs.PExpr.prototype._isNullable = common.abstract('_isNullable');\n\npexprs.any._isNullable =\npexprs.Range.prototype._isNullable =\npexprs.Param.prototype._isNullable =\npexprs.Plus.prototype._isNullable =\npexprs.UnicodeChar.prototype._isNullable = function(grammar, memo) {\n  return false;\n};\n\npexprs.end._isNullable = function(grammar, memo) {\n  return true;\n};\n\npexprs.Terminal.prototype._isNullable = function(grammar, memo) {\n  if (typeof this.obj === 'string') {\n    // This is an over-simplification: it's only correct if the input is a string. If it's an array\n    // or an object, then the empty string parsing expression is not nullable.\n    return this.obj === '';\n  } else {\n    return false;\n  }\n};\n\npexprs.Alt.prototype._isNullable = function(grammar, memo) {\n  return this.terms.length === 0 ||\n      this.terms.some(function(term) { return term._isNullable(grammar, memo); });\n};\n\npexprs.Seq.prototype._isNullable = function(grammar, memo) {\n  return this.factors.every(function(factor) { return factor._isNullable(grammar, memo); });\n};\n\npexprs.Star.prototype._isNullable =\npexprs.Opt.prototype._isNullable =\npexprs.Not.prototype._isNullable =\npexprs.Lookahead.prototype._isNullable = function(grammar, memo) {\n  return true;\n};\n\npexprs.Lex.prototype._isNullable = function(grammar, memo) {\n  return this.expr._isNullable(grammar, memo);\n};\n\npexprs.Apply.prototype._isNullable = function(grammar, memo) {\n  var key = this.toMemoKey();\n  if (!Object.prototype.hasOwnProperty.call(memo, key)) {\n    var body = grammar.rules[this.ruleName].body;\n    var inlined = body.substituteParams(this.args);\n    memo[key] = false;  // Prevent infinite recursion for recursive rules.\n    memo[key] = inlined._isNullable(grammar, memo);\n  }\n  return memo[key];\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-isNullable.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.generateExample = common.abstract;\n\npexprs.any.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  return {example: String.fromCharCode(Math.floor(Math.random() * 255))};\n};\n\nfunction categorizeExamples(examples) {\n  var examplesNeeded = examples.filter(function(example) {\n                                  return example.hasOwnProperty('examplesNeeded');\n                                })\n                               .map(function(example) { return example.examplesNeeded; });\n  examplesNeeded = [].concat.apply([], examplesNeeded)\n                            .filter(function(value, index, arr) {\n                              return arr.indexOf(value) === index;\n                            });\n\n  var successfulExamples = examples.filter(function(example) {\n                                      return example.hasOwnProperty('example');\n                                    })\n                                   .map(function(item) { return item.example; });\n  // could check examples here, here's an example that's invalid\n\n  var needHelp = examples.some(function(item) { return item.needHelp; });\n\n  return {\n    examplesNeeded: examplesNeeded,\n    successfulExamples: successfulExamples,\n    needHelp: needHelp\n  };\n}\n\npexprs.Alt.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  // items -> termExamples\n  var termExamples = this.terms.map(function(term) {\n    return term.generateExample(grammar, examples, inSyntacticContext, actuals);\n  });\n\n  var categorizedExamples = categorizeExamples(termExamples);\n\n  var examplesNeeded = categorizedExamples.examplesNeeded;\n  var successfulExamples = categorizedExamples.successfulExamples;\n  var needHelp = categorizedExamples.needHelp;\n\n  var returnObj = {};\n\n  // Alt can contain both an example and a request for examples\n  if (successfulExamples.length > 0) {\n    var i = Math.floor(Math.random() * successfulExamples.length);\n    returnObj.example = successfulExamples[i];\n  }\n  if (examplesNeeded.length > 0) {\n    returnObj.examplesNeeded = examplesNeeded;\n  }\n  returnObj.needHelp = needHelp;\n\n  return returnObj;\n};\n\n// safe thing to do might just be to omit whitespace period?\n// for lexical rules, should we request their components?\n\npexprs.Seq.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  var factorExamples = this.factors.map(function(factor) {\n    return factor.generateExample(grammar, examples, inSyntacticContext, actuals);\n  });\n  var categorizedExamples = categorizeExamples(factorExamples);\n\n  var examplesNeeded = categorizedExamples.examplesNeeded;\n  var successfulExamples = categorizedExamples.successfulExamples;\n  var needHelp = categorizedExamples.needHelp;\n\n  var returnObj = {};\n\n  // in a Seq, all pieces must succeed in order to have a successful example\n  if (examplesNeeded.length > 0 || needHelp) {\n    returnObj.examplesNeeded = examplesNeeded;\n    returnObj.needHelp = needHelp;\n  } else {\n    returnObj.example = successfulExamples.join(inSyntacticContext ? ' ' : '');\n  }\n\n  return returnObj;\n};\n\npexprs.Apply.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  var returnObj = {};\n\n  var ruleName = this.substituteParams(actuals).toString();\n\n  if (!examples.hasOwnProperty(ruleName)) {\n    returnObj.examplesNeeded = [ruleName];\n  } else {\n    var relevantExamples = examples[ruleName];\n    var i = Math.floor(Math.random() * relevantExamples.length);\n    returnObj.example = relevantExamples[i];\n  }\n\n  return returnObj;\n};\n\n// assumes that terminal's object is always a string\npexprs.Terminal.prototype.generateExample = function(grammar, examples, inSyntacticContext) {\n  return {example: this.obj};\n};\n\npexprs.Range.prototype.generateExample = function(grammar, examples, inSyntacticContext) {\n  var rangeSize = this.to.charCodeAt(0) - this.from.charCodeAt(0);\n  return {example: String.fromCharCode(\n    this.from.charCodeAt(0) + Math.floor(rangeSize * Math.random())\n  )};\n};\n\n// these all fail for now\npexprs.Not.prototype.generateExample = function(grammar, examples, inSyntacticContext) {\n  return {example: ''};\n};\n\npexprs.Lookahead.prototype.generateExample = function(grammar, examples, inSyntacticContext) {\n  return {example: ''};\n};\n\npexprs.Param.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  return actuals[this.index].generateExample(grammar, examples, inSyntacticContext, actuals);\n};\n\nfunction repeat(n, fn) {\n  if (n < 0) { return; }\n  while (n > 0) {\n    fn(n);\n    n--;\n  }\n}\n\nvar generateNExamples = function(that, grammar, examples, inSyntacticContext, actuals, numTimes) {\n  var items = [];\n  repeat(numTimes, function() {\n    items.push(that.expr.generateExample(grammar, examples, inSyntacticContext, actuals));\n  });\n\n  var categorizedExamples = categorizeExamples(items);\n\n  var examplesNeeded = categorizedExamples.examplesNeeded;\n  var successfulExamples = categorizedExamples.successfulExamples;\n\n  var returnObj = {};\n\n  // it's always either one or the other\n  if (successfulExamples.length > 0) {\n    returnObj.example = successfulExamples.join(inSyntacticContext ? ' ' : '');\n  }\n  if (examplesNeeded.length > 0) {\n    returnObj.examplesNeeded = examplesNeeded;\n  }\n\n  return returnObj;\n};\n\npexprs.Star.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  return generateNExamples(this, grammar, examples, inSyntacticContext, actuals,\n                           Math.floor(Math.random() * 4));\n};\n\npexprs.Plus.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  return generateNExamples(this, grammar, examples, inSyntacticContext, actuals,\n                           Math.floor(Math.random() * 3 + 1));\n};\n\npexprs.Opt.prototype.generateExample = function(grammar, examples, inSyntacticContext, actuals) {\n  return generateNExamples(this, grammar, examples, inSyntacticContext, actuals,\n                           Math.floor(Math.random() * 2));\n};\n\npexprs.UnicodeChar.prototype.generateExample = function(\n  grammar, examples, inSyntacticContext, actuals\n) {\n  var char;\n  switch (this.category){\n    case 'Lu': char = 'Á'; break;\n    case 'Ll': char = 'ŏ'; break;\n    case 'Lt': char = 'ǅ'; break;\n    case 'Lm': char = 'ˮ'; break;\n    case 'Lo': char = 'ƻ'; break;\n\n    case 'Nl': char = 'ↂ'; break;\n    case 'Nd': char = '½'; break;\n\n    case 'Mn': char = '\\u0487'; break;\n    case 'Mc': char = 'ि'; break;\n\n    case 'Pc': char = '⁀'; break;\n\n    case 'Zs': char = '\\u2001'; break;\n\n    case 'L': char = 'Á'; break;\n    case 'Ltmo': char = 'ǅ'; break;\n  }\n  return {example: char}; // 💩\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-madlibs.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction getMetaInfo(expr, grammarInterval) {\n  var metaInfo = {};\n  if (expr.source && grammarInterval) {\n    var adjusted = expr.source.relativeTo(grammarInterval);\n    metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n  }\n  return metaInfo;\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.outputRecipe = common.abstract('outputRecipe');\n\npexprs.any.outputRecipe = function(formals, grammarInterval) {\n  return ['any', getMetaInfo(this, grammarInterval)];\n};\n\npexprs.end.outputRecipe = function(formals, grammarInterval) {\n  return ['end', getMetaInfo(this, grammarInterval)];\n};\n\npexprs.Terminal.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'terminal',\n    getMetaInfo(this, grammarInterval),\n    this.obj\n  ];\n};\n\npexprs.Range.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'range',\n    getMetaInfo(this, grammarInterval),\n    this.from,\n    this.to\n  ];\n};\n\npexprs.Param.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'param',\n    getMetaInfo(this, grammarInterval),\n    this.index\n  ];\n};\n\npexprs.Alt.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'alt',\n    getMetaInfo(this, grammarInterval)\n  ].concat(this.terms.map(function(term) {\n    return term.outputRecipe(formals, grammarInterval);\n  }));\n};\n\npexprs.Extend.prototype.outputRecipe = function(formals, grammarInterval) {\n  var extension = this.terms[0]; // [extension, orginal]\n  return extension.outputRecipe(formals, grammarInterval);\n};\n\npexprs.Seq.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'seq',\n    getMetaInfo(this, grammarInterval)\n  ].concat(this.factors.map(function(factor) {\n    return factor.outputRecipe(formals, grammarInterval);\n  }));\n};\n\npexprs.Star.prototype.outputRecipe =\npexprs.Plus.prototype.outputRecipe =\npexprs.Opt.prototype.outputRecipe =\npexprs.Not.prototype.outputRecipe =\npexprs.Lookahead.prototype.outputRecipe =\npexprs.Lex.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    this.constructor.name.toLowerCase(),\n    getMetaInfo(this, grammarInterval),\n    this.expr.outputRecipe(formals, grammarInterval)\n  ];\n};\n\npexprs.Apply.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'app',\n    getMetaInfo(this, grammarInterval),\n    this.ruleName,\n    this.args.map(function(arg) {\n      return arg.outputRecipe(formals, grammarInterval);\n    })\n  ];\n};\n\npexprs.UnicodeChar.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'unicodeChar',\n    getMetaInfo(this, grammarInterval),\n    this.category\n  ];\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-outputRecipe.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a PExpr that results from recursively replacing every formal parameter (i.e., instance\n  of `Param`) inside this PExpr with its actual value from `actuals` (an Array).\n\n  The receiver must not be modified; a new PExpr must be returned if any replacement is necessary.\n*/\n// function(actuals) { ... }\npexprs.PExpr.prototype.substituteParams = common.abstract('substituteParams');\n\npexprs.any.substituteParams =\npexprs.end.substituteParams =\npexprs.Terminal.prototype.substituteParams =\npexprs.Range.prototype.substituteParams =\npexprs.Terminal.prototype.substituteParams =\npexprs.UnicodeChar.prototype.substituteParams = function(actuals) {\n  return this;\n};\n\npexprs.Param.prototype.substituteParams = function(actuals) {\n  return actuals[this.index];\n};\n\npexprs.Alt.prototype.substituteParams = function(actuals) {\n  return new pexprs.Alt(\n      this.terms.map(function(term) { return term.substituteParams(actuals); }));\n};\n\npexprs.Seq.prototype.substituteParams = function(actuals) {\n  return new pexprs.Seq(\n      this.factors.map(function(factor) { return factor.substituteParams(actuals); }));\n};\n\npexprs.Iter.prototype.substituteParams =\npexprs.Not.prototype.substituteParams =\npexprs.Lookahead.prototype.substituteParams =\npexprs.Lex.prototype.substituteParams = function(actuals) {\n  return new this.constructor(this.expr.substituteParams(actuals));\n};\n\npexprs.Apply.prototype.substituteParams = function(actuals) {\n  if (this.args.length === 0) {\n    // Avoid making a copy of this application, as an optimization\n    return this;\n  } else {\n    var args = this.args.map(function(arg) { return arg.substituteParams(actuals); });\n    return new pexprs.Apply(this.ruleName, args);\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-substituteParams.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\nvar copyWithoutDuplicates = common.copyWithoutDuplicates;\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction isRestrictedJSIdentifier(str) {\n  return /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(str);\n}\n\nfunction resolveDuplicatedNames(argumentNameList) {\n  // `count` is used to record the number of times each argument name occurs in the list,\n  // this is useful for checking duplicated argument name. It maps argument names to ints.\n  var count = Object.create(null);\n  argumentNameList.forEach(function(argName) {\n    count[argName] = (count[argName] || 0) + 1;\n  });\n\n  // Append subscripts ('_1', '_2', ...) to duplicate argument names.\n  Object.keys(count).forEach(function(dupArgName) {\n    if (count[dupArgName] <= 1) {\n      return;\n    }\n\n    // This name shows up more than once, so add subscripts.\n    var subscript = 1;\n    argumentNameList.forEach(function(argName, idx) {\n      if (argName === dupArgName) {\n        argumentNameList[idx] = argName + '_' + subscript++;\n      }\n    });\n  });\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a list of strings that will be used as the default argument names for its receiver\n  (a pexpr) in a semantic action. This is used exclusively by the Semantics Editor.\n\n  `firstArgIndex` is the 1-based index of the first argument name that will be generated for this\n  pexpr. It enables us to name arguments positionally, e.g., if the second argument is a\n  non-alphanumeric terminal like \"+\", it will be named '$2'.\n\n  `noDupCheck` is true if the caller of `toArgumentNameList` is not a top level caller. It enables\n  us to avoid nested duplication subscripts appending, e.g., '_1_1', '_1_2', by only checking\n  duplicates at the top level.\n\n  Here is a more elaborate example that illustrates how this method works:\n  `(a \"+\" b).toArgumentNameList(1)` evaluates to `['a', '$2', 'b']` with the following recursive\n  calls:\n\n    (a).toArgumentNameList(1) -> ['a'],\n    (\"+\").toArgumentNameList(2) -> ['$2'],\n    (b).toArgumentNameList(3) -> ['b']\n\n  Notes:\n  * This method must only be called on well-formed expressions, e.g., the receiver must\n    not have any Alt sub-expressions with inconsistent arities.\n  * e.getArity() === e.toArgumentNameList(1).length\n*/\n// function(firstArgIndex, noDupCheck) { ... }\npexprs.PExpr.prototype.toArgumentNameList = common.abstract('toArgumentNameList');\n\npexprs.any.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['any'];\n};\n\npexprs.end.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['end'];\n};\n\npexprs.Terminal.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  if (typeof this.obj === 'string' && /^[_a-zA-Z0-9]+$/.test(this.obj)) {\n    // If this terminal is a valid suffix for a JS identifier, just prepend it with '_'\n    return ['_' + this.obj];\n  } else {\n    // Otherwise, name it positionally.\n    return ['$' + firstArgIndex];\n  }\n};\n\npexprs.Range.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  var argName = this.from + '_to_' + this.to;\n  // If the `argName` is not valid then try to prepend a `_`.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '_' + argName;\n  }\n  // If the `argName` still not valid after prepending a `_`, then name it positionally.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '$' + firstArgIndex;\n  }\n  return [argName];\n};\n\npexprs.Alt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // `termArgNameLists` is an array of arrays where each row is the\n  // argument name list that corresponds to a term in this alternation.\n  var termArgNameLists = this.terms.map(function(term) {\n    return term.toArgumentNameList(firstArgIndex, true);\n  });\n\n  var argumentNameList = [];\n  var numArgs = termArgNameLists[0].length;\n  for (var colIdx = 0; colIdx < numArgs; colIdx++) {\n    var col = [];\n    for (var rowIdx = 0; rowIdx < this.terms.length; rowIdx++) {\n      col.push(termArgNameLists[rowIdx][colIdx]);\n    }\n    var uniqueNames = copyWithoutDuplicates(col);\n    argumentNameList.push(uniqueNames.join('_or_'));\n  }\n\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs.Seq.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // Generate the argument name list, without worrying about duplicates.\n  var argumentNameList = [];\n  this.factors.forEach(function(factor) {\n    var factorArgumentNameList = factor.toArgumentNameList(firstArgIndex, true);\n    argumentNameList = argumentNameList.concat(factorArgumentNameList);\n\n    // Shift the firstArgIndex to take this factor's argument names into account.\n    firstArgIndex += factorArgumentNameList.length;\n  });\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs.Iter.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  var argumentNameList = this.expr.toArgumentNameList(firstArgIndex, noDupCheck)\n    .map(function(exprArgumentString) {\n      return exprArgumentString[exprArgumentString.length - 1] === 's' ?\n          exprArgumentString + 'es' :\n          exprArgumentString + 's';\n    });\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\npexprs.Opt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return this.expr.toArgumentNameList(firstArgIndex, noDupCheck).map(function(argName) {\n    return 'opt' + argName[0].toUpperCase() + argName.slice(1);\n  });\n};\n\npexprs.Not.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [];\n};\n\npexprs.Lookahead.prototype.toArgumentNameList =\npexprs.Lex.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return this.expr.toArgumentNameList(firstArgIndex, noDupCheck);\n};\n\npexprs.Apply.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [this.ruleName];\n};\n\npexprs.UnicodeChar.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['$' + firstArgIndex];\n};\n\npexprs.Param.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['param' + this.index];\n};\n\n// \"Value pexprs\" (Value, Str, Arr, Obj) are going away soon, so we don't worry about them here.\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-toArgumentNameList.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns a string representing the PExpr, for use as a UI label, etc.\npexprs.PExpr.prototype.toDisplayString = common.abstract('toDisplayString');\n\npexprs.Alt.prototype.toDisplayString =\npexprs.Seq.prototype.toDisplayString =\npexprs.Iter.prototype.toDisplayString =\npexprs.Not.prototype.toDisplayString =\npexprs.Lookahead.prototype.toDisplayString =\npexprs.Lex.prototype.toDisplayString = function() {\n  if (this.source) {\n    return this.source.trimmed().contents;\n  }\n  return '[' + this.constructor.name + ']';\n};\n\npexprs.any.toDisplayString = function() {\n  return 'any';\n};\n\npexprs.end.toDisplayString = function() {\n  return 'end';\n};\n\npexprs.Terminal.prototype.toDisplayString = function() {\n  return JSON.stringify(this.obj);\n};\n\npexprs.Range.prototype.toDisplayString = function() {\n  return JSON.stringify(this.from) + '..' + JSON.stringify(this.to);\n};\n\npexprs.Param.prototype.toDisplayString = function() {\n  return '#' + this.index;\n};\n\npexprs.Apply.prototype.toDisplayString = function() {\n  return this.toString();\n};\n\npexprs.UnicodeChar.prototype.toDisplayString = function() {\n  return 'Unicode {' + this.category + '} character';\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-toDisplayString.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar Failure = require('./Failure');\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\npexprs.PExpr.prototype.toFailure = common.abstract('toFailure');\n\npexprs.any.toFailure = function(grammar) {\n  return new Failure(this, 'any object', 'description');\n};\n\npexprs.end.toFailure = function(grammar) {\n  return new Failure(this, 'end of input', 'description');\n};\n\npexprs.Terminal.prototype.toFailure = function(grammar) {\n  return new Failure(this, this.obj, 'string');\n};\n\npexprs.Range.prototype.toFailure = function(grammar) {\n  // TODO: come up with something better\n  return new Failure(this, JSON.stringify(this.from) + '..' + JSON.stringify(this.to), 'code');\n};\n\npexprs.Not.prototype.toFailure = function(grammar) {\n  var description = this.expr === pexprs.any ?\n      'nothing' :\n      'not ' + this.expr.toFailure(grammar);\n  return new Failure(this, description, 'description');\n};\n\npexprs.Lookahead.prototype.toFailure = function(grammar) {\n  return this.expr.toFailure(grammar);\n};\n\npexprs.Apply.prototype.toFailure = function(grammar) {\n  var description = grammar.rules[this.ruleName].description;\n  if (!description) {\n    var article = (/^[aeiouAEIOU]/.test(this.ruleName) ? 'an' : 'a');\n    description = article + ' ' + this.ruleName;\n  }\n  return new Failure(this, description, 'description');\n};\n\npexprs.UnicodeChar.prototype.toFailure = function(grammar) {\n  return new Failure(this, this.toDisplayString(), 'description');\n};\n\npexprs.Alt.prototype.toFailure = function(grammar) {\n  var fs = this.terms.map(function(t) { return t.toFailure(); });\n  var description = '(' + fs.join(' or ') + ')';\n  return new Failure(this, description, 'description');\n};\n\npexprs.Seq.prototype.toFailure = function(grammar) {\n  var fs = this.factors.map(function(f) { return f.toFailure(); });\n  var description = '(' + fs.join(' ') + ')';\n  return new Failure(this, description, 'description');\n};\n\npexprs.Iter.prototype.toFailure = function(grammar) {\n  var description = '(' + this.expr.toFailure() + this.operator + ')';\n  return new Failure(this, description, 'description');\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-toFailure.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\nvar pexprs = require('./pexprs');\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  e1.toString() === e2.toString() ==> e1 and e2 are semantically equivalent.\n  Note that this is not an iff (<==>): e.g.,\n  (~\"b\" \"a\").toString() !== (\"a\").toString(), even though\n  ~\"b\" \"a\" and \"a\" are interchangeable in any grammar,\n  both in terms of the languages they accept and their arities.\n*/\npexprs.PExpr.prototype.toString = common.abstract('toString');\n\npexprs.any.toString = function() {\n  return 'any';\n};\n\npexprs.end.toString = function() {\n  return 'end';\n};\n\npexprs.Terminal.prototype.toString = function() {\n  return JSON.stringify(this.obj);\n};\n\npexprs.Range.prototype.toString = function() {\n  return JSON.stringify(this.from) + '..' + JSON.stringify(this.to);\n};\n\npexprs.Param.prototype.toString = function() {\n  return '$' + this.index;\n};\n\npexprs.Lex.prototype.toString = function() {\n  return '#(' + this.expr.toString() + ')';\n};\n\npexprs.Alt.prototype.toString = function() {\n  return this.terms.length === 1 ?\n    this.terms[0].toString() :\n    '(' + this.terms.map(function(term) { return term.toString(); }).join(' | ') + ')';\n};\n\npexprs.Seq.prototype.toString = function() {\n  return this.factors.length === 1 ?\n    this.factors[0].toString() :\n    '(' + this.factors.map(function(factor) { return factor.toString(); }).join(' ') + ')';\n};\n\npexprs.Iter.prototype.toString = function() {\n  return this.expr + this.operator;\n};\n\npexprs.Not.prototype.toString = function() {\n  return '~' + this.expr;\n};\n\npexprs.Lookahead.prototype.toString = function() {\n  return '&' + this.expr;\n};\n\npexprs.Apply.prototype.toString = function() {\n  if (this.args.length > 0) {\n    var ps = this.args.map(function(arg) { return arg.toString(); });\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\npexprs.UnicodeChar.prototype.toString = function() {\n  return '\\\\p{' + this.category + '}';\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs-toString.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar UnicodeCategories = require('../third_party/UnicodeCategories');\nvar common = require('./common');\nvar errors = require('./errors');\nvar inherits = require('inherits');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// General stuff\n\nfunction PExpr() {\n  throw new Error(\"PExpr cannot be instantiated -- it's abstract\");\n}\n\n// Set the `source` property to the interval containing the source for this expression.\nPExpr.prototype.withSource = function(interval) {\n  if (interval) {\n    this.source = interval.trimmed();\n  }\n  return this;\n};\n\n// Any\n\nvar any = Object.create(PExpr.prototype);\n\n// End\n\nvar end = Object.create(PExpr.prototype);\n\n// Terminals\n\nfunction Terminal(obj) {\n  this.obj = obj;\n}\ninherits(Terminal, PExpr);\n\n// Ranges\n\nfunction Range(from, to) {\n  this.from = from;\n  this.to = to;\n}\ninherits(Range, PExpr);\n\n// Parameters\n\nfunction Param(index) {\n  this.index = index;\n}\ninherits(Param, PExpr);\n\n// Alternation\n\nfunction Alt(terms) {\n  this.terms = terms;\n}\ninherits(Alt, PExpr);\n\n// Extend is an implementation detail of rule extension\n\nfunction Extend(superGrammar, name, body) {\n  this.superGrammar = superGrammar;\n  this.name = name;\n  this.body = body;\n  var origBody = superGrammar.rules[name].body;\n  this.terms = [body, origBody];\n}\ninherits(Extend, Alt);\n\n// Sequences\n\nfunction Seq(factors) {\n  this.factors = factors;\n}\ninherits(Seq, PExpr);\n\n// Iterators and optionals\n\nfunction Iter(expr) {\n  this.expr = expr;\n}\ninherits(Iter, PExpr);\n\nfunction Star(expr) {\n  this.expr = expr;\n}\ninherits(Star, Iter);\n\nfunction Plus(expr) {\n  this.expr = expr;\n}\ninherits(Plus, Iter);\n\nfunction Opt(expr) {\n  this.expr = expr;\n}\ninherits(Opt, Iter);\n\nStar.prototype.operator = '*';\nPlus.prototype.operator = '+';\nOpt.prototype.operator = '?';\n\nStar.prototype.minNumMatches = 0;\nPlus.prototype.minNumMatches = 1;\nOpt.prototype.minNumMatches = 0;\n\nStar.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nPlus.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nOpt.prototype.maxNumMatches = 1;\n\n// Predicates\n\nfunction Not(expr) {\n  this.expr = expr;\n}\ninherits(Not, PExpr);\n\nfunction Lookahead(expr) {\n  this.expr = expr;\n}\ninherits(Lookahead, PExpr);\n\n// \"Lexification\"\n\nfunction Lex(expr) {\n  this.expr = expr;\n}\ninherits(Lex, PExpr);\n\n// Array decomposition\n\nfunction Arr(expr) {\n  this.expr = expr;\n}\ninherits(Arr, PExpr);\n\n// String decomposition\n\nfunction Str(expr) {\n  this.expr = expr;\n}\ninherits(Str, PExpr);\n\n// Object decomposition\n\nfunction Obj(properties, isLenient) {\n  var names = properties.map(function(property) { return property.name; });\n  var duplicates = common.getDuplicates(names);\n  if (duplicates.length > 0) {\n    throw errors.duplicatePropertyNames(duplicates);\n  } else {\n    this.properties = properties;\n    this.isLenient = isLenient;\n  }\n}\ninherits(Obj, PExpr);\n\n// Rule application\n\nfunction Apply(ruleName, optArgs) {\n  this.ruleName = ruleName;\n  this.args = optArgs || [];\n}\ninherits(Apply, PExpr);\n\nApply.prototype.isSyntactic = function() {\n  return common.isSyntactic(this.ruleName);\n};\n\n// This method just caches the result of `this.toString()` in a non-enumerable property.\nApply.prototype.toMemoKey = function() {\n  if (!this._memoKey) {\n    Object.defineProperty(this, '_memoKey', {value: this.toString()});\n  }\n  return this._memoKey;\n};\n\n// Unicode character\n\nfunction UnicodeChar(category) {\n  this.category = category;\n  this.pattern = UnicodeCategories[category];\n}\ninherits(UnicodeChar, PExpr);\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nexports.PExpr = PExpr;\nexports.any = any;\nexports.end = end;\nexports.Terminal = Terminal;\nexports.Range = Range;\nexports.Param = Param;\nexports.Alt = Alt;\nexports.Extend = Extend;\nexports.Seq = Seq;\nexports.Iter = Iter;\nexports.Star = Star;\nexports.Plus = Plus;\nexports.Opt = Opt;\nexports.Not = Not;\nexports.Lookahead = Lookahead;\nexports.Lex = Lex;\nexports.Arr = Arr;\nexports.Str = Str;\nexports.Obj = Obj;\nexports.Apply = Apply;\nexports.UnicodeChar = UnicodeChar;\n\n// --------------------------------------------------------------------\n// Extensions\n// --------------------------------------------------------------------\n\nrequire('./pexprs-allowsSkippingPrecedingSpace');\nrequire('./pexprs-assertAllApplicationsAreValid');\nrequire('./pexprs-assertChoicesHaveUniformArity');\nrequire('./pexprs-assertIteratedExprsAreNotNullable');\nrequire('./pexprs-check');\nrequire('./pexprs-eval');\nrequire('./pexprs-getArity');\nrequire('./pexprs-outputRecipe');\nrequire('./pexprs-introduceParams');\nrequire('./pexprs-isNullable');\nrequire('./pexprs-substituteParams');\nrequire('./pexprs-toDisplayString');\nrequire('./pexprs-toArgumentNameList');\nrequire('./pexprs-toFailure');\nrequire('./pexprs-toString');\nrequire('./pexprs-madlibs');\n\n\n\n/** WEBPACK FOOTER **\n ** src/pexprs.js\n **/","'use strict';\n\n// --------------------------------------------------------------------\n// Imports\n// --------------------------------------------------------------------\n\nvar common = require('./common');\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Given an array of numbers `arr`, return an array of the numbers as strings,\n// right-justified and padded to the same length.\nfunction padNumbersToEqualLength(arr) {\n  var maxLen = 0;\n  var strings = arr.map(function(n) {\n    var str = n.toString();\n    maxLen = Math.max(maxLen, str.length);\n    return str;\n  });\n  return strings.map(function(s) { return common.padLeft(s, maxLen); });\n}\n\n// Produce a new string that would be the result of copying the contents\n// of the string `src` onto `dest` at offset `offest`.\nfunction strcpy(dest, src, offset) {\n  var origDestLen = dest.length;\n  var start = dest.slice(0, offset);\n  var end = dest.slice(offset + src.length);\n  return (start + src + end).substr(0, origDestLen);\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\n// Return an object with the line and column information for the given\n// offset in `str`.\nexports.getLineAndColumn = function(str, offset) {\n  var lineNum = 1;\n  var colNum = 1;\n\n  var currOffset = 0;\n  var lineStartOffset = 0;\n\n  var nextLine = null;\n  var prevLine = null;\n  var prevLineStartOffset = -1;\n\n  while (currOffset < offset) {\n    var c = str.charAt(currOffset++);\n    if (c === '\\n') {\n      lineNum++;\n      colNum = 1;\n      prevLineStartOffset = lineStartOffset;\n      lineStartOffset = currOffset;\n    } else if (c !== '\\r') {\n      colNum++;\n    }\n  }\n\n  // Find the end of the target line.\n  var lineEndOffset = str.indexOf('\\n', lineStartOffset);\n  if (lineEndOffset === -1) {\n    lineEndOffset = str.length;\n  } else {\n    // Get the next line.\n    var nextLineEndOffset = str.indexOf('\\n', lineEndOffset + 1);\n    nextLine = nextLineEndOffset === -1 ? str.slice(lineEndOffset)\n                                        : str.slice(lineEndOffset, nextLineEndOffset);\n    // Strip leading and trailing EOL char(s).\n    nextLine = nextLine.replace(/^\\r?\\n/, '').replace(/\\r$/, '');\n  }\n\n  // Get the previous line.\n  if (prevLineStartOffset >= 0) {\n    prevLine = str.slice(prevLineStartOffset, lineStartOffset)\n                  .replace(/\\r?\\n$/, '');  // Strip trailing EOL char(s).\n  }\n\n  // Get the target line, stripping a trailing carriage return if necessary.\n  var line = str.slice(lineStartOffset, lineEndOffset).replace(/\\r$/, '');\n\n  return {\n    lineNum: lineNum,\n    colNum: colNum,\n    line: line,\n    prevLine: prevLine,\n    nextLine: nextLine\n  };\n};\n\n// Return a nicely-formatted string describing the line and column for the\n// given offset in `str`.\nexports.getLineAndColumnMessage = function(str, offset /* ...ranges */) {\n  var repeatStr = common.repeatStr;\n\n  var lineAndCol = exports.getLineAndColumn(str, offset);\n  var sb = new common.StringBuffer();\n  sb.append('Line ' + lineAndCol.lineNum + ', col ' + lineAndCol.colNum + ':\\n');\n\n  // An array of the previous, current, and next line numbers as strings of equal length.\n  var lineNumbers = padNumbersToEqualLength([\n      lineAndCol.prevLine == null ? 0 : lineAndCol.lineNum - 1,\n      lineAndCol.lineNum,\n      lineAndCol.nextLine == null ? 0 : lineAndCol.lineNum + 1\n  ]);\n\n  // Helper for appending formatting input lines to the buffer.\n  function appendLine(num, content, prefix) {\n    sb.append(prefix + lineNumbers[num] + ' | ' + content + '\\n');\n  }\n\n  // Include the previous line for context if possible.\n  if (lineAndCol.prevLine != null) {\n    appendLine(0, lineAndCol.prevLine, '  ');\n  }\n  // Line that the error occurred on.\n  appendLine(1, lineAndCol.line, '> ');\n\n  // Build up the line that points to the offset and possible indicates one or more ranges.\n  // Start with a blank line, and indicate each range by overlaying a string of `~` chars.\n  var lineLen = lineAndCol.line.length;\n  var indicationLine = repeatStr(' ', lineLen + 1);\n  var ranges = Array.prototype.slice.call(arguments, 2);\n  for (var i = 0; i < ranges.length; ++i) {\n    var startIdx = ranges[i][0];\n    var endIdx = ranges[i][1];\n    common.assert(startIdx >= 0 && startIdx <= endIdx, 'range start must be >= 0 and <= end');\n\n    var lineStartOffset = offset - lineAndCol.colNum + 1;\n    startIdx = Math.max(0, startIdx - lineStartOffset);\n    endIdx = Math.min(endIdx - lineStartOffset, lineLen);\n\n    indicationLine = strcpy(indicationLine, repeatStr('~', endIdx - startIdx), startIdx);\n  }\n  var gutterWidth = 2 + lineNumbers[1].length + 3;\n  sb.append(repeatStr(' ', gutterWidth));\n  indicationLine = strcpy(indicationLine, '^', lineAndCol.colNum - 1);\n  sb.append(indicationLine.replace(/ +$/, '') + '\\n');\n\n  // Include the next line for context if possible.\n  if (lineAndCol.nextLine != null) {\n    appendLine(2, lineAndCol.nextLine, '  ');\n  }\n  return sb.contents();\n};\n\n\n\n/** WEBPACK FOOTER **\n ** src/util.js\n **/","// Based on https://github.com/tvcutsem/es-lab/blob/master/src/parser/unicode.js.\n// These are just categories that are used in ES5.\n// The full list of Unicode categories is here: http://www.fileformat.info/info/unicode/category/index.htm.\nmodule.exports = {\n  // Letters\n  Lu: /[\\u0041-\\u005A]|[\\u00C0-\\u00D6]|[\\u00D8-\\u00DE]|[\\u0100-\\u0100]|[\\u0102-\\u0102]|[\\u0104-\\u0104]|[\\u0106-\\u0106]|[\\u0108-\\u0108]|[\\u010A-\\u010A]|[\\u010C-\\u010C]|[\\u010E-\\u010E]|[\\u0110-\\u0110]|[\\u0112-\\u0112]|[\\u0114-\\u0114]|[\\u0116-\\u0116]|[\\u0118-\\u0118]|[\\u011A-\\u011A]|[\\u011C-\\u011C]|[\\u011E-\\u011E]|[\\u0120-\\u0120]|[\\u0122-\\u0122]|[\\u0124-\\u0124]|[\\u0126-\\u0126]|[\\u0128-\\u0128]|[\\u012A-\\u012A]|[\\u012C-\\u012C]|[\\u012E-\\u012E]|[\\u0130-\\u0130]|[\\u0132-\\u0132]|[\\u0134-\\u0134]|[\\u0136-\\u0136]|[\\u0139-\\u0139]|[\\u013B-\\u013B]|[\\u013D-\\u013D]|[\\u013F-\\u013F]|[\\u0141-\\u0141]|[\\u0143-\\u0143]|[\\u0145-\\u0145]|[\\u0147-\\u0147]|[\\u014A-\\u014A]|[\\u014C-\\u014C]|[\\u014E-\\u014E]|[\\u0150-\\u0150]|[\\u0152-\\u0152]|[\\u0154-\\u0154]|[\\u0156-\\u0156]|[\\u0158-\\u0158]|[\\u015A-\\u015A]|[\\u015C-\\u015C]|[\\u015E-\\u015E]|[\\u0160-\\u0160]|[\\u0162-\\u0162]|[\\u0164-\\u0164]|[\\u0166-\\u0166]|[\\u0168-\\u0168]|[\\u016A-\\u016A]|[\\u016C-\\u016C]|[\\u016E-\\u016E]|[\\u0170-\\u0170]|[\\u0172-\\u0172]|[\\u0174-\\u0174]|[\\u0176-\\u0176]|[\\u0178-\\u0179]|[\\u017B-\\u017B]|[\\u017D-\\u017D]|[\\u0181-\\u0182]|[\\u0184-\\u0184]|[\\u0186-\\u0187]|[\\u0189-\\u018B]|[\\u018E-\\u0191]|[\\u0193-\\u0194]|[\\u0196-\\u0198]|[\\u019C-\\u019D]|[\\u019F-\\u01A0]|[\\u01A2-\\u01A2]|[\\u01A4-\\u01A4]|[\\u01A6-\\u01A7]|[\\u01A9-\\u01A9]|[\\u01AC-\\u01AC]|[\\u01AE-\\u01AF]|[\\u01B1-\\u01B3]|[\\u01B5-\\u01B5]|[\\u01B7-\\u01B8]|[\\u01BC-\\u01BC]|[\\u01C4-\\u01C4]|[\\u01C7-\\u01C7]|[\\u01CA-\\u01CA]|[\\u01CD-\\u01CD]|[\\u01CF-\\u01CF]|[\\u01D1-\\u01D1]|[\\u01D3-\\u01D3]|[\\u01D5-\\u01D5]|[\\u01D7-\\u01D7]|[\\u01D9-\\u01D9]|[\\u01DB-\\u01DB]|[\\u01DE-\\u01DE]|[\\u01E0-\\u01E0]|[\\u01E2-\\u01E2]|[\\u01E4-\\u01E4]|[\\u01E6-\\u01E6]|[\\u01E8-\\u01E8]|[\\u01EA-\\u01EA]|[\\u01EC-\\u01EC]|[\\u01EE-\\u01EE]|[\\u01F1-\\u01F1]|[\\u01F4-\\u01F4]|[\\u01FA-\\u01FA]|[\\u01FC-\\u01FC]|[\\u01FE-\\u01FE]|[\\u0200-\\u0200]|[\\u0202-\\u0202]|[\\u0204-\\u0204]|[\\u0206-\\u0206]|[\\u0208-\\u0208]|[\\u020A-\\u020A]|[\\u020C-\\u020C]|[\\u020E-\\u020E]|[\\u0210-\\u0210]|[\\u0212-\\u0212]|[\\u0214-\\u0214]|[\\u0216-\\u0216]|[\\u0386-\\u0386]|[\\u0388-\\u038A]|[\\u038C-\\u038C]|[\\u038E-\\u038F]|[\\u0391-\\u03A1]|[\\u03A3-\\u03AB]|[\\u03D2-\\u03D4]|[\\u03DA-\\u03DA]|[\\u03DC-\\u03DC]|[\\u03DE-\\u03DE]|[\\u03E0-\\u03E0]|[\\u03E2-\\u03E2]|[\\u03E4-\\u03E4]|[\\u03E6-\\u03E6]|[\\u03E8-\\u03E8]|[\\u03EA-\\u03EA]|[\\u03EC-\\u03EC]|[\\u03EE-\\u03EE]|[\\u0401-\\u040C]|[\\u040E-\\u042F]|[\\u0460-\\u0460]|[\\u0462-\\u0462]|[\\u0464-\\u0464]|[\\u0466-\\u0466]|[\\u0468-\\u0468]|[\\u046A-\\u046A]|[\\u046C-\\u046C]|[\\u046E-\\u046E]|[\\u0470-\\u0470]|[\\u0472-\\u0472]|[\\u0474-\\u0474]|[\\u0476-\\u0476]|[\\u0478-\\u0478]|[\\u047A-\\u047A]|[\\u047C-\\u047C]|[\\u047E-\\u047E]|[\\u0480-\\u0480]|[\\u0490-\\u0490]|[\\u0492-\\u0492]|[\\u0494-\\u0494]|[\\u0496-\\u0496]|[\\u0498-\\u0498]|[\\u049A-\\u049A]|[\\u049C-\\u049C]|[\\u049E-\\u049E]|[\\u04A0-\\u04A0]|[\\u04A2-\\u04A2]|[\\u04A4-\\u04A4]|[\\u04A6-\\u04A6]|[\\u04A8-\\u04A8]|[\\u04AA-\\u04AA]|[\\u04AC-\\u04AC]|[\\u04AE-\\u04AE]|[\\u04B0-\\u04B0]|[\\u04B2-\\u04B2]|[\\u04B4-\\u04B4]|[\\u04B6-\\u04B6]|[\\u04B8-\\u04B8]|[\\u04BA-\\u04BA]|[\\u04BC-\\u04BC]|[\\u04BE-\\u04BE]|[\\u04C1-\\u04C1]|[\\u04C3-\\u04C3]|[\\u04C7-\\u04C7]|[\\u04CB-\\u04CB]|[\\u04D0-\\u04D0]|[\\u04D2-\\u04D2]|[\\u04D4-\\u04D4]|[\\u04D6-\\u04D6]|[\\u04D8-\\u04D8]|[\\u04DA-\\u04DA]|[\\u04DC-\\u04DC]|[\\u04DE-\\u04DE]|[\\u04E0-\\u04E0]|[\\u04E2-\\u04E2]|[\\u04E4-\\u04E4]|[\\u04E6-\\u04E6]|[\\u04E8-\\u04E8]|[\\u04EA-\\u04EA]|[\\u04EE-\\u04EE]|[\\u04F0-\\u04F0]|[\\u04F2-\\u04F2]|[\\u04F4-\\u04F4]|[\\u04F8-\\u04F8]|[\\u0531-\\u0556]|[\\u10A0-\\u10C5]|[\\u1E00-\\u1E00]|[\\u1E02-\\u1E02]|[\\u1E04-\\u1E04]|[\\u1E06-\\u1E06]|[\\u1E08-\\u1E08]|[\\u1E0A-\\u1E0A]|[\\u1E0C-\\u1E0C]|[\\u1E0E-\\u1E0E]|[\\u1E10-\\u1E10]|[\\u1E12-\\u1E12]|[\\u1E14-\\u1E14]|[\\u1E16-\\u1E16]|[\\u1E18-\\u1E18]|[\\u1E1A-\\u1E1A]|[\\u1E1C-\\u1E1C]|[\\u1E1E-\\u1E1E]|[\\u1E20-\\u1E20]|[\\u1E22-\\u1E22]|[\\u1E24-\\u1E24]|[\\u1E26-\\u1E26]|[\\u1E28-\\u1E28]|[\\u1E2A-\\u1E2A]|[\\u1E2C-\\u1E2C]|[\\u1E2E-\\u1E2E]|[\\u1E30-\\u1E30]|[\\u1E32-\\u1E32]|[\\u1E34-\\u1E34]|[\\u1E36-\\u1E36]|[\\u1E38-\\u1E38]|[\\u1E3A-\\u1E3A]|[\\u1E3C-\\u1E3C]|[\\u1E3E-\\u1E3E]|[\\u1E40-\\u1E40]|[\\u1E42-\\u1E42]|[\\u1E44-\\u1E44]|[\\u1E46-\\u1E46]|[\\u1E48-\\u1E48]|[\\u1E4A-\\u1E4A]|[\\u1E4C-\\u1E4C]|[\\u1E4E-\\u1E4E]|[\\u1E50-\\u1E50]|[\\u1E52-\\u1E52]|[\\u1E54-\\u1E54]|[\\u1E56-\\u1E56]|[\\u1E58-\\u1E58]|[\\u1E5A-\\u1E5A]|[\\u1E5C-\\u1E5C]|[\\u1E5E-\\u1E5E]|[\\u1E60-\\u1E60]|[\\u1E62-\\u1E62]|[\\u1E64-\\u1E64]|[\\u1E66-\\u1E66]|[\\u1E68-\\u1E68]|[\\u1E6A-\\u1E6A]|[\\u1E6C-\\u1E6C]|[\\u1E6E-\\u1E6E]|[\\u1E70-\\u1E70]|[\\u1E72-\\u1E72]|[\\u1E74-\\u1E74]|[\\u1E76-\\u1E76]|[\\u1E78-\\u1E78]|[\\u1E7A-\\u1E7A]|[\\u1E7C-\\u1E7C]|[\\u1E7E-\\u1E7E]|[\\u1E80-\\u1E80]|[\\u1E82-\\u1E82]|[\\u1E84-\\u1E84]|[\\u1E86-\\u1E86]|[\\u1E88-\\u1E88]|[\\u1E8A-\\u1E8A]|[\\u1E8C-\\u1E8C]|[\\u1E8E-\\u1E8E]|[\\u1E90-\\u1E90]|[\\u1E92-\\u1E92]|[\\u1E94-\\u1E94]|[\\u1EA0-\\u1EA0]|[\\u1EA2-\\u1EA2]|[\\u1EA4-\\u1EA4]|[\\u1EA6-\\u1EA6]|[\\u1EA8-\\u1EA8]|[\\u1EAA-\\u1EAA]|[\\u1EAC-\\u1EAC]|[\\u1EAE-\\u1EAE]|[\\u1EB0-\\u1EB0]|[\\u1EB2-\\u1EB2]|[\\u1EB4-\\u1EB4]|[\\u1EB6-\\u1EB6]|[\\u1EB8-\\u1EB8]|[\\u1EBA-\\u1EBA]|[\\u1EBC-\\u1EBC]|[\\u1EBE-\\u1EBE]|[\\u1EC0-\\u1EC0]|[\\u1EC2-\\u1EC2]|[\\u1EC4-\\u1EC4]|[\\u1EC6-\\u1EC6]|[\\u1EC8-\\u1EC8]|[\\u1ECA-\\u1ECA]|[\\u1ECC-\\u1ECC]|[\\u1ECE-\\u1ECE]|[\\u1ED0-\\u1ED0]|[\\u1ED2-\\u1ED2]|[\\u1ED4-\\u1ED4]|[\\u1ED6-\\u1ED6]|[\\u1ED8-\\u1ED8]|[\\u1EDA-\\u1EDA]|[\\u1EDC-\\u1EDC]|[\\u1EDE-\\u1EDE]|[\\u1EE0-\\u1EE0]|[\\u1EE2-\\u1EE2]|[\\u1EE4-\\u1EE4]|[\\u1EE6-\\u1EE6]|[\\u1EE8-\\u1EE8]|[\\u1EEA-\\u1EEA]|[\\u1EEC-\\u1EEC]|[\\u1EEE-\\u1EEE]|[\\u1EF0-\\u1EF0]|[\\u1EF2-\\u1EF2]|[\\u1EF4-\\u1EF4]|[\\u1EF6-\\u1EF6]|[\\u1EF8-\\u1EF8]|[\\u1F08-\\u1F0F]|[\\u1F18-\\u1F1D]|[\\u1F28-\\u1F2F]|[\\u1F38-\\u1F3F]|[\\u1F48-\\u1F4D]|[\\u1F59-\\u1F59]|[\\u1F5B-\\u1F5B]|[\\u1F5D-\\u1F5D]|[\\u1F5F-\\u1F5F]|[\\u1F68-\\u1F6F]|[\\u1F88-\\u1F8F]|[\\u1F98-\\u1F9F]|[\\u1FA8-\\u1FAF]|[\\u1FB8-\\u1FBC]|[\\u1FC8-\\u1FCC]|[\\u1FD8-\\u1FDB]|[\\u1FE8-\\u1FEC]|[\\u1FF8-\\u1FFC]|[\\u2102-\\u2102]|[\\u2107-\\u2107]|[\\u210B-\\u210D]|[\\u2110-\\u2112]|[\\u2115-\\u2115]|[\\u2119-\\u211D]|[\\u2124-\\u2124]|[\\u2126-\\u2126]|[\\u2128-\\u2128]|[\\u212A-\\u212D]|[\\u2130-\\u2131]|[\\u2133-\\u2133]|[\\uFF21-\\uFF3A]/,\n  Ll: /[\\u0061-\\u007A]|[\\u00AA-\\u00AA]|[\\u00B5-\\u00B5]|[\\u00BA-\\u00BA]|[\\u00DF-\\u00F6]|[\\u00F8-\\u00FF]|[\\u0101-\\u0101]|[\\u0103-\\u0103]|[\\u0105-\\u0105]|[\\u0107-\\u0107]|[\\u0109-\\u0109]|[\\u010B-\\u010B]|[\\u010D-\\u010D]|[\\u010F-\\u010F]|[\\u0111-\\u0111]|[\\u0113-\\u0113]|[\\u0115-\\u0115]|[\\u0117-\\u0117]|[\\u0119-\\u0119]|[\\u011B-\\u011B]|[\\u011D-\\u011D]|[\\u011F-\\u011F]|[\\u0121-\\u0121]|[\\u0123-\\u0123]|[\\u0125-\\u0125]|[\\u0127-\\u0127]|[\\u0129-\\u0129]|[\\u012B-\\u012B]|[\\u012D-\\u012D]|[\\u012F-\\u012F]|[\\u0131-\\u0131]|[\\u0133-\\u0133]|[\\u0135-\\u0135]|[\\u0137-\\u0138]|[\\u013A-\\u013A]|[\\u013C-\\u013C]|[\\u013E-\\u013E]|[\\u0140-\\u0140]|[\\u0142-\\u0142]|[\\u0144-\\u0144]|[\\u0146-\\u0146]|[\\u0148-\\u0149]|[\\u014B-\\u014B]|[\\u014D-\\u014D]|[\\u014F-\\u014F]|[\\u0151-\\u0151]|[\\u0153-\\u0153]|[\\u0155-\\u0155]|[\\u0157-\\u0157]|[\\u0159-\\u0159]|[\\u015B-\\u015B]|[\\u015D-\\u015D]|[\\u015F-\\u015F]|[\\u0161-\\u0161]|[\\u0163-\\u0163]|[\\u0165-\\u0165]|[\\u0167-\\u0167]|[\\u0169-\\u0169]|[\\u016B-\\u016B]|[\\u016D-\\u016D]|[\\u016F-\\u016F]|[\\u0171-\\u0171]|[\\u0173-\\u0173]|[\\u0175-\\u0175]|[\\u0177-\\u0177]|[\\u017A-\\u017A]|[\\u017C-\\u017C]|[\\u017E-\\u0180]|[\\u0183-\\u0183]|[\\u0185-\\u0185]|[\\u0188-\\u0188]|[\\u018C-\\u018D]|[\\u0192-\\u0192]|[\\u0195-\\u0195]|[\\u0199-\\u019B]|[\\u019E-\\u019E]|[\\u01A1-\\u01A1]|[\\u01A3-\\u01A3]|[\\u01A5-\\u01A5]|[\\u01A8-\\u01A8]|[\\u01AB-\\u01AB]|[\\u01AD-\\u01AD]|[\\u01B0-\\u01B0]|[\\u01B4-\\u01B4]|[\\u01B6-\\u01B6]|[\\u01B9-\\u01BA]|[\\u01BD-\\u01BD]|[\\u01C6-\\u01C6]|[\\u01C9-\\u01C9]|[\\u01CC-\\u01CC]|[\\u01CE-\\u01CE]|[\\u01D0-\\u01D0]|[\\u01D2-\\u01D2]|[\\u01D4-\\u01D4]|[\\u01D6-\\u01D6]|[\\u01D8-\\u01D8]|[\\u01DA-\\u01DA]|[\\u01DC-\\u01DD]|[\\u01DF-\\u01DF]|[\\u01E1-\\u01E1]|[\\u01E3-\\u01E3]|[\\u01E5-\\u01E5]|[\\u01E7-\\u01E7]|[\\u01E9-\\u01E9]|[\\u01EB-\\u01EB]|[\\u01ED-\\u01ED]|[\\u01EF-\\u01F0]|[\\u01F3-\\u01F3]|[\\u01F5-\\u01F5]|[\\u01FB-\\u01FB]|[\\u01FD-\\u01FD]|[\\u01FF-\\u01FF]|[\\u0201-\\u0201]|[\\u0203-\\u0203]|[\\u0205-\\u0205]|[\\u0207-\\u0207]|[\\u0209-\\u0209]|[\\u020B-\\u020B]|[\\u020D-\\u020D]|[\\u020F-\\u020F]|[\\u0211-\\u0211]|[\\u0213-\\u0213]|[\\u0215-\\u0215]|[\\u0217-\\u0217]|[\\u0250-\\u02A8]|[\\u0390-\\u0390]|[\\u03AC-\\u03CE]|[\\u03D0-\\u03D1]|[\\u03D5-\\u03D6]|[\\u03E3-\\u03E3]|[\\u03E5-\\u03E5]|[\\u03E7-\\u03E7]|[\\u03E9-\\u03E9]|[\\u03EB-\\u03EB]|[\\u03ED-\\u03ED]|[\\u03EF-\\u03F2]|[\\u0430-\\u044F]|[\\u0451-\\u045C]|[\\u045E-\\u045F]|[\\u0461-\\u0461]|[\\u0463-\\u0463]|[\\u0465-\\u0465]|[\\u0467-\\u0467]|[\\u0469-\\u0469]|[\\u046B-\\u046B]|[\\u046D-\\u046D]|[\\u046F-\\u046F]|[\\u0471-\\u0471]|[\\u0473-\\u0473]|[\\u0475-\\u0475]|[\\u0477-\\u0477]|[\\u0479-\\u0479]|[\\u047B-\\u047B]|[\\u047D-\\u047D]|[\\u047F-\\u047F]|[\\u0481-\\u0481]|[\\u0491-\\u0491]|[\\u0493-\\u0493]|[\\u0495-\\u0495]|[\\u0497-\\u0497]|[\\u0499-\\u0499]|[\\u049B-\\u049B]|[\\u049D-\\u049D]|[\\u049F-\\u049F]|[\\u04A1-\\u04A1]|[\\u04A3-\\u04A3]|[\\u04A5-\\u04A5]|[\\u04A7-\\u04A7]|[\\u04A9-\\u04A9]|[\\u04AB-\\u04AB]|[\\u04AD-\\u04AD]|[\\u04AF-\\u04AF]|[\\u04B1-\\u04B1]|[\\u04B3-\\u04B3]|[\\u04B5-\\u04B5]|[\\u04B7-\\u04B7]|[\\u04B9-\\u04B9]|[\\u04BB-\\u04BB]|[\\u04BD-\\u04BD]|[\\u04BF-\\u04BF]|[\\u04C2-\\u04C2]|[\\u04C4-\\u04C4]|[\\u04C8-\\u04C8]|[\\u04CC-\\u04CC]|[\\u04D1-\\u04D1]|[\\u04D3-\\u04D3]|[\\u04D5-\\u04D5]|[\\u04D7-\\u04D7]|[\\u04D9-\\u04D9]|[\\u04DB-\\u04DB]|[\\u04DD-\\u04DD]|[\\u04DF-\\u04DF]|[\\u04E1-\\u04E1]|[\\u04E3-\\u04E3]|[\\u04E5-\\u04E5]|[\\u04E7-\\u04E7]|[\\u04E9-\\u04E9]|[\\u04EB-\\u04EB]|[\\u04EF-\\u04EF]|[\\u04F1-\\u04F1]|[\\u04F3-\\u04F3]|[\\u04F5-\\u04F5]|[\\u04F9-\\u04F9]|[\\u0561-\\u0587]|[\\u10D0-\\u10F6]|[\\u1E01-\\u1E01]|[\\u1E03-\\u1E03]|[\\u1E05-\\u1E05]|[\\u1E07-\\u1E07]|[\\u1E09-\\u1E09]|[\\u1E0B-\\u1E0B]|[\\u1E0D-\\u1E0D]|[\\u1E0F-\\u1E0F]|[\\u1E11-\\u1E11]|[\\u1E13-\\u1E13]|[\\u1E15-\\u1E15]|[\\u1E17-\\u1E17]|[\\u1E19-\\u1E19]|[\\u1E1B-\\u1E1B]|[\\u1E1D-\\u1E1D]|[\\u1E1F-\\u1E1F]|[\\u1E21-\\u1E21]|[\\u1E23-\\u1E23]|[\\u1E25-\\u1E25]|[\\u1E27-\\u1E27]|[\\u1E29-\\u1E29]|[\\u1E2B-\\u1E2B]|[\\u1E2D-\\u1E2D]|[\\u1E2F-\\u1E2F]|[\\u1E31-\\u1E31]|[\\u1E33-\\u1E33]|[\\u1E35-\\u1E35]|[\\u1E37-\\u1E37]|[\\u1E39-\\u1E39]|[\\u1E3B-\\u1E3B]|[\\u1E3D-\\u1E3D]|[\\u1E3F-\\u1E3F]|[\\u1E41-\\u1E41]|[\\u1E43-\\u1E43]|[\\u1E45-\\u1E45]|[\\u1E47-\\u1E47]|[\\u1E49-\\u1E49]|[\\u1E4B-\\u1E4B]|[\\u1E4D-\\u1E4D]|[\\u1E4F-\\u1E4F]|[\\u1E51-\\u1E51]|[\\u1E53-\\u1E53]|[\\u1E55-\\u1E55]|[\\u1E57-\\u1E57]|[\\u1E59-\\u1E59]|[\\u1E5B-\\u1E5B]|[\\u1E5D-\\u1E5D]|[\\u1E5F-\\u1E5F]|[\\u1E61-\\u1E61]|[\\u1E63-\\u1E63]|[\\u1E65-\\u1E65]|[\\u1E67-\\u1E67]|[\\u1E69-\\u1E69]|[\\u1E6B-\\u1E6B]|[\\u1E6D-\\u1E6D]|[\\u1E6F-\\u1E6F]|[\\u1E71-\\u1E71]|[\\u1E73-\\u1E73]|[\\u1E75-\\u1E75]|[\\u1E77-\\u1E77]|[\\u1E79-\\u1E79]|[\\u1E7B-\\u1E7B]|[\\u1E7D-\\u1E7D]|[\\u1E7F-\\u1E7F]|[\\u1E81-\\u1E81]|[\\u1E83-\\u1E83]|[\\u1E85-\\u1E85]|[\\u1E87-\\u1E87]|[\\u1E89-\\u1E89]|[\\u1E8B-\\u1E8B]|[\\u1E8D-\\u1E8D]|[\\u1E8F-\\u1E8F]|[\\u1E91-\\u1E91]|[\\u1E93-\\u1E93]|[\\u1E95-\\u1E9B]|[\\u1EA1-\\u1EA1]|[\\u1EA3-\\u1EA3]|[\\u1EA5-\\u1EA5]|[\\u1EA7-\\u1EA7]|[\\u1EA9-\\u1EA9]|[\\u1EAB-\\u1EAB]|[\\u1EAD-\\u1EAD]|[\\u1EAF-\\u1EAF]|[\\u1EB1-\\u1EB1]|[\\u1EB3-\\u1EB3]|[\\u1EB5-\\u1EB5]|[\\u1EB7-\\u1EB7]|[\\u1EB9-\\u1EB9]|[\\u1EBB-\\u1EBB]|[\\u1EBD-\\u1EBD]|[\\u1EBF-\\u1EBF]|[\\u1EC1-\\u1EC1]|[\\u1EC3-\\u1EC3]|[\\u1EC5-\\u1EC5]|[\\u1EC7-\\u1EC7]|[\\u1EC9-\\u1EC9]|[\\u1ECB-\\u1ECB]|[\\u1ECD-\\u1ECD]|[\\u1ECF-\\u1ECF]|[\\u1ED1-\\u1ED1]|[\\u1ED3-\\u1ED3]|[\\u1ED5-\\u1ED5]|[\\u1ED7-\\u1ED7]|[\\u1ED9-\\u1ED9]|[\\u1EDB-\\u1EDB]|[\\u1EDD-\\u1EDD]|[\\u1EDF-\\u1EDF]|[\\u1EE1-\\u1EE1]|[\\u1EE3-\\u1EE3]|[\\u1EE5-\\u1EE5]|[\\u1EE7-\\u1EE7]|[\\u1EE9-\\u1EE9]|[\\u1EEB-\\u1EEB]|[\\u1EED-\\u1EED]|[\\u1EEF-\\u1EEF]|[\\u1EF1-\\u1EF1]|[\\u1EF3-\\u1EF3]|[\\u1EF5-\\u1EF5]|[\\u1EF7-\\u1EF7]|[\\u1EF9-\\u1EF9]|[\\u1F00-\\u1F07]|[\\u1F10-\\u1F15]|[\\u1F20-\\u1F27]|[\\u1F30-\\u1F37]|[\\u1F40-\\u1F45]|[\\u1F50-\\u1F57]|[\\u1F60-\\u1F67]|[\\u1F70-\\u1F7D]|[\\u1F80-\\u1F87]|[\\u1F90-\\u1F97]|[\\u1FA0-\\u1FA7]|[\\u1FB0-\\u1FB4]|[\\u1FB6-\\u1FB7]|[\\u1FBE-\\u1FBE]|[\\u1FC2-\\u1FC4]|[\\u1FC6-\\u1FC7]|[\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FD7]|[\\u1FE0-\\u1FE7]|[\\u1FF2-\\u1FF4]|[\\u1FF6-\\u1FF7]|[\\u207F-\\u207F]|[\\u210A-\\u210A]|[\\u210E-\\u210F]|[\\u2113-\\u2113]|[\\u2118-\\u2118]|[\\u212E-\\u212F]|[\\u2134-\\u2134]|[\\uFB00-\\uFB06]|[\\uFB13-\\uFB17]|[\\uFF41-\\uFF5A]/,\n  Lt: /[\\u01C5-\\u01C5]|[\\u01C8-\\u01C8]|[\\u01CB-\\u01CB]|[\\u01F2-\\u01F2]/,\n  Lm: /[\\u02B0-\\u02B8]|[\\u02BB-\\u02C1]|[\\u02D0-\\u02D1]|[\\u02E0-\\u02E4]|[\\u037A-\\u037A]|[\\u0559-\\u0559]|[\\u0640-\\u0640]|[\\u06E5-\\u06E6]|[\\u0E46-\\u0E46]|[\\u0EC6-\\u0EC6]|[\\u3005-\\u3005]|[\\u3031-\\u3035]|[\\u309D-\\u309E]|[\\u30FC-\\u30FE]|[\\uFF70-\\uFF70]|[\\uFF9E-\\uFF9F]/,\n  Lo: /[\\u01AA-\\u01AA]|[\\u01BB-\\u01BB]|[\\u01BE-\\u01C3]|[\\u03F3-\\u03F3]|[\\u04C0-\\u04C0]|[\\u05D0-\\u05EA]|[\\u05F0-\\u05F2]|[\\u0621-\\u063A]|[\\u0641-\\u064A]|[\\u0671-\\u06B7]|[\\u06BA-\\u06BE]|[\\u06C0-\\u06CE]|[\\u06D0-\\u06D3]|[\\u06D5-\\u06D5]|[\\u0905-\\u0939]|[\\u093D-\\u093D]|[\\u0950-\\u0950]|[\\u0958-\\u0961]|[\\u0985-\\u098C]|[\\u098F-\\u0990]|[\\u0993-\\u09A8]|[\\u09AA-\\u09B0]|[\\u09B2-\\u09B2]|[\\u09B6-\\u09B9]|[\\u09DC-\\u09DD]|[\\u09DF-\\u09E1]|[\\u09F0-\\u09F1]|[\\u0A05-\\u0A0A]|[\\u0A0F-\\u0A10]|[\\u0A13-\\u0A28]|[\\u0A2A-\\u0A30]|[\\u0A32-\\u0A33]|[\\u0A35-\\u0A36]|[\\u0A38-\\u0A39]|[\\u0A59-\\u0A5C]|[\\u0A5E-\\u0A5E]|[\\u0A72-\\u0A74]|[\\u0A85-\\u0A8B]|[\\u0A8D-\\u0A8D]|[\\u0A8F-\\u0A91]|[\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0]|[\\u0AB2-\\u0AB3]|[\\u0AB5-\\u0AB9]|[\\u0ABD-\\u0ABD]|[\\u0AD0-\\u0AD0]|[\\u0AE0-\\u0AE0]|[\\u0B05-\\u0B0C]|[\\u0B0F-\\u0B10]|[\\u0B13-\\u0B28]|[\\u0B2A-\\u0B30]|[\\u0B32-\\u0B33]|[\\u0B36-\\u0B39]|[\\u0B3D-\\u0B3D]|[\\u0B5C-\\u0B5D]|[\\u0B5F-\\u0B61]|[\\u0B85-\\u0B8A]|[\\u0B8E-\\u0B90]|[\\u0B92-\\u0B95]|[\\u0B99-\\u0B9A]|[\\u0B9C-\\u0B9C]|[\\u0B9E-\\u0B9F]|[\\u0BA3-\\u0BA4]|[\\u0BA8-\\u0BAA]|[\\u0BAE-\\u0BB5]|[\\u0BB7-\\u0BB9]|[\\u0C05-\\u0C0C]|[\\u0C0E-\\u0C10]|[\\u0C12-\\u0C28]|[\\u0C2A-\\u0C33]|[\\u0C35-\\u0C39]|[\\u0C60-\\u0C61]|[\\u0C85-\\u0C8C]|[\\u0C8E-\\u0C90]|[\\u0C92-\\u0CA8]|[\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9]|[\\u0CDE-\\u0CDE]|[\\u0CE0-\\u0CE1]|[\\u0D05-\\u0D0C]|[\\u0D0E-\\u0D10]|[\\u0D12-\\u0D28]|[\\u0D2A-\\u0D39]|[\\u0D60-\\u0D61]|[\\u0E01-\\u0E30]|[\\u0E32-\\u0E33]|[\\u0E40-\\u0E45]|[\\u0E81-\\u0E82]|[\\u0E84-\\u0E84]|[\\u0E87-\\u0E88]|[\\u0E8A-\\u0E8A]|[\\u0E8D-\\u0E8D]|[\\u0E94-\\u0E97]|[\\u0E99-\\u0E9F]|[\\u0EA1-\\u0EA3]|[\\u0EA5-\\u0EA5]|[\\u0EA7-\\u0EA7]|[\\u0EAA-\\u0EAB]|[\\u0EAD-\\u0EB0]|[\\u0EB2-\\u0EB3]|[\\u0EBD-\\u0EBD]|[\\u0EC0-\\u0EC4]|[\\u0EDC-\\u0EDD]|[\\u0F00-\\u0F00]|[\\u0F40-\\u0F47]|[\\u0F49-\\u0F69]|[\\u0F88-\\u0F8B]|[\\u1100-\\u1159]|[\\u115F-\\u11A2]|[\\u11A8-\\u11F9]|[\\u2135-\\u2138]|[\\u3006-\\u3006]|[\\u3041-\\u3094]|[\\u30A1-\\u30FA]|[\\u3105-\\u312C]|[\\u3131-\\u318E]|[\\u4E00-\\u9FA5]|[\\uAC00-\\uD7A3]|[\\uF900-\\uFA2D]|[\\uFB1F-\\uFB28]|[\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C]|[\\uFB3E-\\uFB3E]|[\\uFB40-\\uFB41]|[\\uFB43-\\uFB44]|[\\uFB46-\\uFBB1]|[\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F]|[\\uFD92-\\uFDC7]|[\\uFDF0-\\uFDFB]|[\\uFE70-\\uFE72]|[\\uFE74-\\uFE74]|[\\uFE76-\\uFEFC]|[\\uFF66-\\uFF6F]|[\\uFF71-\\uFF9D]|[\\uFFA0-\\uFFBE]|[\\uFFC2-\\uFFC7]|[\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7]|[\\uFFDA-\\uFFDC]/,\n\n  // Numbers\n  Nl: /[\\u2160-\\u2182]|[\\u3007-\\u3007]|[\\u3021-\\u3029]/,\n  Nd: /[\\u0030-\\u0039]|[\\u0660-\\u0669]|[\\u06F0-\\u06F9]|[\\u0966-\\u096F]|[\\u09E6-\\u09EF]|[\\u0A66-\\u0A6F]|[\\u0AE6-\\u0AEF]|[\\u0B66-\\u0B6F]|[\\u0BE7-\\u0BEF]|[\\u0C66-\\u0C6F]|[\\u0CE6-\\u0CEF]|[\\u0D66-\\u0D6F]|[\\u0E50-\\u0E59]|[\\u0ED0-\\u0ED9]|[\\u0F20-\\u0F29]|[\\uFF10-\\uFF19]/,\n\n  // Marks\n  Mn: /[\\u0300-\\u0345]|[\\u0360-\\u0361]|[\\u0483-\\u0486]|[\\u0591-\\u05A1]|[\\u05A3-\\u05B9]|[\\u05BB-\\u05BD]|[\\u05BF-\\u05BF]|[\\u05C1-\\u05C2]|[\\u05C4-\\u05C4]|[\\u064B-\\u0652]|[\\u0670-\\u0670]|[\\u06D6-\\u06DC]|[\\u06DF-\\u06E4]|[\\u06E7-\\u06E8]|[\\u06EA-\\u06ED]|[\\u0901-\\u0902]|[\\u093C-\\u093C]|[\\u0941-\\u0948]|[\\u094D-\\u094D]|[\\u0951-\\u0954]|[\\u0962-\\u0963]|[\\u0981-\\u0981]|[\\u09BC-\\u09BC]|[\\u09C1-\\u09C4]|[\\u09CD-\\u09CD]|[\\u09E2-\\u09E3]|[\\u0A02-\\u0A02]|[\\u0A3C-\\u0A3C]|[\\u0A41-\\u0A42]|[\\u0A47-\\u0A48]|[\\u0A4B-\\u0A4D]|[\\u0A70-\\u0A71]|[\\u0A81-\\u0A82]|[\\u0ABC-\\u0ABC]|[\\u0AC1-\\u0AC5]|[\\u0AC7-\\u0AC8]|[\\u0ACD-\\u0ACD]|[\\u0B01-\\u0B01]|[\\u0B3C-\\u0B3C]|[\\u0B3F-\\u0B3F]|[\\u0B41-\\u0B43]|[\\u0B4D-\\u0B4D]|[\\u0B56-\\u0B56]|[\\u0B82-\\u0B82]|[\\u0BC0-\\u0BC0]|[\\u0BCD-\\u0BCD]|[\\u0C3E-\\u0C40]|[\\u0C46-\\u0C48]|[\\u0C4A-\\u0C4D]|[\\u0C55-\\u0C56]|[\\u0CBF-\\u0CBF]|[\\u0CC6-\\u0CC6]|[\\u0CCC-\\u0CCD]|[\\u0D41-\\u0D43]|[\\u0D4D-\\u0D4D]|[\\u0E31-\\u0E31]|[\\u0E34-\\u0E3A]|[\\u0E47-\\u0E4E]|[\\u0EB1-\\u0EB1]|[\\u0EB4-\\u0EB9]|[\\u0EBB-\\u0EBC]|[\\u0EC8-\\u0ECD]|[\\u0F18-\\u0F19]|[\\u0F35-\\u0F35]|[\\u0F37-\\u0F37]|[\\u0F39-\\u0F39]|[\\u0F71-\\u0F7E]|[\\u0F80-\\u0F84]|[\\u0F86-\\u0F87]|[\\u0F90-\\u0F95]|[\\u0F97-\\u0F97]|[\\u0F99-\\u0FAD]|[\\u0FB1-\\u0FB7]|[\\u0FB9-\\u0FB9]|[\\u20D0-\\u20DC]|[\\u20E1-\\u20E1]|[\\u302A-\\u302F]|[\\u3099-\\u309A]|[\\uFB1E-\\uFB1E]|[\\uFE20-\\uFE23]/,\n  Mc: /[\\u0903-\\u0903]|[\\u093E-\\u0940]|[\\u0949-\\u094C]|[\\u0982-\\u0983]|[\\u09BE-\\u09C0]|[\\u09C7-\\u09C8]|[\\u09CB-\\u09CC]|[\\u09D7-\\u09D7]|[\\u0A3E-\\u0A40]|[\\u0A83-\\u0A83]|[\\u0ABE-\\u0AC0]|[\\u0AC9-\\u0AC9]|[\\u0ACB-\\u0ACC]|[\\u0B02-\\u0B03]|[\\u0B3E-\\u0B3E]|[\\u0B40-\\u0B40]|[\\u0B47-\\u0B48]|[\\u0B4B-\\u0B4C]|[\\u0B57-\\u0B57]|[\\u0B83-\\u0B83]|[\\u0BBE-\\u0BBF]|[\\u0BC1-\\u0BC2]|[\\u0BC6-\\u0BC8]|[\\u0BCA-\\u0BCC]|[\\u0BD7-\\u0BD7]|[\\u0C01-\\u0C03]|[\\u0C41-\\u0C44]|[\\u0C82-\\u0C83]|[\\u0CBE-\\u0CBE]|[\\u0CC0-\\u0CC4]|[\\u0CC7-\\u0CC8]|[\\u0CCA-\\u0CCB]|[\\u0CD5-\\u0CD6]|[\\u0D02-\\u0D03]|[\\u0D3E-\\u0D40]|[\\u0D46-\\u0D48]|[\\u0D4A-\\u0D4C]|[\\u0D57-\\u0D57]|[\\u0F3E-\\u0F3F]|[\\u0F7F-\\u0F7F]/,\n\n  // Punctuation, Connector\n  Pc: /[\\u005F-\\u005F]|[\\u203F-\\u2040]|[\\u30FB-\\u30FB]|[\\uFE33-\\uFE34]|[\\uFE4D-\\uFE4F]|[\\uFF3F-\\uFF3F]|[\\uFF65-\\uFF65]/,\n\n  // Separator, Space\n  Zs: /[\\u2000-\\u200B]|[\\u3000-\\u3000]/,\n\n  // These two are not real Unicode categories, but our useful for Ohm.\n  // L is a combination of all the letter categories.\n  // Ltmo is a combination of Lt, Lm, and Lo.\n  L: /[\\u0041-\\u005A]|[\\u00C0-\\u00D6]|[\\u00D8-\\u00DE]|[\\u0100-\\u0100]|[\\u0102-\\u0102]|[\\u0104-\\u0104]|[\\u0106-\\u0106]|[\\u0108-\\u0108]|[\\u010A-\\u010A]|[\\u010C-\\u010C]|[\\u010E-\\u010E]|[\\u0110-\\u0110]|[\\u0112-\\u0112]|[\\u0114-\\u0114]|[\\u0116-\\u0116]|[\\u0118-\\u0118]|[\\u011A-\\u011A]|[\\u011C-\\u011C]|[\\u011E-\\u011E]|[\\u0120-\\u0120]|[\\u0122-\\u0122]|[\\u0124-\\u0124]|[\\u0126-\\u0126]|[\\u0128-\\u0128]|[\\u012A-\\u012A]|[\\u012C-\\u012C]|[\\u012E-\\u012E]|[\\u0130-\\u0130]|[\\u0132-\\u0132]|[\\u0134-\\u0134]|[\\u0136-\\u0136]|[\\u0139-\\u0139]|[\\u013B-\\u013B]|[\\u013D-\\u013D]|[\\u013F-\\u013F]|[\\u0141-\\u0141]|[\\u0143-\\u0143]|[\\u0145-\\u0145]|[\\u0147-\\u0147]|[\\u014A-\\u014A]|[\\u014C-\\u014C]|[\\u014E-\\u014E]|[\\u0150-\\u0150]|[\\u0152-\\u0152]|[\\u0154-\\u0154]|[\\u0156-\\u0156]|[\\u0158-\\u0158]|[\\u015A-\\u015A]|[\\u015C-\\u015C]|[\\u015E-\\u015E]|[\\u0160-\\u0160]|[\\u0162-\\u0162]|[\\u0164-\\u0164]|[\\u0166-\\u0166]|[\\u0168-\\u0168]|[\\u016A-\\u016A]|[\\u016C-\\u016C]|[\\u016E-\\u016E]|[\\u0170-\\u0170]|[\\u0172-\\u0172]|[\\u0174-\\u0174]|[\\u0176-\\u0176]|[\\u0178-\\u0179]|[\\u017B-\\u017B]|[\\u017D-\\u017D]|[\\u0181-\\u0182]|[\\u0184-\\u0184]|[\\u0186-\\u0187]|[\\u0189-\\u018B]|[\\u018E-\\u0191]|[\\u0193-\\u0194]|[\\u0196-\\u0198]|[\\u019C-\\u019D]|[\\u019F-\\u01A0]|[\\u01A2-\\u01A2]|[\\u01A4-\\u01A4]|[\\u01A6-\\u01A7]|[\\u01A9-\\u01A9]|[\\u01AC-\\u01AC]|[\\u01AE-\\u01AF]|[\\u01B1-\\u01B3]|[\\u01B5-\\u01B5]|[\\u01B7-\\u01B8]|[\\u01BC-\\u01BC]|[\\u01C4-\\u01C4]|[\\u01C7-\\u01C7]|[\\u01CA-\\u01CA]|[\\u01CD-\\u01CD]|[\\u01CF-\\u01CF]|[\\u01D1-\\u01D1]|[\\u01D3-\\u01D3]|[\\u01D5-\\u01D5]|[\\u01D7-\\u01D7]|[\\u01D9-\\u01D9]|[\\u01DB-\\u01DB]|[\\u01DE-\\u01DE]|[\\u01E0-\\u01E0]|[\\u01E2-\\u01E2]|[\\u01E4-\\u01E4]|[\\u01E6-\\u01E6]|[\\u01E8-\\u01E8]|[\\u01EA-\\u01EA]|[\\u01EC-\\u01EC]|[\\u01EE-\\u01EE]|[\\u01F1-\\u01F1]|[\\u01F4-\\u01F4]|[\\u01FA-\\u01FA]|[\\u01FC-\\u01FC]|[\\u01FE-\\u01FE]|[\\u0200-\\u0200]|[\\u0202-\\u0202]|[\\u0204-\\u0204]|[\\u0206-\\u0206]|[\\u0208-\\u0208]|[\\u020A-\\u020A]|[\\u020C-\\u020C]|[\\u020E-\\u020E]|[\\u0210-\\u0210]|[\\u0212-\\u0212]|[\\u0214-\\u0214]|[\\u0216-\\u0216]|[\\u0386-\\u0386]|[\\u0388-\\u038A]|[\\u038C-\\u038C]|[\\u038E-\\u038F]|[\\u0391-\\u03A1]|[\\u03A3-\\u03AB]|[\\u03D2-\\u03D4]|[\\u03DA-\\u03DA]|[\\u03DC-\\u03DC]|[\\u03DE-\\u03DE]|[\\u03E0-\\u03E0]|[\\u03E2-\\u03E2]|[\\u03E4-\\u03E4]|[\\u03E6-\\u03E6]|[\\u03E8-\\u03E8]|[\\u03EA-\\u03EA]|[\\u03EC-\\u03EC]|[\\u03EE-\\u03EE]|[\\u0401-\\u040C]|[\\u040E-\\u042F]|[\\u0460-\\u0460]|[\\u0462-\\u0462]|[\\u0464-\\u0464]|[\\u0466-\\u0466]|[\\u0468-\\u0468]|[\\u046A-\\u046A]|[\\u046C-\\u046C]|[\\u046E-\\u046E]|[\\u0470-\\u0470]|[\\u0472-\\u0472]|[\\u0474-\\u0474]|[\\u0476-\\u0476]|[\\u0478-\\u0478]|[\\u047A-\\u047A]|[\\u047C-\\u047C]|[\\u047E-\\u047E]|[\\u0480-\\u0480]|[\\u0490-\\u0490]|[\\u0492-\\u0492]|[\\u0494-\\u0494]|[\\u0496-\\u0496]|[\\u0498-\\u0498]|[\\u049A-\\u049A]|[\\u049C-\\u049C]|[\\u049E-\\u049E]|[\\u04A0-\\u04A0]|[\\u04A2-\\u04A2]|[\\u04A4-\\u04A4]|[\\u04A6-\\u04A6]|[\\u04A8-\\u04A8]|[\\u04AA-\\u04AA]|[\\u04AC-\\u04AC]|[\\u04AE-\\u04AE]|[\\u04B0-\\u04B0]|[\\u04B2-\\u04B2]|[\\u04B4-\\u04B4]|[\\u04B6-\\u04B6]|[\\u04B8-\\u04B8]|[\\u04BA-\\u04BA]|[\\u04BC-\\u04BC]|[\\u04BE-\\u04BE]|[\\u04C1-\\u04C1]|[\\u04C3-\\u04C3]|[\\u04C7-\\u04C7]|[\\u04CB-\\u04CB]|[\\u04D0-\\u04D0]|[\\u04D2-\\u04D2]|[\\u04D4-\\u04D4]|[\\u04D6-\\u04D6]|[\\u04D8-\\u04D8]|[\\u04DA-\\u04DA]|[\\u04DC-\\u04DC]|[\\u04DE-\\u04DE]|[\\u04E0-\\u04E0]|[\\u04E2-\\u04E2]|[\\u04E4-\\u04E4]|[\\u04E6-\\u04E6]|[\\u04E8-\\u04E8]|[\\u04EA-\\u04EA]|[\\u04EE-\\u04EE]|[\\u04F0-\\u04F0]|[\\u04F2-\\u04F2]|[\\u04F4-\\u04F4]|[\\u04F8-\\u04F8]|[\\u0531-\\u0556]|[\\u10A0-\\u10C5]|[\\u1E00-\\u1E00]|[\\u1E02-\\u1E02]|[\\u1E04-\\u1E04]|[\\u1E06-\\u1E06]|[\\u1E08-\\u1E08]|[\\u1E0A-\\u1E0A]|[\\u1E0C-\\u1E0C]|[\\u1E0E-\\u1E0E]|[\\u1E10-\\u1E10]|[\\u1E12-\\u1E12]|[\\u1E14-\\u1E14]|[\\u1E16-\\u1E16]|[\\u1E18-\\u1E18]|[\\u1E1A-\\u1E1A]|[\\u1E1C-\\u1E1C]|[\\u1E1E-\\u1E1E]|[\\u1E20-\\u1E20]|[\\u1E22-\\u1E22]|[\\u1E24-\\u1E24]|[\\u1E26-\\u1E26]|[\\u1E28-\\u1E28]|[\\u1E2A-\\u1E2A]|[\\u1E2C-\\u1E2C]|[\\u1E2E-\\u1E2E]|[\\u1E30-\\u1E30]|[\\u1E32-\\u1E32]|[\\u1E34-\\u1E34]|[\\u1E36-\\u1E36]|[\\u1E38-\\u1E38]|[\\u1E3A-\\u1E3A]|[\\u1E3C-\\u1E3C]|[\\u1E3E-\\u1E3E]|[\\u1E40-\\u1E40]|[\\u1E42-\\u1E42]|[\\u1E44-\\u1E44]|[\\u1E46-\\u1E46]|[\\u1E48-\\u1E48]|[\\u1E4A-\\u1E4A]|[\\u1E4C-\\u1E4C]|[\\u1E4E-\\u1E4E]|[\\u1E50-\\u1E50]|[\\u1E52-\\u1E52]|[\\u1E54-\\u1E54]|[\\u1E56-\\u1E56]|[\\u1E58-\\u1E58]|[\\u1E5A-\\u1E5A]|[\\u1E5C-\\u1E5C]|[\\u1E5E-\\u1E5E]|[\\u1E60-\\u1E60]|[\\u1E62-\\u1E62]|[\\u1E64-\\u1E64]|[\\u1E66-\\u1E66]|[\\u1E68-\\u1E68]|[\\u1E6A-\\u1E6A]|[\\u1E6C-\\u1E6C]|[\\u1E6E-\\u1E6E]|[\\u1E70-\\u1E70]|[\\u1E72-\\u1E72]|[\\u1E74-\\u1E74]|[\\u1E76-\\u1E76]|[\\u1E78-\\u1E78]|[\\u1E7A-\\u1E7A]|[\\u1E7C-\\u1E7C]|[\\u1E7E-\\u1E7E]|[\\u1E80-\\u1E80]|[\\u1E82-\\u1E82]|[\\u1E84-\\u1E84]|[\\u1E86-\\u1E86]|[\\u1E88-\\u1E88]|[\\u1E8A-\\u1E8A]|[\\u1E8C-\\u1E8C]|[\\u1E8E-\\u1E8E]|[\\u1E90-\\u1E90]|[\\u1E92-\\u1E92]|[\\u1E94-\\u1E94]|[\\u1EA0-\\u1EA0]|[\\u1EA2-\\u1EA2]|[\\u1EA4-\\u1EA4]|[\\u1EA6-\\u1EA6]|[\\u1EA8-\\u1EA8]|[\\u1EAA-\\u1EAA]|[\\u1EAC-\\u1EAC]|[\\u1EAE-\\u1EAE]|[\\u1EB0-\\u1EB0]|[\\u1EB2-\\u1EB2]|[\\u1EB4-\\u1EB4]|[\\u1EB6-\\u1EB6]|[\\u1EB8-\\u1EB8]|[\\u1EBA-\\u1EBA]|[\\u1EBC-\\u1EBC]|[\\u1EBE-\\u1EBE]|[\\u1EC0-\\u1EC0]|[\\u1EC2-\\u1EC2]|[\\u1EC4-\\u1EC4]|[\\u1EC6-\\u1EC6]|[\\u1EC8-\\u1EC8]|[\\u1ECA-\\u1ECA]|[\\u1ECC-\\u1ECC]|[\\u1ECE-\\u1ECE]|[\\u1ED0-\\u1ED0]|[\\u1ED2-\\u1ED2]|[\\u1ED4-\\u1ED4]|[\\u1ED6-\\u1ED6]|[\\u1ED8-\\u1ED8]|[\\u1EDA-\\u1EDA]|[\\u1EDC-\\u1EDC]|[\\u1EDE-\\u1EDE]|[\\u1EE0-\\u1EE0]|[\\u1EE2-\\u1EE2]|[\\u1EE4-\\u1EE4]|[\\u1EE6-\\u1EE6]|[\\u1EE8-\\u1EE8]|[\\u1EEA-\\u1EEA]|[\\u1EEC-\\u1EEC]|[\\u1EEE-\\u1EEE]|[\\u1EF0-\\u1EF0]|[\\u1EF2-\\u1EF2]|[\\u1EF4-\\u1EF4]|[\\u1EF6-\\u1EF6]|[\\u1EF8-\\u1EF8]|[\\u1F08-\\u1F0F]|[\\u1F18-\\u1F1D]|[\\u1F28-\\u1F2F]|[\\u1F38-\\u1F3F]|[\\u1F48-\\u1F4D]|[\\u1F59-\\u1F59]|[\\u1F5B-\\u1F5B]|[\\u1F5D-\\u1F5D]|[\\u1F5F-\\u1F5F]|[\\u1F68-\\u1F6F]|[\\u1F88-\\u1F8F]|[\\u1F98-\\u1F9F]|[\\u1FA8-\\u1FAF]|[\\u1FB8-\\u1FBC]|[\\u1FC8-\\u1FCC]|[\\u1FD8-\\u1FDB]|[\\u1FE8-\\u1FEC]|[\\u1FF8-\\u1FFC]|[\\u2102-\\u2102]|[\\u2107-\\u2107]|[\\u210B-\\u210D]|[\\u2110-\\u2112]|[\\u2115-\\u2115]|[\\u2119-\\u211D]|[\\u2124-\\u2124]|[\\u2126-\\u2126]|[\\u2128-\\u2128]|[\\u212A-\\u212D]|[\\u2130-\\u2131]|[\\u2133-\\u2133]|[\\uFF21-\\uFF3A]|[\\u0061-\\u007A]|[\\u00AA-\\u00AA]|[\\u00B5-\\u00B5]|[\\u00BA-\\u00BA]|[\\u00DF-\\u00F6]|[\\u00F8-\\u00FF]|[\\u0101-\\u0101]|[\\u0103-\\u0103]|[\\u0105-\\u0105]|[\\u0107-\\u0107]|[\\u0109-\\u0109]|[\\u010B-\\u010B]|[\\u010D-\\u010D]|[\\u010F-\\u010F]|[\\u0111-\\u0111]|[\\u0113-\\u0113]|[\\u0115-\\u0115]|[\\u0117-\\u0117]|[\\u0119-\\u0119]|[\\u011B-\\u011B]|[\\u011D-\\u011D]|[\\u011F-\\u011F]|[\\u0121-\\u0121]|[\\u0123-\\u0123]|[\\u0125-\\u0125]|[\\u0127-\\u0127]|[\\u0129-\\u0129]|[\\u012B-\\u012B]|[\\u012D-\\u012D]|[\\u012F-\\u012F]|[\\u0131-\\u0131]|[\\u0133-\\u0133]|[\\u0135-\\u0135]|[\\u0137-\\u0138]|[\\u013A-\\u013A]|[\\u013C-\\u013C]|[\\u013E-\\u013E]|[\\u0140-\\u0140]|[\\u0142-\\u0142]|[\\u0144-\\u0144]|[\\u0146-\\u0146]|[\\u0148-\\u0149]|[\\u014B-\\u014B]|[\\u014D-\\u014D]|[\\u014F-\\u014F]|[\\u0151-\\u0151]|[\\u0153-\\u0153]|[\\u0155-\\u0155]|[\\u0157-\\u0157]|[\\u0159-\\u0159]|[\\u015B-\\u015B]|[\\u015D-\\u015D]|[\\u015F-\\u015F]|[\\u0161-\\u0161]|[\\u0163-\\u0163]|[\\u0165-\\u0165]|[\\u0167-\\u0167]|[\\u0169-\\u0169]|[\\u016B-\\u016B]|[\\u016D-\\u016D]|[\\u016F-\\u016F]|[\\u0171-\\u0171]|[\\u0173-\\u0173]|[\\u0175-\\u0175]|[\\u0177-\\u0177]|[\\u017A-\\u017A]|[\\u017C-\\u017C]|[\\u017E-\\u0180]|[\\u0183-\\u0183]|[\\u0185-\\u0185]|[\\u0188-\\u0188]|[\\u018C-\\u018D]|[\\u0192-\\u0192]|[\\u0195-\\u0195]|[\\u0199-\\u019B]|[\\u019E-\\u019E]|[\\u01A1-\\u01A1]|[\\u01A3-\\u01A3]|[\\u01A5-\\u01A5]|[\\u01A8-\\u01A8]|[\\u01AB-\\u01AB]|[\\u01AD-\\u01AD]|[\\u01B0-\\u01B0]|[\\u01B4-\\u01B4]|[\\u01B6-\\u01B6]|[\\u01B9-\\u01BA]|[\\u01BD-\\u01BD]|[\\u01C6-\\u01C6]|[\\u01C9-\\u01C9]|[\\u01CC-\\u01CC]|[\\u01CE-\\u01CE]|[\\u01D0-\\u01D0]|[\\u01D2-\\u01D2]|[\\u01D4-\\u01D4]|[\\u01D6-\\u01D6]|[\\u01D8-\\u01D8]|[\\u01DA-\\u01DA]|[\\u01DC-\\u01DD]|[\\u01DF-\\u01DF]|[\\u01E1-\\u01E1]|[\\u01E3-\\u01E3]|[\\u01E5-\\u01E5]|[\\u01E7-\\u01E7]|[\\u01E9-\\u01E9]|[\\u01EB-\\u01EB]|[\\u01ED-\\u01ED]|[\\u01EF-\\u01F0]|[\\u01F3-\\u01F3]|[\\u01F5-\\u01F5]|[\\u01FB-\\u01FB]|[\\u01FD-\\u01FD]|[\\u01FF-\\u01FF]|[\\u0201-\\u0201]|[\\u0203-\\u0203]|[\\u0205-\\u0205]|[\\u0207-\\u0207]|[\\u0209-\\u0209]|[\\u020B-\\u020B]|[\\u020D-\\u020D]|[\\u020F-\\u020F]|[\\u0211-\\u0211]|[\\u0213-\\u0213]|[\\u0215-\\u0215]|[\\u0217-\\u0217]|[\\u0250-\\u02A8]|[\\u0390-\\u0390]|[\\u03AC-\\u03CE]|[\\u03D0-\\u03D1]|[\\u03D5-\\u03D6]|[\\u03E3-\\u03E3]|[\\u03E5-\\u03E5]|[\\u03E7-\\u03E7]|[\\u03E9-\\u03E9]|[\\u03EB-\\u03EB]|[\\u03ED-\\u03ED]|[\\u03EF-\\u03F2]|[\\u0430-\\u044F]|[\\u0451-\\u045C]|[\\u045E-\\u045F]|[\\u0461-\\u0461]|[\\u0463-\\u0463]|[\\u0465-\\u0465]|[\\u0467-\\u0467]|[\\u0469-\\u0469]|[\\u046B-\\u046B]|[\\u046D-\\u046D]|[\\u046F-\\u046F]|[\\u0471-\\u0471]|[\\u0473-\\u0473]|[\\u0475-\\u0475]|[\\u0477-\\u0477]|[\\u0479-\\u0479]|[\\u047B-\\u047B]|[\\u047D-\\u047D]|[\\u047F-\\u047F]|[\\u0481-\\u0481]|[\\u0491-\\u0491]|[\\u0493-\\u0493]|[\\u0495-\\u0495]|[\\u0497-\\u0497]|[\\u0499-\\u0499]|[\\u049B-\\u049B]|[\\u049D-\\u049D]|[\\u049F-\\u049F]|[\\u04A1-\\u04A1]|[\\u04A3-\\u04A3]|[\\u04A5-\\u04A5]|[\\u04A7-\\u04A7]|[\\u04A9-\\u04A9]|[\\u04AB-\\u04AB]|[\\u04AD-\\u04AD]|[\\u04AF-\\u04AF]|[\\u04B1-\\u04B1]|[\\u04B3-\\u04B3]|[\\u04B5-\\u04B5]|[\\u04B7-\\u04B7]|[\\u04B9-\\u04B9]|[\\u04BB-\\u04BB]|[\\u04BD-\\u04BD]|[\\u04BF-\\u04BF]|[\\u04C2-\\u04C2]|[\\u04C4-\\u04C4]|[\\u04C8-\\u04C8]|[\\u04CC-\\u04CC]|[\\u04D1-\\u04D1]|[\\u04D3-\\u04D3]|[\\u04D5-\\u04D5]|[\\u04D7-\\u04D7]|[\\u04D9-\\u04D9]|[\\u04DB-\\u04DB]|[\\u04DD-\\u04DD]|[\\u04DF-\\u04DF]|[\\u04E1-\\u04E1]|[\\u04E3-\\u04E3]|[\\u04E5-\\u04E5]|[\\u04E7-\\u04E7]|[\\u04E9-\\u04E9]|[\\u04EB-\\u04EB]|[\\u04EF-\\u04EF]|[\\u04F1-\\u04F1]|[\\u04F3-\\u04F3]|[\\u04F5-\\u04F5]|[\\u04F9-\\u04F9]|[\\u0561-\\u0587]|[\\u10D0-\\u10F6]|[\\u1E01-\\u1E01]|[\\u1E03-\\u1E03]|[\\u1E05-\\u1E05]|[\\u1E07-\\u1E07]|[\\u1E09-\\u1E09]|[\\u1E0B-\\u1E0B]|[\\u1E0D-\\u1E0D]|[\\u1E0F-\\u1E0F]|[\\u1E11-\\u1E11]|[\\u1E13-\\u1E13]|[\\u1E15-\\u1E15]|[\\u1E17-\\u1E17]|[\\u1E19-\\u1E19]|[\\u1E1B-\\u1E1B]|[\\u1E1D-\\u1E1D]|[\\u1E1F-\\u1E1F]|[\\u1E21-\\u1E21]|[\\u1E23-\\u1E23]|[\\u1E25-\\u1E25]|[\\u1E27-\\u1E27]|[\\u1E29-\\u1E29]|[\\u1E2B-\\u1E2B]|[\\u1E2D-\\u1E2D]|[\\u1E2F-\\u1E2F]|[\\u1E31-\\u1E31]|[\\u1E33-\\u1E33]|[\\u1E35-\\u1E35]|[\\u1E37-\\u1E37]|[\\u1E39-\\u1E39]|[\\u1E3B-\\u1E3B]|[\\u1E3D-\\u1E3D]|[\\u1E3F-\\u1E3F]|[\\u1E41-\\u1E41]|[\\u1E43-\\u1E43]|[\\u1E45-\\u1E45]|[\\u1E47-\\u1E47]|[\\u1E49-\\u1E49]|[\\u1E4B-\\u1E4B]|[\\u1E4D-\\u1E4D]|[\\u1E4F-\\u1E4F]|[\\u1E51-\\u1E51]|[\\u1E53-\\u1E53]|[\\u1E55-\\u1E55]|[\\u1E57-\\u1E57]|[\\u1E59-\\u1E59]|[\\u1E5B-\\u1E5B]|[\\u1E5D-\\u1E5D]|[\\u1E5F-\\u1E5F]|[\\u1E61-\\u1E61]|[\\u1E63-\\u1E63]|[\\u1E65-\\u1E65]|[\\u1E67-\\u1E67]|[\\u1E69-\\u1E69]|[\\u1E6B-\\u1E6B]|[\\u1E6D-\\u1E6D]|[\\u1E6F-\\u1E6F]|[\\u1E71-\\u1E71]|[\\u1E73-\\u1E73]|[\\u1E75-\\u1E75]|[\\u1E77-\\u1E77]|[\\u1E79-\\u1E79]|[\\u1E7B-\\u1E7B]|[\\u1E7D-\\u1E7D]|[\\u1E7F-\\u1E7F]|[\\u1E81-\\u1E81]|[\\u1E83-\\u1E83]|[\\u1E85-\\u1E85]|[\\u1E87-\\u1E87]|[\\u1E89-\\u1E89]|[\\u1E8B-\\u1E8B]|[\\u1E8D-\\u1E8D]|[\\u1E8F-\\u1E8F]|[\\u1E91-\\u1E91]|[\\u1E93-\\u1E93]|[\\u1E95-\\u1E9B]|[\\u1EA1-\\u1EA1]|[\\u1EA3-\\u1EA3]|[\\u1EA5-\\u1EA5]|[\\u1EA7-\\u1EA7]|[\\u1EA9-\\u1EA9]|[\\u1EAB-\\u1EAB]|[\\u1EAD-\\u1EAD]|[\\u1EAF-\\u1EAF]|[\\u1EB1-\\u1EB1]|[\\u1EB3-\\u1EB3]|[\\u1EB5-\\u1EB5]|[\\u1EB7-\\u1EB7]|[\\u1EB9-\\u1EB9]|[\\u1EBB-\\u1EBB]|[\\u1EBD-\\u1EBD]|[\\u1EBF-\\u1EBF]|[\\u1EC1-\\u1EC1]|[\\u1EC3-\\u1EC3]|[\\u1EC5-\\u1EC5]|[\\u1EC7-\\u1EC7]|[\\u1EC9-\\u1EC9]|[\\u1ECB-\\u1ECB]|[\\u1ECD-\\u1ECD]|[\\u1ECF-\\u1ECF]|[\\u1ED1-\\u1ED1]|[\\u1ED3-\\u1ED3]|[\\u1ED5-\\u1ED5]|[\\u1ED7-\\u1ED7]|[\\u1ED9-\\u1ED9]|[\\u1EDB-\\u1EDB]|[\\u1EDD-\\u1EDD]|[\\u1EDF-\\u1EDF]|[\\u1EE1-\\u1EE1]|[\\u1EE3-\\u1EE3]|[\\u1EE5-\\u1EE5]|[\\u1EE7-\\u1EE7]|[\\u1EE9-\\u1EE9]|[\\u1EEB-\\u1EEB]|[\\u1EED-\\u1EED]|[\\u1EEF-\\u1EEF]|[\\u1EF1-\\u1EF1]|[\\u1EF3-\\u1EF3]|[\\u1EF5-\\u1EF5]|[\\u1EF7-\\u1EF7]|[\\u1EF9-\\u1EF9]|[\\u1F00-\\u1F07]|[\\u1F10-\\u1F15]|[\\u1F20-\\u1F27]|[\\u1F30-\\u1F37]|[\\u1F40-\\u1F45]|[\\u1F50-\\u1F57]|[\\u1F60-\\u1F67]|[\\u1F70-\\u1F7D]|[\\u1F80-\\u1F87]|[\\u1F90-\\u1F97]|[\\u1FA0-\\u1FA7]|[\\u1FB0-\\u1FB4]|[\\u1FB6-\\u1FB7]|[\\u1FBE-\\u1FBE]|[\\u1FC2-\\u1FC4]|[\\u1FC6-\\u1FC7]|[\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FD7]|[\\u1FE0-\\u1FE7]|[\\u1FF2-\\u1FF4]|[\\u1FF6-\\u1FF7]|[\\u207F-\\u207F]|[\\u210A-\\u210A]|[\\u210E-\\u210F]|[\\u2113-\\u2113]|[\\u2118-\\u2118]|[\\u212E-\\u212F]|[\\u2134-\\u2134]|[\\uFB00-\\uFB06]|[\\uFB13-\\uFB17]|[\\uFF41-\\uFF5A]|[\\u01C5-\\u01C5]|[\\u01C8-\\u01C8]|[\\u01CB-\\u01CB]|[\\u01F2-\\u01F2]|[\\u02B0-\\u02B8]|[\\u02BB-\\u02C1]|[\\u02D0-\\u02D1]|[\\u02E0-\\u02E4]|[\\u037A-\\u037A]|[\\u0559-\\u0559]|[\\u0640-\\u0640]|[\\u06E5-\\u06E6]|[\\u0E46-\\u0E46]|[\\u0EC6-\\u0EC6]|[\\u3005-\\u3005]|[\\u3031-\\u3035]|[\\u309D-\\u309E]|[\\u30FC-\\u30FE]|[\\uFF70-\\uFF70]|[\\uFF9E-\\uFF9F]|[\\u01AA-\\u01AA]|[\\u01BB-\\u01BB]|[\\u01BE-\\u01C3]|[\\u03F3-\\u03F3]|[\\u04C0-\\u04C0]|[\\u05D0-\\u05EA]|[\\u05F0-\\u05F2]|[\\u0621-\\u063A]|[\\u0641-\\u064A]|[\\u0671-\\u06B7]|[\\u06BA-\\u06BE]|[\\u06C0-\\u06CE]|[\\u06D0-\\u06D3]|[\\u06D5-\\u06D5]|[\\u0905-\\u0939]|[\\u093D-\\u093D]|[\\u0950-\\u0950]|[\\u0958-\\u0961]|[\\u0985-\\u098C]|[\\u098F-\\u0990]|[\\u0993-\\u09A8]|[\\u09AA-\\u09B0]|[\\u09B2-\\u09B2]|[\\u09B6-\\u09B9]|[\\u09DC-\\u09DD]|[\\u09DF-\\u09E1]|[\\u09F0-\\u09F1]|[\\u0A05-\\u0A0A]|[\\u0A0F-\\u0A10]|[\\u0A13-\\u0A28]|[\\u0A2A-\\u0A30]|[\\u0A32-\\u0A33]|[\\u0A35-\\u0A36]|[\\u0A38-\\u0A39]|[\\u0A59-\\u0A5C]|[\\u0A5E-\\u0A5E]|[\\u0A72-\\u0A74]|[\\u0A85-\\u0A8B]|[\\u0A8D-\\u0A8D]|[\\u0A8F-\\u0A91]|[\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0]|[\\u0AB2-\\u0AB3]|[\\u0AB5-\\u0AB9]|[\\u0ABD-\\u0ABD]|[\\u0AD0-\\u0AD0]|[\\u0AE0-\\u0AE0]|[\\u0B05-\\u0B0C]|[\\u0B0F-\\u0B10]|[\\u0B13-\\u0B28]|[\\u0B2A-\\u0B30]|[\\u0B32-\\u0B33]|[\\u0B36-\\u0B39]|[\\u0B3D-\\u0B3D]|[\\u0B5C-\\u0B5D]|[\\u0B5F-\\u0B61]|[\\u0B85-\\u0B8A]|[\\u0B8E-\\u0B90]|[\\u0B92-\\u0B95]|[\\u0B99-\\u0B9A]|[\\u0B9C-\\u0B9C]|[\\u0B9E-\\u0B9F]|[\\u0BA3-\\u0BA4]|[\\u0BA8-\\u0BAA]|[\\u0BAE-\\u0BB5]|[\\u0BB7-\\u0BB9]|[\\u0C05-\\u0C0C]|[\\u0C0E-\\u0C10]|[\\u0C12-\\u0C28]|[\\u0C2A-\\u0C33]|[\\u0C35-\\u0C39]|[\\u0C60-\\u0C61]|[\\u0C85-\\u0C8C]|[\\u0C8E-\\u0C90]|[\\u0C92-\\u0CA8]|[\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9]|[\\u0CDE-\\u0CDE]|[\\u0CE0-\\u0CE1]|[\\u0D05-\\u0D0C]|[\\u0D0E-\\u0D10]|[\\u0D12-\\u0D28]|[\\u0D2A-\\u0D39]|[\\u0D60-\\u0D61]|[\\u0E01-\\u0E30]|[\\u0E32-\\u0E33]|[\\u0E40-\\u0E45]|[\\u0E81-\\u0E82]|[\\u0E84-\\u0E84]|[\\u0E87-\\u0E88]|[\\u0E8A-\\u0E8A]|[\\u0E8D-\\u0E8D]|[\\u0E94-\\u0E97]|[\\u0E99-\\u0E9F]|[\\u0EA1-\\u0EA3]|[\\u0EA5-\\u0EA5]|[\\u0EA7-\\u0EA7]|[\\u0EAA-\\u0EAB]|[\\u0EAD-\\u0EB0]|[\\u0EB2-\\u0EB3]|[\\u0EBD-\\u0EBD]|[\\u0EC0-\\u0EC4]|[\\u0EDC-\\u0EDD]|[\\u0F00-\\u0F00]|[\\u0F40-\\u0F47]|[\\u0F49-\\u0F69]|[\\u0F88-\\u0F8B]|[\\u1100-\\u1159]|[\\u115F-\\u11A2]|[\\u11A8-\\u11F9]|[\\u2135-\\u2138]|[\\u3006-\\u3006]|[\\u3041-\\u3094]|[\\u30A1-\\u30FA]|[\\u3105-\\u312C]|[\\u3131-\\u318E]|[\\u4E00-\\u9FA5]|[\\uAC00-\\uD7A3]|[\\uF900-\\uFA2D]|[\\uFB1F-\\uFB28]|[\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C]|[\\uFB3E-\\uFB3E]|[\\uFB40-\\uFB41]|[\\uFB43-\\uFB44]|[\\uFB46-\\uFBB1]|[\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F]|[\\uFD92-\\uFDC7]|[\\uFDF0-\\uFDFB]|[\\uFE70-\\uFE72]|[\\uFE74-\\uFE74]|[\\uFE76-\\uFEFC]|[\\uFF66-\\uFF6F]|[\\uFF71-\\uFF9D]|[\\uFFA0-\\uFFBE]|[\\uFFC2-\\uFFC7]|[\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7]|[\\uFFDA-\\uFFDC]/,\n  Ltmo: /[\\u01C5-\\u01C5]|[\\u01C8-\\u01C8]|[\\u01CB-\\u01CB]|[\\u01F2-\\u01F2][\\u02B0-\\u02B8]|[\\u02BB-\\u02C1]|[\\u02D0-\\u02D1]|[\\u02E0-\\u02E4]|[\\u037A-\\u037A]|[\\u0559-\\u0559]|[\\u0640-\\u0640]|[\\u06E5-\\u06E6]|[\\u0E46-\\u0E46]|[\\u0EC6-\\u0EC6]|[\\u3005-\\u3005]|[\\u3031-\\u3035]|[\\u309D-\\u309E]|[\\u30FC-\\u30FE]|[\\uFF70-\\uFF70]|[\\uFF9E-\\uFF9F][\\u01AA-\\u01AA]|[\\u01BB-\\u01BB]|[\\u01BE-\\u01C3]|[\\u03F3-\\u03F3]|[\\u04C0-\\u04C0]|[\\u05D0-\\u05EA]|[\\u05F0-\\u05F2]|[\\u0621-\\u063A]|[\\u0641-\\u064A]|[\\u0671-\\u06B7]|[\\u06BA-\\u06BE]|[\\u06C0-\\u06CE]|[\\u06D0-\\u06D3]|[\\u06D5-\\u06D5]|[\\u0905-\\u0939]|[\\u093D-\\u093D]|[\\u0950-\\u0950]|[\\u0958-\\u0961]|[\\u0985-\\u098C]|[\\u098F-\\u0990]|[\\u0993-\\u09A8]|[\\u09AA-\\u09B0]|[\\u09B2-\\u09B2]|[\\u09B6-\\u09B9]|[\\u09DC-\\u09DD]|[\\u09DF-\\u09E1]|[\\u09F0-\\u09F1]|[\\u0A05-\\u0A0A]|[\\u0A0F-\\u0A10]|[\\u0A13-\\u0A28]|[\\u0A2A-\\u0A30]|[\\u0A32-\\u0A33]|[\\u0A35-\\u0A36]|[\\u0A38-\\u0A39]|[\\u0A59-\\u0A5C]|[\\u0A5E-\\u0A5E]|[\\u0A72-\\u0A74]|[\\u0A85-\\u0A8B]|[\\u0A8D-\\u0A8D]|[\\u0A8F-\\u0A91]|[\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0]|[\\u0AB2-\\u0AB3]|[\\u0AB5-\\u0AB9]|[\\u0ABD-\\u0ABD]|[\\u0AD0-\\u0AD0]|[\\u0AE0-\\u0AE0]|[\\u0B05-\\u0B0C]|[\\u0B0F-\\u0B10]|[\\u0B13-\\u0B28]|[\\u0B2A-\\u0B30]|[\\u0B32-\\u0B33]|[\\u0B36-\\u0B39]|[\\u0B3D-\\u0B3D]|[\\u0B5C-\\u0B5D]|[\\u0B5F-\\u0B61]|[\\u0B85-\\u0B8A]|[\\u0B8E-\\u0B90]|[\\u0B92-\\u0B95]|[\\u0B99-\\u0B9A]|[\\u0B9C-\\u0B9C]|[\\u0B9E-\\u0B9F]|[\\u0BA3-\\u0BA4]|[\\u0BA8-\\u0BAA]|[\\u0BAE-\\u0BB5]|[\\u0BB7-\\u0BB9]|[\\u0C05-\\u0C0C]|[\\u0C0E-\\u0C10]|[\\u0C12-\\u0C28]|[\\u0C2A-\\u0C33]|[\\u0C35-\\u0C39]|[\\u0C60-\\u0C61]|[\\u0C85-\\u0C8C]|[\\u0C8E-\\u0C90]|[\\u0C92-\\u0CA8]|[\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9]|[\\u0CDE-\\u0CDE]|[\\u0CE0-\\u0CE1]|[\\u0D05-\\u0D0C]|[\\u0D0E-\\u0D10]|[\\u0D12-\\u0D28]|[\\u0D2A-\\u0D39]|[\\u0D60-\\u0D61]|[\\u0E01-\\u0E30]|[\\u0E32-\\u0E33]|[\\u0E40-\\u0E45]|[\\u0E81-\\u0E82]|[\\u0E84-\\u0E84]|[\\u0E87-\\u0E88]|[\\u0E8A-\\u0E8A]|[\\u0E8D-\\u0E8D]|[\\u0E94-\\u0E97]|[\\u0E99-\\u0E9F]|[\\u0EA1-\\u0EA3]|[\\u0EA5-\\u0EA5]|[\\u0EA7-\\u0EA7]|[\\u0EAA-\\u0EAB]|[\\u0EAD-\\u0EB0]|[\\u0EB2-\\u0EB3]|[\\u0EBD-\\u0EBD]|[\\u0EC0-\\u0EC4]|[\\u0EDC-\\u0EDD]|[\\u0F00-\\u0F00]|[\\u0F40-\\u0F47]|[\\u0F49-\\u0F69]|[\\u0F88-\\u0F8B]|[\\u1100-\\u1159]|[\\u115F-\\u11A2]|[\\u11A8-\\u11F9]|[\\u2135-\\u2138]|[\\u3006-\\u3006]|[\\u3041-\\u3094]|[\\u30A1-\\u30FA]|[\\u3105-\\u312C]|[\\u3131-\\u318E]|[\\u4E00-\\u9FA5]|[\\uAC00-\\uD7A3]|[\\uF900-\\uFA2D]|[\\uFB1F-\\uFB28]|[\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C]|[\\uFB3E-\\uFB3E]|[\\uFB40-\\uFB41]|[\\uFB43-\\uFB44]|[\\uFB46-\\uFBB1]|[\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F]|[\\uFD92-\\uFDC7]|[\\uFDF0-\\uFDFB]|[\\uFE70-\\uFE72]|[\\uFE74-\\uFE74]|[\\uFE76-\\uFEFC]|[\\uFF66-\\uFF6F]|[\\uFF71-\\uFF9D]|[\\uFFA0-\\uFFBE]|[\\uFFC2-\\uFFC7]|[\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7]|[\\uFFDA-\\uFFDC]/\n};\n\n\n\n/** WEBPACK FOOTER **\n ** third_party/UnicodeCategories.js\n **/","import * as ohm from \"../third_party/ohm.js\";\n\nvar grammar;\nexport var namespace;\n\n/* eslint-disable no-unused-vars */\nvar F = `\nF {\n\n Exp\n   = let PriPat \"=\" Exp in Exp                           -- let\n   | let rec ident \"=\" Exp in Exp                        -- letrec\n   | let rec \"(\" ident \":\" Type \")\" \"=\" Exp in Exp       -- typedLetrec\n   | fun PriPat+ \"->\" Exp                                -- fun\n   | if Exp then Exp else Exp                            -- if\n   | match Exp with \"|\"? NonemptyListOf<PatAndExp, \"|\">  -- match\n   | OrExp\n\n PatAndExp\n   = Pat \"->\" Exp\n\n Pat\n   = ctor PriPat  -- datum\n   | PriPat\n\n PriPat\n   = ctor                      -- emptyDatum\n   | \"(\" Pat \")\"               -- paren\n   | \"(\" Pat \":\" Type \")\"      -- typed\n   | \"(\" ListOf<Pat, \",\"> \")\"  -- tuple\n   | \"[\" ListOf<Pat, \";\"> \"]\"  -- list\n   | \"_\"                       -- wild\n   | ident                     -- ident\n   | number                    -- number\n   | trueK                     -- true\n   | falseK                    -- false\n\n OrExp\n   = OrExp \"||\" AndExp  -- or\n   | AndExp\n\n AndExp\n   = AndExp \"&&\" EqExp  -- and\n   | EqExp\n\n EqExp\n   = RelExp \"=\"  RelExp  -- eq\n   | RelExp \"!=\" RelExp  -- neq\n   | RelExp\n\n RelExp\n   = AddExp \"<\" AddExp  -- lt\n   | AddExp \">\" AddExp  -- gt\n   | AddExp\n\n AddExp\n   = AddExp \"+\" MulExp  -- plus\n   | AddExp \"-\" MulExp  -- minus\n   | MulExp\n\n MulExp\n   = MulExp \"*\" CallExp  -- times\n   | MulExp \"/\" CallExp  -- divide\n   | MulExp \"%\" CallExp  -- modulus\n   | CallExp\n\n CallExp\n   =  CallExp PriExp  -- call\n   |  UnExp\n\n UnExp\n   = \"+\" DatumExp    -- pos\n   | \"-\" DatumExp    -- neg\n   | delay DatumExp  -- delay\n   | force DatumExp  -- force\n   | DatumExp\n\n DatumExp\n   = ctor PriExp  -- datum\n   | PriExp\n\n PriExp\n   = ctor                                       -- emptyDatum\n   | \"(\" Exp \")\"                                -- paren\n   | \"(\" Exp \":\" Type \")\"                       -- typed\n   | \"(\" ListOf<Exp, \",\"> \")\"                   -- tuple\n   | \"[\" Exp \"|\" Pat \"<-\" Exp (\",\" Exp)? \"]\"    -- listComp\n   | \"[\" ListOf<Exp, \";\"> \"]\"                   -- list\n   | ident                                      -- ident\n   | number                                     -- number\n   | trueK                                      -- true\n   | falseK                                     -- false\n\n Type\n   = FunType\n\n FunType\n   = TupleType \"->\" FunType  -- fun\n   | TupleType\n\n TupleType\n   = ListOrDelayedType (\"*\" ListOrDelayedType)+  -- tuple\n   | ListOrDelayedType\n\n ListOrDelayedType\n   = ListOrDelayedType list     -- list\n   | ListOrDelayedType delayed  -- delayed\n   | PriType\n\n PriType\n   = \"(\" Type \")\"  -- paren\n   | int           -- int\n   | bool          -- bool\n   | unit          -- unit\n   | typeVar\n\n typeVar  (a type variable)\n   = \"'\" ident\n\n // Lexical rules\n\n ident  (an identifier)\n   = ~keyword lower alnum*\n\n ctor  (a data ctor)\n   = ~keyword upper alnum*\n\n number  (a number)\n   = digit* \".\" digit+  -- fract\n   | digit+             -- whole\n\n fun = \"fun\" ~alnum\n\n let    = \"let\" ~alnum\n rec    = \"rec\" ~alnum\n in     = \"in\" ~alnum\n\n if   = \"if\" ~alnum\n then = \"then\" ~alnum\n else = \"else\" ~alnum\n\n match = \"match\" ~alnum\n with  = \"with\" ~alnum\n\n trueK  = \"true\" ~alnum\n falseK = \"false\" ~alnum\n\n delay = \"delay\" ~alnum\n force = \"force\" ~alnum\n\n int = \"int\" ~alnum\n bool = \"bool\" ~alnum\n unit = \"unit\" ~alnum\n list = \"list\" ~alnum\n delayed = \"delayed\" ~alnum\n\n keyword\n   = fun   | let  | rec   | in      | if    | then  | else\n   | match | with | trueK | falseK  | delay | force | int\n   | bool  | unit | list  | delayed\n\n space\n  += comment\n\n comment\n   = \"/*\" (~\"*/\" any)* \"*/\"  -- multiLine\n   | \"//\" (~\"\\\\n\" any)*       -- singleLine\n\n tokens\n   = (keyword | ident | ctor | number | comment | any)*\n\n}\n`;\n\nvar Arithmetic = `\nArithmetic {\nExp\n  = AddExp\n\nAddExp\n  = AddExp \"+\" MulExp  -- plus\n  | AddExp \"-\" MulExp  -- minus\n  | MulExp\n\nMulExp\n  = MulExp \"*\" ExpExp  -- times\n  | MulExp \"/\" ExpExp  -- divide\n  | ExpExp\n\nExpExp\n  = PriExp \"^\" ExpExp  -- power\n  | PriExp\n\nPriExp\n  = \"(\" Exp \")\"  -- paren\n  | \"+\" PriExp   -- pos\n  | \"-\" PriExp   -- neg\n  | ident\n  | number\n\nident  (an identifier)\n  = letter alnum*\n\nnumber  (a number)\n  = digit* \".\" digit+  -- fract\n  | digit+             -- whole\n}\n`;\n/* eslint-enable no-unused-vars */\n\nexport var grammarSource = Arithmetic;\ngrammar = ohm.grammar(grammarSource);\n\nvar namespaceObj = {};\nnamespaceObj[grammar.name] = grammar;\nnamespace = ohm.createNamespace(namespaceObj);\n\nexport default grammar;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/grammar.js\n **/","/* eslint-env browser */\n\n/* eslint-disable no-unused-vars */\nvar utils = (function() {\n  /* eslint-enable no-unused-vars */\n\n  // polyfill for Object.assign (taken from mdn)\n  if (typeof Object.assign !== 'function') {\n    Object.assign = function(target) {\n      if (target == null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      target = Object(target);\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n        if (source != null) {\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n      }\n      return target;\n    };\n  }\n\n  function objectForEach(obj, func) {\n    Object.keys(obj).forEach(function(key) {\n      return func(key, obj[key], obj);\n    });\n  }\n\n  return {\n    objectForEach: objectForEach,\n    objectMap: function(obj, func) {\n      return Object.keys(obj).map(function(key) {\n        return func(key, obj[key], obj);\n      });\n    },\n\n    $: function(query) { return document.querySelector(query); },\n\n    $$: function(query) {\n      return Array.prototype.slice.call(document.querySelectorAll(query));\n    },\n\n    _: function(tagName, attributes) {\n      var children = Array.prototype.slice.call(arguments, 2);\n      attributes = attributes || {};\n      children = children || [];\n\n      /* eslint-disable no-undef */\n      var element = document.createElement(tagName);\n      /* eslint-enable no-undef */\n      objectForEach(attributes, function(attr, val) {\n        element.setAttribute(attr, val);\n      });\n      children.forEach(function(child) {\n        element.appendChild(child);\n      });\n      return element;\n    },\n\n    t: function(text) {\n      return document.createTextNode(text);\n    },\n\n    clearDOMNode: function(domNode) {\n      while (domNode.firstChild) {\n        domNode.removeChild(domNode.firstChild);\n      }\n    },\n\n    repeat: function(n, fn) {\n      if (n < 0) { return; }\n      while (n > 0) {\n        fn(n);\n        n--;\n      }\n    },\n\n    shuffle: function(a) {\n      /* eslint-disable one-var */\n      var j, x, i;\n      /* eslint-enable one-var */\n\n      for (i = a.length; i; i -= 1) {\n        j = Math.floor(Math.random() * i);\n        x = a[i - 1];\n        a[i - 1] = a[j];\n        a[j] = x;\n      }\n    },\n\n    // same as a\\b\n    difference: function(a, b) {\n      return a.filter(function(item) {\n        return !b.includes(item);\n      });\n    }\n  };\n})();\n\nif (typeof exports === 'object') {\n  module.exports = utils;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","var nextKey = 0;\nvar store = {};\n\nexport function addData(data) {\n  let newKey = nextKey++;\n  store[newKey] = data;\n  return newKey;\n}\n\nexport function getData(key) {\n  return store[key];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dropUtils.js\n **/","/* @jsx plainJSX */\n\nimport CheckedEmitter from \"checked-emitter\";\n\nimport grammar from \"../grammar.js\";\nimport * as ohm from \"../../third_party/ohm.js\";\nimport {duplicate} from \"../pexprUtils.js\";\nimport makePexpr from \"../makePexpr.js\";\n\nexport default class StructuredExampleInput extends CheckedEmitter {\n  constructor(ruleName) {\n    super();\n\n    this.ruleName = ruleName;\n    this.pexpr = this._pexpr(ruleName);\n    this.component = makePexpr(this.pexpr);\n\n    this._tagNextEntry();\n  }\n\n  get DOM() { return this.component.DOM; }\n\n  // TODO: this doesn't account for parametrized rules\n  _pexpr(ruleName) {\n    if (ruleName.includes('_')) {\n      return duplicate(grammar.rules[ruleName].body, ruleName);\n    } else {\n      let pexpr = new ohm.pexprs.Seq([new ohm.pexprs.Apply(ruleName)]);\n      pexpr = duplicate(pexpr, ruleName);\n      return pexpr;\n    }\n  }\n\n  visualReplace(subPexpr, index) {\n    this.firstEntry.visualReplace(subPexpr, index);\n  }\n\n  _tagNextEntry() {\n    this.component.tagNextEntry(this);\n  }\n\n  get firstEntry() { return this.nextEntry; }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/structuredExampleInput.js\n **/","// Copyright (c) 2016 Patrick Dubroy <pdubroy@gmail.com>\n// This software is distributed under the terms of the MIT License.\n\n'use strict';\n\nvar EventEmitter = require('fbemitter').EventEmitter;\nvar inherits = require('inherits');\n\nvar ArrayProto = Array.prototype;\n\n// When set to true, skip checks in certain cases.\nvar relaxed = false;\n\n// CheckedEmitter\n// --------------\n\nfunction CheckedEmitter() {\n  EventEmitter.call(this);\n  this._eventTypes = Object.create(null);\n}\ninherits(CheckedEmitter, EventEmitter);\nvar SUPER_PROTO = EventEmitter.prototype;\n\n// Register a new event type `eventType`. The remaining arguments are\n// descriptive names of the arguments that will be passed to the callback.\n// E.g., `e.register('propchange', 'propName', 'oldValue', 'newValue')`.\nCheckedEmitter.prototype.registerEvent = function(eventType /* ...args */) {\n  if (eventType in this._eventTypes) {\n    throw new Error(\n        \"Event type '\" + eventType + \"' has already been registered\");\n  }\n  var params = ArrayProto.slice.call(arguments, 1);\n  this._eventTypes[eventType] = {name: eventType, params: params};\n};\n\n// Shorthand for registering multiple events at once.\n// `obj` is a map of event types to an Array of event parameters.\nCheckedEmitter.prototype.registerEvents = function(obj) {\n  var self = this;\n  Object.keys(obj).forEach(function(name) {\n    self.registerEvent.apply(self, [name].concat(obj[name]));\n  });\n};\n\n// Return an Array of objects representing every event that has been\n// registered on this emitter.\nCheckedEmitter.prototype.events = function() {\n  var self = this;\n  return Object.keys(this._eventTypes).map(function(name) {\n    return self._eventTypes[name];\n  });\n};\n\nCheckedEmitter.prototype._checkEventType = function(type, optArrLike, what) {\n  if (!(type in this._eventTypes)) {\n    throw new TypeError(\"'\" + type + \"' is not a registered event type\");\n  }\n  if (optArrLike) {\n    var evt = this._eventTypes[type];\n    if (evt.params.length !== optArrLike.length) {\n      var message = 'Wrong ' + what + \" for '\" + type + \"': \" +\n          'expected ' + evt.params.length + ', got ' + optArrLike.length;\n      throw new TypeError(message);\n    }\n  }\n};\n\n// The methods below here are all identical to those on fbemitter, except they\n// throw an error if `eventType` does not match a registered event.\n// See https://github.com/facebook/emitter for more info.\n\nCheckedEmitter.prototype.addListener = function(eventType, callback) {\n  if (!relaxed) {\n    this._checkEventType(eventType, callback, 'callback arity');\n  }\n  return SUPER_PROTO.addListener.apply(this, arguments);\n};\n\nCheckedEmitter.prototype.once = function(eventType, callback) {\n  this._checkEventType(eventType, callback, 'callback arity');\n\n  // The super `once` implementation calls addListener with a wrapped callback.\n  // Relax the checks to avoid raising a spurious error.\n  relaxed = true;\n  var result = SUPER_PROTO.once.apply(this, arguments);\n  relaxed = false;\n  return result;\n};\n\nCheckedEmitter.prototype.removeAllListeners = function(optEventType) {\n  if (optEventType) {\n    this._checkEventType(optEventType);\n  }\n  return SUPER_PROTO.removeAllListeners.apply(this, arguments);\n};\n\nCheckedEmitter.prototype.listeners = function(eventType) {\n  this._checkEventType(eventType);\n  return SUPER_PROTO.listeners.apply(this, arguments);\n};\n\nCheckedEmitter.prototype.emit = function(eventType /* ...args */) {\n  var args = ArrayProto.slice.call(arguments, 1);\n  this._checkEventType(eventType, args, 'number of arguments');\n  return SUPER_PROTO.emit.apply(this, arguments);\n};\n\nmodule.exports = CheckedEmitter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/checked-emitter/index.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar fbemitter = {\n  EventEmitter: require('./lib/BaseEventEmitter')\n};\n\nmodule.exports = fbemitter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbemitter/index.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BaseEventEmitter\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EmitterSubscription = require('./EmitterSubscription');\nvar EventSubscriptionVendor = require('./EventSubscriptionVendor');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @class BaseEventEmitter\n * @description\n * An EventEmitter is responsible for managing a set of listeners and publishing\n * events to them when it is told that such events happened. In addition to the\n * data for the given event it also sends a event control object which allows\n * the listeners/handlers to prevent the default behavior of the given event.\n *\n * The emitter is designed to be generic enough to support all the different\n * contexts in which one might want to emit events. It is a simple multicast\n * mechanism on top of which extra functionality can be composed. For example, a\n * more advanced emitter may use an EventHolder and EventFactory.\n */\n\nvar BaseEventEmitter = (function () {\n  /**\n   * @constructor\n   */\n\n  function BaseEventEmitter() {\n    _classCallCheck(this, BaseEventEmitter);\n\n    this._subscriber = new EventSubscriptionVendor();\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a listener to be invoked when events of the specified type are\n   * emitted. An optional calling context may be provided. The data arguments\n   * emitted will be passed to the listener function.\n   *\n   * TODO: Annotate the listener arg's type. This is tricky because listeners\n   *       can be invoked with varargs.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.addListener = function addListener(eventType, listener, context) {\n    return this._subscriber.addSubscription(eventType, new EmitterSubscription(this._subscriber, listener, context));\n  };\n\n  /**\n   * Similar to addListener, except that the listener is removed after it is\n   * invoked once.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke only once when the\n   *   specified event is emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.once = function once(eventType, listener, context) {\n    var emitter = this;\n    return this.addListener(eventType, function () {\n      emitter.removeCurrentListener();\n      listener.apply(context, arguments);\n    });\n  };\n\n  /**\n   * Removes all of the registered listeners, including those registered as\n   * listener maps.\n   *\n   * @param {?string} eventType - Optional name of the event whose registered\n   *   listeners to remove\n   */\n\n  BaseEventEmitter.prototype.removeAllListeners = function removeAllListeners(eventType) {\n    this._subscriber.removeAllSubscriptions(eventType);\n  };\n\n  /**\n   * Provides an API that can be called during an eventing cycle to remove the\n   * last listener that was invoked. This allows a developer to provide an event\n   * object that can remove the listener (or listener map) during the\n   * invocation.\n   *\n   * If it is called when not inside of an emitting cycle it will throw.\n   *\n   * @throws {Error} When called not during an eventing cycle\n   *\n   * @example\n   *   var subscription = emitter.addListenerMap({\n   *     someEvent: function(data, event) {\n   *       console.log(data);\n   *       emitter.removeCurrentListener();\n   *     }\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   *   emitter.emit('someEvent', 'def'); // does not log anything\n   */\n\n  BaseEventEmitter.prototype.removeCurrentListener = function removeCurrentListener() {\n    !!!this._currentSubscription ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Not in an emitting cycle; there is no current subscription') : invariant(false) : undefined;\n    this._subscriber.removeSubscription(this._currentSubscription);\n  };\n\n  /**\n   * Returns an array of listeners that are currently registered for the given\n   * event.\n   *\n   * @param {string} eventType - Name of the event to query\n   * @return {array}\n   */\n\n  BaseEventEmitter.prototype.listeners = function listeners(eventType) /* TODO: Array<EventSubscription> */{\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {\n      return subscription.listener;\n    }) : [];\n  };\n\n  /**\n   * Emits an event of the given type with the given data. All handlers of that\n   * particular type will be notified.\n   *\n   * @param {string} eventType - Name of the event to emit\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   *\n   * @example\n   *   emitter.addListener('someEvent', function(message) {\n   *     console.log(message);\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   */\n\n  BaseEventEmitter.prototype.emit = function emit(eventType) {\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    if (subscriptions) {\n      var keys = Object.keys(subscriptions);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        var subscription = subscriptions[key];\n        // The subscription may have been removed during this event loop.\n        if (subscription) {\n          this._currentSubscription = subscription;\n          this.__emitToSubscription.apply(this, [subscription].concat(Array.prototype.slice.call(arguments)));\n        }\n      }\n      this._currentSubscription = null;\n    }\n  };\n\n  /**\n   * Provides a hook to override how the emitter emits an event to a specific\n   * subscription. This allows you to set up logging and error boundaries\n   * specific to your environment.\n   *\n   * @param {EmitterSubscription} subscription\n   * @param {string} eventType\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   */\n\n  BaseEventEmitter.prototype.__emitToSubscription = function __emitToSubscription(subscription, eventType) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    subscription.listener.apply(subscription.context, args);\n  };\n\n  return BaseEventEmitter;\n})();\n\nmodule.exports = BaseEventEmitter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbemitter/lib/BaseEventEmitter.js\n ** module id = 10\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\n(function () {\n    try {\n        cachedSetTimeout = setTimeout;\n    } catch (e) {\n        cachedSetTimeout = function () {\n            throw new Error('setTimeout is not defined');\n        }\n    }\n    try {\n        cachedClearTimeout = clearTimeout;\n    } catch (e) {\n        cachedClearTimeout = function () {\n            throw new Error('clearTimeout is not defined');\n        }\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        return setTimeout(fun, 0);\n    } else {\n        return cachedSetTimeout.call(null, fun, 0);\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        clearTimeout(marker);\n    } else {\n        cachedClearTimeout.call(null, marker);\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EmitterSubscription\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventSubscription = require('./EventSubscription');\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\n\nvar EmitterSubscription = (function (_EventSubscription) {\n  _inherits(EmitterSubscription, _EventSubscription);\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  function EmitterSubscription(subscriber, listener, context) {\n    _classCallCheck(this, EmitterSubscription);\n\n    _EventSubscription.call(this, subscriber);\n    this.listener = listener;\n    this.context = context;\n  }\n\n  return EmitterSubscription;\n})(EventSubscription);\n\nmodule.exports = EmitterSubscription;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbemitter/lib/EmitterSubscription.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventSubscription\n * @typechecks\n */\n\n'use strict';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EventSubscription = (function () {\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n\n  function EventSubscription(subscriber) {\n    _classCallCheck(this, EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n  EventSubscription.prototype.remove = function remove() {\n    if (this.subscriber) {\n      this.subscriber.removeSubscription(this);\n      this.subscriber = null;\n    }\n  };\n\n  return EventSubscription;\n})();\n\nmodule.exports = EventSubscription;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbemitter/lib/EventSubscription.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * Copyright (c) 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EventSubscriptionVendor\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * EventSubscriptionVendor stores a set of EventSubscriptions that are\n * subscribed to a particular event type.\n */\n\nvar EventSubscriptionVendor = (function () {\n  function EventSubscriptionVendor() {\n    _classCallCheck(this, EventSubscriptionVendor);\n\n    this._subscriptionsForType = {};\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a subscription keyed by an event type.\n   *\n   * @param {string} eventType\n   * @param {EventSubscription} subscription\n   */\n\n  EventSubscriptionVendor.prototype.addSubscription = function addSubscription(eventType, subscription) {\n    !(subscription.subscriber === this) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The subscriber of the subscription is incorrectly set.') : invariant(false) : undefined;\n    if (!this._subscriptionsForType[eventType]) {\n      this._subscriptionsForType[eventType] = [];\n    }\n    var key = this._subscriptionsForType[eventType].length;\n    this._subscriptionsForType[eventType].push(subscription);\n    subscription.eventType = eventType;\n    subscription.key = key;\n    return subscription;\n  };\n\n  /**\n   * Removes a bulk set of the subscriptions.\n   *\n   * @param {?string} eventType - Optional name of the event type whose\n   *   registered supscriptions to remove, if null remove all subscriptions.\n   */\n\n  EventSubscriptionVendor.prototype.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\n    if (eventType === undefined) {\n      this._subscriptionsForType = {};\n    } else {\n      delete this._subscriptionsForType[eventType];\n    }\n  };\n\n  /**\n   * Removes a specific subscription. Instead of calling this function, call\n   * `subscription.remove()` directly.\n   *\n   * @param {object} subscription\n   */\n\n  EventSubscriptionVendor.prototype.removeSubscription = function removeSubscription(subscription) {\n    var eventType = subscription.eventType;\n    var key = subscription.key;\n\n    var subscriptionsForType = this._subscriptionsForType[eventType];\n    if (subscriptionsForType) {\n      delete subscriptionsForType[key];\n    }\n  };\n\n  /**\n   * Returns the array of subscriptions that are currently registered for the\n   * given event type.\n   *\n   * Note: This array can be potentially sparse as subscriptions are deleted\n   * from it when they are removed.\n   *\n   * TODO: This returns a nullable array. wat?\n   *\n   * @param {string} eventType\n   * @return {?array}\n   */\n\n  EventSubscriptionVendor.prototype.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\n    return this._subscriptionsForType[eventType];\n  };\n\n  return EventSubscriptionVendor;\n})();\n\nmodule.exports = EventSubscriptionVendor;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbemitter/lib/EventSubscriptionVendor.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/invariant.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n\"use strict\";\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fbjs/lib/emptyFunction.js\n ** module id = 16\n ** module chunks = 0\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/inherits/inherits_browser.js\n ** module id = 17\n ** module chunks = 0\n **/","import * as ohm from \"../third_party/ohm.js\";\nimport grammar from \"./grammar.js\";\n\n// assumes order of args is same as order of terms\nlet collections = {\n  Alt: 'terms',\n  Seq: 'factors',\n  Apply: 'args'\n};\n\nexport function duplicate(pexpr, optRuleName) {\n  let ans;\n\n  if (collections.hasOwnProperty(pexpr.constructor.name)) {\n    let collectionKey = collections[pexpr.constructor.name];\n    let dupCollection = pexpr[collectionKey].map(item => duplicate(item, optRuleName));\n\n    let values = Object.keys(pexpr).map(key => pexpr[key]);\n    values[Object.keys(pexpr).indexOf(collectionKey)] = dupCollection;\n\n    ans = new pexpr.constructor(...values);\n  } else if (pexpr instanceof ohm.pexprs.Iter) {\n    ans = new pexpr.constructor(duplicate(pexpr.expr, optRuleName));\n  } else {\n    let values = Object.keys(pexpr).map(key => pexpr[key]);\n    ans = new pexpr.constructor(...values);\n  }\n\n  if (optRuleName) {\n    ans.bodyRuleName = optRuleName;\n  }\n  return ans;\n}\n\nexport function substable(parent, child) {\n  let candidate = parentRule(child);\n  while (candidate && candidate !== parent) {\n    candidate = parentRule(candidate);\n  }\n\n  // could also do return 'candidate;', but this is more explicit\n  if (candidate) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// TODO: is there a less brittle way to do this?\nfunction parentRule(ruleName) {\n  if (ruleName.includes('_')) {\n    return ruleName.slice(0, ruleName.lastIndexOf('_'));\n  } else {\n    return Object.keys(grammar.rules).find(gRuleName => {\n      let body = grammar.rules[gRuleName].body;\n      return (body instanceof ohm.pexprs.Apply && body.ruleName === ruleName) ||\n             (body instanceof ohm.pexprs.Alt &&\n              body.terms.some(term =>\n                term instanceof ohm.pexprs.Apply &&\n                term.ruleName === ruleName\n              ));\n    });\n  }\n}\n\nexport function isSyntactic(ruleName) {\n  var firstChar = ruleName[0];\n  return firstChar === firstChar.toUpperCase();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pexprUtils.js\n **/","import * as ohm from \"../third_party/ohm.js\";\n\nimport Pexpr from \"./components/pexpr.js\";\nimport Apply from \"./components/apply.js\";\nimport Seq from \"./components/seq.js\";\nimport Terminal from \"./components/terminal.js\";\nimport Star from \"./components/star.js\";\nimport Plus from \"./components/plus.js\";\n\n// TODO: it might be worth it to add generic checking to pexprs\n//   if so, we need a function to spoof state for pexpr-eval\n\nexport default function makePexpr(pexpr) {\n  let ans;\n\n  if (pexpr instanceof ohm.pexprs.Seq) {\n    ans = new Seq(pexpr);\n  } else if (pexpr instanceof ohm.pexprs.Terminal) {\n    ans = new Terminal(pexpr);\n  } else if (pexpr instanceof ohm.pexprs.Apply) {\n    ans = new Apply(pexpr);\n  } else if (pexpr instanceof ohm.pexprs.Star) {\n    ans = new Star(pexpr);\n  } else if (pexpr instanceof ohm.pexprs.Plus) {\n    ans = new Plus(pexpr);\n  } else {\n    ans = new Pexpr(pexpr);\n  }\n\n  return ans;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/makePexpr.js\n **/","/* @jsx plainJSX */\nrequire(\"../../stylesheets/components/pexpr.css\");\n\nimport * as ohm from \"../../third_party/ohm.js\";\nimport {namespace, default as grammar} from \"../grammar.js\";\nimport CheckedEmitter from \"checked-emitter\";\n\nimport {isSyntactic} from \"../pexprUtils.js\";\n\nconst SETTLED_CHANGE_LAG = 500; // ms\n\nexport default class Pexpr extends CheckedEmitter {\n  constructor(pexpr) {\n    super();\n\n    this.registerEvent(\"settledChange\", 'event');\n\n    this.pexpr = pexpr;\n    this.DOM = <input type=\"text\" class=\"pexpr\" placeholder={pexpr.toString()}/>;\n    this.DOM.addEventListener('input', e => this.onChange(e));\n    this.DOM.component = this;\n\n    this.matchRuleName = `${isSyntactic(this.pexpr.bodyRuleName) ? 'R' : 'r'}ule`;\n    this.grammar = ohm.grammar(`\n      PExprGrammar <: ${grammar.name} {\n        ${this.matchRuleName} = ${this.pexpr.toString()}\n      }\n    `, namespace);\n\n    this.addListener('settledChange', e => this.onSettledChange(e));\n  }\n\n  match(input) {\n    return this.grammar.match(input, this.matchRuleName);\n  }\n\n  onChange(event) {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n    }\n    this._timeout = setTimeout(() => this.emit('settledChange', event), SETTLED_CHANGE_LAG);\n\n    if (this.match(this.DOM.value).succeeded()) {\n      this.setValid(true);\n    } else if (this.nextEntry &&\n               this.match(this.DOM.value.slice(0, -1)).succeeded() &&\n               this.nextEntry.match(this.DOM.value.slice(-1)).succeeded()) {\n      let lastChar = this.DOM.value.slice(-1);\n      this.DOM.value = this.DOM.value.slice(0, -1);\n      this.focusNextElementWithChar(lastChar);\n      this.setValid(true);\n    } else {\n      this.setValid(false);\n    }\n  }\n\n  onSettledChange(event) {\n  }\n\n  focusNextElementWithChar(char) {\n    if (this.nextEntry && this.nextEntry.isUserEditable) {\n      this.nextEntry.DOM.focus();\n      this.nextEntry.DOM.value = char;\n    } else if (this.nextEntry) {\n      this.nextEntry.DOM.focus();\n      this.nextEntry.onKeyDown({key: char, preventDefault: function() {}});\n    }\n  }\n\n  setValid(isValid) {\n    this.DOM.classList.toggle('valid', isValid);\n    this.DOM.classList.toggle('invalid', !isValid);\n  }\n\n  visualReplace(subPexpr, index) { // can only swap at apply\n    if (this.nextEntry) {\n      this.nextEntry.visualReplace(subPexpr, index);\n    }\n  }\n\n  replaceSelf(component) {\n    this.parent.replaceChild(component, this);\n  }\n\n  get children() { return null; }\n  get pexprChildren() { return null; }\n\n  get parent() { return this.DOM.parentElement.component; }\n\n  // superimposes a linked list over the tree, linking each\n  //  element to the next element in the composable input\n  tagNextEntry(prev) {\n    if (prev) {\n      prev.nextEntry = this;\n      this.prevEntry = prev;\n    }\n\n    return this;\n  }\n\n  get isUserEditable() { return true; }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/pexpr.js\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./stylesheets/components/pexpr.css\n ** module id = 21\n ** module chunks = 0\n **/","/* @jsx plainJSX */\n\nimport grammar from \"../grammar.js\";\nimport makePexpr from \"../makePexpr.js\";\nimport {substable, duplicate} from \"../pexprUtils.js\";\nimport {getData} from \"../dropUtils.js\";\n\nimport Pexpr from \"./pexpr.js\";\n\nexport default class Apply extends Pexpr {\n  constructor(pexpr) {\n    super(pexpr);\n\n    this._timeout = null;\n\n    this.DOM = <input type=\"text\" class=\"pexpr apply\" placeholder={pexpr.toString()}/>;\n    this.DOM.component = this;\n\n    this.DOM.addEventListener('input', e => this.onChange(e));\n    this.DOM.addEventListener('dragover', e => this.onDragOver(e));\n    this.DOM.addEventListener('drop', e => this.onDrop(e));\n  }\n\n  match(input) {\n    return grammar.match(input, this.pexpr.ruleName);\n  }\n\n  visualReplace(subPexpr, index) {\n    index--;\n    if (index === -1) {\n      if (substable(this.pexpr.ruleName, subPexpr.bodyRuleName)) {\n        subPexpr = duplicate(subPexpr, subPexpr.bodyRuleName);\n        this.replaceSelf(makePexpr(subPexpr));\n      } else {\n        throw new Error(`an application of ${this.pexpr.ruleName} cannot be replaced ` +\n                        `by the body of ${subPexpr.bodyRuleName}`);\n      }\n    } else if (this.nextEntry) {\n      this.nextEntry.visualReplace(subPexpr, index);\n    }\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n    let inputElement = getData(event.dataTransfer.getData('text/plain'));\n    let subPexpr = inputElement.pexpr;\n    if (substable(this.pexpr.ruleName, subPexpr.bodyRuleName)) {\n      event.dataTransfer.dropEffect = 'copy';\n    } else {\n      event.dataTransfer.dropEffect = 'none';\n    }\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n\n    let inputElement = getData(event.dataTransfer.getData('text/plain'));\n    let subPexpr = inputElement.pexpr;\n    if (substable(this.pexpr.ruleName, subPexpr.bodyRuleName)) {\n      subPexpr = duplicate(subPexpr, subPexpr.bodyRuleName);\n      this.replaceSelf(makePexpr(subPexpr));\n    }\n  }\n\n  // same leaf implementation for tagNextEntry as Pexpr\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/apply.js\n **/","/* @jsx plainJSX */\nrequire(\"../../stylesheets/components/seq.css\");\n\nimport makePexpr from \"../makePexpr.js\";\n\nimport PexprWithChildren from \"./pexprWithChildren.js\";\n\n// TODO: allow for editing of whitespace in between\n// TODO: account for whether we are in a lexical or syntactic rule (only do syn for now)\n\n// Seq\nexport default class Seq extends PexprWithChildren {\n  constructor(pexpr) {\n    super(pexpr);\n\n    this.factorComponents = this.pexpr.factors.map(factor => makePexpr(factor));\n    this.DOM = <span class=\"pexpr seq\">{\n      this.factorComponents.map(factorComponent => factorComponent.DOM)\n    }</span>;\n    this.DOM.component = this;\n  }\n\n  get children() { return this.factorComponents; }\n  get pexprChildren() { return this.pexpr.factors; }\n\n  get isUserEditable() { return false; }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/seq.js\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./stylesheets/components/seq.css\n ** module id = 27\n ** module chunks = 0\n **/","/* @jsx plainJSX */\nrequire(\"../../stylesheets/components/terminal.css\");\n\nimport Pexpr from \"./pexpr.js\";\n\nexport default class Terminal extends Pexpr {\n  constructor(pexpr) {\n    super(pexpr);\n\n    this.DOM = <span class=\"pexpr terminal\" contenteditable=\"true\">{\n      this.pexpr.obj\n    }</span>;\n    this.DOM.component = this;\n    this.DOM.addEventListener('keydown', e => this.onKeyDown(e));\n    this.DOM.addEventListener('dragover', e => this.onDragOver(e));\n    this.DOM.addEventListener('drop', e => this.onDrop(e));\n\n    // TODO: reset this on unfocus\n    this.partiallyConsumedString = this.pexpr.obj;\n  }\n\n  // visualReplace(_, index) { return index; }\n\n  onKeyDown(event) {\n    if (event.key.length === 1) {\n      event.preventDefault();\n      if (this.partiallyConsumedString.slice(0, 1) === event.key) {\n        this.partiallyConsumedString = this.partiallyConsumedString.slice(1);\n        if (this.partiallyConsumedString === '' &&\n            this.nextEntry) {\n          this.partiallyConsumedString = this.pexpr.obj;\n          this.nextEntry.DOM.focus();\n        }\n      } else if (this.nextEntry) {\n        this.focusNextElementWithChar(event.key);\n      }\n    }\n  }\n\n  onDragOver(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'none';\n    return false;\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    return false;\n  }\n\n  // same leaf implementation for tagNextEntry as Pexpr\n\n  get isUserEditable() { return false; }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/terminal.js\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./stylesheets/components/terminal.css\n ** module id = 30\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./stylesheets/style.css\n ** module id = 32\n ** module chunks = 0\n **/","/* @jsx plainJSX */\n\nimport Pexpr from \"./pexpr.js\";\n\n// this.children should return somthing for subclasses of this class\nexport default class PexprWithChildren extends Pexpr {\n  constructor(pexpr) {\n    super(pexpr);\n\n    if (new.target === PexprWithChildren) {\n      throw new TypeError('Cannot construct PexprWithChildren directly');\n    }\n  }\n\n  tagNextEntry(prev) {\n    this.children.forEach(child => {\n      prev = child.tagNextEntry(prev);\n    });\n\n    return prev;\n  }\n\n  replaceChild(newChild, oldChild) {\n    let index = this.children.indexOf(oldChild);\n    this.children[index] = newChild;\n    if (this.pexprChildren) {\n      this.pexprChildren[index] = newChild.pexpr;\n    }\n    this.DOM.replaceChild(newChild.DOM, oldChild.DOM);\n\n    this.fixNextEntries(index, newChild, oldChild);\n  }\n\n  fixNextEntries(index, newChild, oldChild) {\n    // thread previous entry through new child\n    let next = newChild.tagNextEntry(oldChild.prevEntry);\n    // thread last entry of new piece through the rest of the tree\n    if (oldChild.nextEntry) {\n      oldChild.nextEntry.tagNextEntry(next);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/pexprWithChildren.js\n **/","/* @jsx plainJSX */\n\nimport makePexpr from \"../makePexpr.js\";\n\nimport PexprWithChildren from \"./pexprWithChildren.js\";\n\nexport default class Star extends PexprWithChildren {\n  constructor(pexpr) {\n    super(pexpr);\n\n    this.items = [makePexpr(this.pexpr.expr)];\n    this.DOM = <span class=\"pexpr star\">{\n      this.items.map(item => item.DOM)\n    }</span>;\n    this.DOM.component = this;\n  }\n\n  get children() { return this.items; }\n  get pexprChildren() { return null; }\n\n  // TODO: maybe just manually set?\n  get isUserEditable() { return true; }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/star.js\n **/","/* @jsx plainJSX */\n\nimport makePexpr from \"../makePexpr.js\";\n\nimport PexprWithChildren from \"./pexprWithChildren.js\";\n\nexport default class Plus extends PexprWithChildren {\n  constructor(pexpr) {\n    super(pexpr);\n\n    this.items = [makePexpr(this.pexpr.expr)];\n    this.DOM = <span class=\"pexpr star\">{\n      this.items.map(item => item.DOM)\n    }<indicator>+</indicator></span>;\n    this.DOM.component = this;\n\n    this._indicator = this.DOM.querySelector('indicator');\n    this._indicator.addEventListener('click', event => {\n      if (event.shiftKey) {\n        this.removeItem();\n      } else {\n        this.addItem();\n      }\n    });\n  }\n\n  get children() { return this.items; }\n  get pexprChildren() { return null; }\n\n  // TODO: maybe just manually set?\n  get isUserEditable() { return true; }\n\n  addItem() {\n    let addedItem = makePexpr(this.pexpr.expr);\n    let addedItemPrev = this.items.slice(-1)[0];\n    let addedItemNext = addedItemPrev.nextEntry;\n\n    this.items.push(addedItem);\n    this.DOM.insertBefore(addedItem.DOM, this._indicator);\n\n    addedItem.tagNextEntry(addedItemPrev);\n    if (addedItemNext) {\n      addedItemNext.tagNextEntry(addedItem);\n    }\n  }\n\n  removeItem() {\n    let removedItem = this.items.pop;\n    this.DOM.removeChild(removedItem.DOM);\n\n    if (removedItem.nextEntry) {\n      removedItem.nextEntry.tagNextEntry(removedItem.prevEntry);\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/plus.js\n **/"],"sourceRoot":""}